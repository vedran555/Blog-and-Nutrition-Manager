{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/blog/blog.component.css","webpack:///./src/app/components/blog/blog.component.html","webpack:///./src/app/components/blog/blog.component.ts","webpack:///./src/app/components/blog/delete-blog/delete-blog.component.css","webpack:///./src/app/components/blog/delete-blog/delete-blog.component.html","webpack:///./src/app/components/blog/delete-blog/delete-blog.component.ts","webpack:///./src/app/components/blog/edit-blog/edit-blog.component.css","webpack:///./src/app/components/blog/edit-blog/edit-blog.component.html","webpack:///./src/app/components/blog/edit-blog/edit-blog.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/earlier-days/earlier-days.component.css","webpack:///./src/app/components/earlier-days/earlier-days.component.html","webpack:///./src/app/components/earlier-days/earlier-days.component.ts","webpack:///./src/app/components/edit-meal/edit-meal.component.css","webpack:///./src/app/components/edit-meal/edit-meal.component.html","webpack:///./src/app/components/edit-meal/edit-meal.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/logout/logout.component.css","webpack:///./src/app/components/logout/logout.component.html","webpack:///./src/app/components/logout/logout.component.ts","webpack:///./src/app/components/meals/meals.component.css","webpack:///./src/app/components/meals/meals.component.html","webpack:///./src/app/components/meals/meals.component.ts","webpack:///./src/app/components/navbar-item/navbar-item.component.css","webpack:///./src/app/components/navbar-item/navbar-item.component.html","webpack:///./src/app/components/navbar-item/navbar-item.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/nutrition-manager/nutrition-manager.component.css","webpack:///./src/app/components/nutrition-manager/nutrition-manager.component.html","webpack:///./src/app/components/nutrition-manager/nutrition-manager.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/material-components.module.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/blog.service.ts","webpack:///./src/app/services/comment-validator.ts","webpack:///./src/app/services/config.service.ts","webpack:///./src/app/services/dropdown-item.directive.ts","webpack:///./src/app/services/dropdown.directive.ts","webpack:///./src/app/services/login-guard.service.ts","webpack:///./src/app/services/nutrition.service.ts","webpack:///./src/app/services/screen.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { BlogComponent } from './components/blog/blog.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LogoutComponent } from './components/logout/logout.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { LoginGuardService } from './services/login-guard.service';\r\nimport { EditBlogComponent } from './components/blog/edit-blog/edit-blog.component';\r\nimport { DeleteBlogComponent } from './components/blog/delete-blog/delete-blog.component';\r\nimport { UserComponent } from './components/user/user.component';\r\nimport { NutritionManagerComponent } from './components/nutrition-manager/nutrition-manager.component';\r\nimport { EditMealComponent } from 'src/app/components/edit-meal/edit-meal.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'home', component: HomeComponent },\r\n    { path: 'dashboard', component: DashboardComponent, canActivate:[AuthGuardService] },\r\n    { path: 'blog', component: BlogComponent, canActivate:[AuthGuardService] },\r\n    { path: 'edit-blog/:id', component: EditBlogComponent, canActivate:[AuthGuardService] },\r\n    { path: 'delete-blog/:id', component: DeleteBlogComponent, canActivate:[AuthGuardService] },\r\n    { path: 'profile', component: ProfileComponent, canActivate:[AuthGuardService] },\r\n    { path: 'user/:username', component: UserComponent, canActivate:[AuthGuardService] },\r\n    { path: 'nutritionmanager', component: NutritionManagerComponent, canActivate:[AuthGuardService] },\r\n    { path: 'edit-meal/:date', component: EditMealComponent, canActivate:[AuthGuardService] },\r\n    { path: 'register', component: RegisterComponent, canActivate:[LoginGuardService] },\r\n    { path: 'login', component: LoginComponent, canActivate:[LoginGuardService] },\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: '**', redirectTo: 'home', pathMatch: 'full' }\r\n]\r\n\r\n@NgModule({\r\n    declarations: [ ],\r\n    imports: [ RouterModule.forRoot(routes) ],\r\n    providers: [ ],\r\n    bootstrap: [ ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n  })\r\n  export class AppRoutingModule { }","module.exports = \".flash {\\r\\n    text-align: center;\\r\\n    font-size: 18px;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container flash\\\">\\n    <flash-messages></flash-messages>\\n</div>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { ConfigService } from './services/config.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  constructor(\n    private configService: ConfigService\n  ) {}\n\n  ngOnInit() {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ConfigService } from './services/config.service';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarItemComponent } from './components/navbar-item/navbar-item.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { ScreenService } from './services/screen.service';\nimport { AuthService } from './services/auth.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { LoginGuardService } from './services/login-guard.service';\nimport { BlogService } from './services/blog.service';\nimport { EditBlogComponent } from './components/blog/edit-blog/edit-blog.component';\nimport { DeleteBlogComponent } from './components/blog/delete-blog/delete-blog.component';\nimport { UserComponent } from './components/user/user.component';\nimport { ValidateComment } from './services/comment-validator';\nimport { ClickOutsideDirective } from './services/dropdown.directive';\nimport { KeydownEventDirective } from './services/dropdown-item.directive';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport 'hammerjs';\nimport { NutritionManagerComponent } from './components/nutrition-manager/nutrition-manager.component';\nimport { MaterialComponentsModule } from 'src/app/material-components.module';\nimport { MealsComponent } from 'src/app/components/meals/meals.component';\nimport { EarlierDaysComponent } from 'src/app/components/earlier-days/earlier-days.component';\nimport { EditMealComponent } from 'src/app/components/edit-meal/edit-meal.component';\nimport { MatNativeDateModule } from '@angular/material';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    ProfileComponent,\n    BlogComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    NavbarItemComponent,\n    LogoutComponent,\n    EditBlogComponent,\n    DeleteBlogComponent,\n    UserComponent,\n    ValidateComment,\n    ClickOutsideDirective,\n    KeydownEventDirective,\n    NutritionManagerComponent,\n    MealsComponent,\n    EarlierDaysComponent,\n    EditMealComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MaterialComponentsModule,\n    FlashMessagesModule.forRoot(),\n    MatNativeDateModule\n    \n  ],\n  providers: [ \n    ConfigService,\n    ScreenService,\n    AuthService,\n    AuthGuardService,\n    LoginGuardService,\n    BlogService\n   ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".dropbtn {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    padding: 16px;\\r\\n    font-size: 16px;\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n/* The container <div> - needed to position the dropdown content */\\r\\n\\r\\n.dropdown {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n/* Dropdown Content (Hidden by Default) */\\r\\n\\r\\n.dropdown-content {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    background-color: #f1f1f1;\\r\\n    min-width: 160px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n/* Links inside the dropdown */\\r\\n\\r\\n.dropdown-content a {\\r\\n    color: black;\\r\\n    padding: 6px 8px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n/* Change color of dropdown links on hover */\\r\\n\\r\\n.dropdown-content a:hover {background-color: #ddd}\\r\\n\\r\\n/* Show the dropdown menu on hover */\\r\\n\\r\\n.dropdown:hover .dropdown-content {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n/* Change the background color of the dropdown button when the dropdown content is shown */\\r\\n\\r\\n.dropdown:hover .dropbtn {\\r\\n    background-color: #3e8e41;\\r\\n}\\r\\n\\r\\n/* ///////////////// */\\r\\n\\r\\nul {\\r\\n    list-style-type: none;\\r\\n    padding-left: 0px;\\r\\n}\\r\\n\\r\\nul li {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\na {\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.like-disabled:disabled {\\r\\n    background-color: #dff0df;\\r\\n    color: #09ac09;\\r\\n    cursor: default;\\r\\n    font-size: 15px;\\r\\n    font-weight: 700;\\r\\n    border: 2px solid #06f506;\\r\\n}\\r\\n\\r\\n.dislike-disabled:disabled {\\r\\n    background-color: #f0e2ce;\\r\\n    color: #f1920c;\\r\\n    cursor: default;\\r\\n    font-size: 15px;\\r\\n    font-weight: 700;\\r\\n    border: 2px solid #f1920c;\\r\\n}\\r\\n\\r\\n.profile {\\r\\n    position: absolute;\\r\\n    top: 200;\\r\\n    bottom: 200;\\r\\n    left: 400;\\r\\n    right: 400;\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n.reload {\\r\\n    z-index: 0;\\r\\n}\\r\\n\\r\\n.search {\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.row-main {\\r\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\r\\n    margin: 10px 0 0 0;\\r\\n}\\r\\n\\r\\n.second {\\r\\n    border-radius: 10px;\\r\\n    border: 1px #dddddd solid;\\r\\n}\\r\\n\\r\\n.col-md-2 {\\r\\n    height: 30px;\\r\\n    line-height: 30px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.row-search {\\r\\n    margin: 5px 0 5px 0;\\r\\n}\\r\\n\\r\\n.searchbox-wrapper-small {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    margin-bottom: 8px;\\r\\n}\\r\\n\\r\\n.searchbox {\\r\\n    border-radius: 10px;\\r\\n    border: 1px #dddddd solid;\\r\\n    width: 50%;\\r\\n    padding: 10px;\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.searchbox-small {\\r\\n    border-radius: 10px;\\r\\n    border: 1px #dddddd solid;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.input-box {\\r\\n    display: flex;\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.description {\\r\\n    width: 100px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.description-small {\\r\\n    width: 50px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.inp {\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\n.inp-small {\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n.go {\\r\\n    margin-top: 5px;\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.dropdown-container {\\r\\n    position: absolute;\\r\\n    z-index: 1;\\r\\n    background-color: #f6f6f6;\\r\\n    width: 300px;\\r\\n    /* border-left: 1px solid #7741f7;\\r\\n    border-bottom: 1px solid #7741f7;\\r\\n    border-right: 1px solid #7741f7;*/\\r\\n}\\r\\n\\r\\n.dropdown-container-small {\\r\\n    position: absolute;\\r\\n    z-index: 1;\\r\\n    background-color: #f6f6f6;\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.top-buttons {\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.searchbox-wrapper {\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.dropdown-list {\\r\\n    list-style-type: none;\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n\\r\\n.dropdown-list li {\\r\\n    margin-left: 0px;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\n.mouseover-drodown-item {\\r\\n    background-color: #d4cbcb;\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n.warning {\\r\\n    margin: 5px 0 0 23px;\\r\\n    font-size: 12px;\\r\\n    color: #adacac;\\r\\n}\\r\\n\\r\\n.warning-small {\\r\\n    margin: 5px 0 0 0;\\r\\n    font-size: 12px;\\r\\n    color: #adacac;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2 class=\\\"page-header\\\">\\n    Blog Feed\\n  </h2>\\n\\n  <div class=\\\"top-buttons\\\">\\n    <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-warning\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"newBlogForm()\\\"\\n    [ngClass]=\\\"{'btn-sm': !screenService.isLarge()}\\\">\\n      New Post\\n    </button>\\n    <button [disabled]=\\\"loadingBlogs\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-default reload\\\" \\n    *ngIf=\\\"!newPost\\\" (click)=\\\"reloadBlogs()\\\" [ngClass]=\\\"{'btn-sm': !screenService.isLarge()}\\\">\\n      <span class=\\\"glyphicon glyphicon-repeat\\\"></span>Reload\\n    </button>\\n    \\n    <button class=\\\"btn btn-default search\\\" (click)=\\\"showSearchBox=true\\\" *ngIf=\\\"!newPost && !showSearchBox\\\"\\n    [ngClass]=\\\"{'btn-sm': !screenService.isLarge()}\\\">\\n      <span class=\\\"glyphicon glyphicon-chevron-down\\\"></span> Search \\n    </button>\\n    <button class=\\\"btn btn-default search\\\" (click)=\\\"showSearchBox=false\\\" *ngIf=\\\"!newPost && showSearchBox\\\"\\n    [ngClass]=\\\"{'btn-sm': !screenService.isLarge()}\\\">\\n      <span class=\\\"glyphicon glyphicon-chevron-up\\\"></span> Hide Search</button>\\n  </div>\\n\\n  <!-- search box --> <!-- make search box responsive $##########-->\\n  <div *ngIf=\\\"showSearchBox && !newPost && !loadingBlogs\\\"\\n  [ngClass]=\\\"{'searchbox-wrapper': screenService.isLarge(), 'searchbox-wrapper-small': !screenService.isLarge()}\\\">\\n    <div [ngClass]=\\\"{'searchbox': screenService.isLarge(), 'searchbox-small': !screenService.isLarge()}\\\">\\n      <div class=\\\"input-box\\\">\\n        <div [ngClass]=\\\"{'description': screenService.isLarge(), 'description-small': !screenService.isLarge()}\\\">title:</div>\\n        <div class=\\\"input-div\\\">\\n          <div>\\n            <input type=\\\"text\\\" placeholder=\\\"Enter title\\\" (input)=\\\"titleSearch()\\\" \\n            [ngClass]=\\\"{'inp': screenService.isLarge(), 'inp-small': !screenService.isLarge()}\\\"\\n            [(ngModel)]=\\\"titleInput\\\" name=\\\"titleInput\\\" keydownEvent (keydownEvent)=\\\"onKeydown($event)\\\" \\n            (keyup.enter)=\\\"onEnter()\\\">\\n          </div>\\n          <div *ngIf=\\\"!isValidTitle()\\\" [style.font-size.px]=\\\"12\\\" [style.color]=\\\"'#adacac'\\\">\\n            <span class=\\\"glyphicon glyphicon-info-sign\\\"></span> provide some characters\\n          </div>\\n          <div *ngIf=\\\"titleCond\\\" clickOutside (clickOutside)=\\\"toggleDropdown()\\\"\\n          [ngClass]=\\\"{'dropdown-container': screenService.isLarge(), 'dropdown-container-small': !screenService.isLarge()}\\\">\\n            <ul class=\\\"dropdown-list\\\">\\n              <li class=\\\"dropdown-item\\\" *ngFor=\\\"let item of titleItems; let i=index\\\"\\n                (click)=\\\"titleItemClick(item.title)\\\" #itemm (mouseover)=\\\"mouseOver(i, item.title)\\\"\\n                (mouseout)=\\\"mouseOut()\\\"\\n                [ngClass]=\\\"{'mouseover-drodown-item': ind===i}\\\">{{item.title}}\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"input-box\\\">\\n        <div [ngClass]=\\\"{'description': screenService.isLarge(), 'description-small': !screenService.isLarge()}\\\">author:</div>\\n        <div class=\\\"input-div\\\">\\n          <div>\\n              <input type=\\\"text\\\" placeholder=\\\"Enter author\\\" (input)=\\\"authorSearch()\\\" \\n              [ngClass]=\\\"{'inp': screenService.isLarge(), 'inp-small': !screenService.isLarge()}\\\"\\n              [(ngModel)]=\\\"authorInput\\\" name=\\\"authorInput\\\" keydownEvent (keydownEvent)=\\\"onKeydownAuthor($event)\\\" \\n              (keyup.enter)=\\\"onEnterAuthor()\\\">\\n          </div>\\n          <div *ngIf=\\\"!isValidAuthor()\\\" [style.font-size.px]=\\\"12\\\" [style.color]=\\\"'#adacac'\\\">\\n              <span class=\\\"glyphicon glyphicon-info-sign\\\"></span> provide some characters\\n            </div>\\n          <div *ngIf=\\\"authorCond\\\" clickOutside (clickOutside)=\\\"toggleDropdownAuthor()\\\"\\n          [ngClass]=\\\"{'dropdown-container': screenService.isLarge(), 'dropdown-container-small': !screenService.isLarge()}\\\">\\n            <ul class=\\\"dropdown-list\\\">\\n              <li class=\\\"dropdown-item\\\" *ngFor=\\\"let item of authorItems; let i=index\\\"\\n                (click)=\\\"authorItemClick(item)\\\" (mouseover)=\\\"mouseOverAuthor(i, item)\\\"\\n                (mouseout)=\\\"mouseOutAuthor()\\\"\\n                [ngClass]=\\\"{'mouseover-drodown-item': indAuthor===i}\\\">{{item}}\\n              </li>\\n            </ul>\\n          </div>\\n          <button [disabled]=\\\"!isValidTitle() || !isValidAuthor() || (titleInput==='' && authorInput==='')\\\" \\n          class=\\\"btn btn-sm btn-primary go\\\" (click)=\\\"searchBlogs()\\\">\\n          Go\\n        </button>\\n        </div>\\n      </div>\\n      <div [ngClass]=\\\"{'warning': screenService.isLarge(), 'warning-small': !screenService.isLarge()}\\\">\\n        *leaving field empty will not filter search with it\\n      </div>\\n    </div>\\n  </div>\\n  <!-- end of search box -->\\n\\n  <br /><br />\\n\\n  \\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onBlogSubmit()\\\" *ngIf=\\\"newPost\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"center-block\\\">Title:</label>\\n        <div [ngClass]=\\\"{'has-error': (form.controls.title.errors && form.controls.title.dirty), \\n          'has-success': !form.controls.title.errors }\\\">\\n          <input class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"*Enter title\\\" formControlName=\\\"title\\\">\\n          <ul class=\\\"help-block\\\">\\n              <li *ngIf=\\\"form.controls.title.errors?.required && form.controls.title.dirty\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> Title is required\\n                </li>\\n                <li *ngIf=\\\"(form.controls.title.errors?.minlength && form.controls.title.dirty) || \\n              (form.controls.title.errors?.maxlength && form.controls.title.dirty)\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> \\n            Title has to be between 5 and 50 characters long\\n          </li>\\n          <li *ngIf=\\\"form.controls.title.errors?.validateTitle && form.controls.title.dirty && !form.controls.title.errors?.required\\\">\\n              <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> \\n              Title can contain only alphanumerical characters\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"center-block\\\">Body:</label>\\n          <div [ngClass]=\\\"{'has-error': (form.controls.body.errors && form.controls.body.dirty), \\n            'has-success': !form.controls.body.errors }\\\">\\n            <textarea name=\\\"body\\\" class=\\\"form-control\\\" rows=\\\"8\\\" cols=\\\"80\\\" placeholder=\\\"*Enter body\\\" formControlName=\\\"body\\\">\\n              </textarea>\\n            <ul class=\\\"help-block\\\">\\n              <li *ngIf=\\\"form.controls.body.errors?.required && form.controls.body.dirty\\\">\\n                <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> Body is required\\n              </li>\\n              <li *ngIf=\\\"(form.controls.body.errors?.minlength && form.controls.body.dirty) || \\n                  (form.controls.body.errors?.maxlength && form.controls.body.dirty)\\\">\\n                <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> \\n                Body has to be between 2 and 500 characters long\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n\\n        <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-warning\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n        <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\">Submit</button>\\n  \\n    </form>\\n<!-- ################### all blog posts ################### -->\\n  <div *ngIf=\\\"!newPost && !loadingBlogs && !searchPerformed\\\">\\n    <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let blog of blogPosts\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">{{blog.title}}\\n          <span [style.float]=\\\"'right'\\\" [style.font-size.px]=\\\"14\\\" *ngIf=\\\"screenService.isLarge()\\\">\\n            {{blog.createdAt | date:'medium'}}\\n          </span>\\n        </h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">{{blog.body}}</div>\\n      <div class=\\\"panel-footer\\\">\\n        <strong>Posted by:</strong> {{blog.createdBy}}\\n        <br  *ngIf=\\\"!screenService.isLarge()\\\" />\\n        <span *ngIf=\\\"!screenService.isLarge()\\\"><strong>Date:</strong> {{blog.createdAt | date:'medium'}}</span>\\n        <div *ngIf=\\\"username === blog.createdBy\\\"> <!-- only user who created this can see this div -->\\n          <strong>Likes:</strong> {{blog.likes}}\\n          <strong>Dislikes:</strong> {{blog.dislikes}}\\n        </div>\\n        \\n        <a [routerLink]=\\\"['/edit-blog/', blog._id ]\\\" *ngIf=\\\"username === blog.createdBy\\\"> <!-- only user who created this can see this div -->\\n          <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\">Edit</button>\\n        </a>\\n        <a [routerLink]=\\\"['/delete-blog/', blog._id ]\\\" *ngIf=\\\"username === blog.createdBy\\\"> <!-- only user who created this can see this div -->\\n          <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Delete</button>\\n        </a>\\n        <br />\\n        <div class=\\\"dropdown\\\">\\n          <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-success drop-btn like-disabled\\\" *ngIf=\\\"username !== blog.createdBy\\\"\\n            (click)=\\\"onLike(blog._id)\\\" [disabled]=\\\"blog.likedBy.Array.includes(username)\\\"> \\n            <!-- alternative way to check if user already liked: [disabled]=\\\"blog.likedBy.Array.indexOf(username) > -1\\\" -->\\n            <span class=\\\"glyphicon glyphicon-thumbs-up\\\"></span> {{blog.likes}}\\n          </button>\\n          <div class=\\\"dropdown-content\\\">\\n            <a [routerLink]=\\\"['/user', liker]\\\" *ngFor=\\\"let liker of blog.likedBy.Array\\\">{{liker}}</a>\\n          </div>\\n        </div>\\n        <div class=\\\"dropdown\\\">\\n          <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-warning drop-btn dislike-disabled\\\" \\n          *ngIf=\\\"username !== blog.createdBy\\\" (click)=\\\"onDislike(blog._id)\\\" [disabled]=\\\"blog.dislikedBy.Array.includes(username)\\\">\\n            <span class=\\\"glyphicon glyphicon-thumbs-down\\\"></span> {{blog.dislikes}}\\n          </button>\\n          <div class=\\\"dropdown-content\\\">\\n            <a [routerLink]=\\\"['/user', disliker]\\\" *ngFor=\\\"let disliker of blog.dislikedBy.Array\\\">{{disliker}}</a>\\n          </div>\\n        </div>\\n      </div> <!-- footer end -->\\n      <!-- comments section -->\\n      <div class=\\\"panel panel-default\\\" \\n        [style.margin-bottom.px]=\\\"0\\\" *ngFor=\\\"let comm of blog.comments\\\">\\n        <div class=\\\"panel panel-body\\\" \\n          [style.margin-bottom.px]=\\\"0\\\" *ngIf=\\\"enabledIds.includes(blog._id)\\\">\\n          <strong>{{comm.commentator}}:</strong> {{comm.comment}}\\n          <br />\\n          <span [style.font-size.px]=\\\"13\\\"><strong>Date:</strong> {{comm.createdAt | date:'medium'}}</span>\\n          <br />\\n          <button class=\\\"btn btn-sm btn-primary\\\" *ngIf=\\\"comm.commentator === username\\\" \\n          data-toggle=\\\"modal\\\" data-target=\\\"#editModal\\\" (click)=\\\"getComment(comm._id)\\\">\\n            Edit\\n          </button>\\n          <!-- Edit Modal -->\\n          <div id=\\\"editModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n              <div class=\\\"modal-dialog\\\">\\n            \\n                <!-- Modal content-->\\n                <div class=\\\"modal-content\\\">\\n                  <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                    <h4 class=\\\"modal-title\\\">Edit Comment</h4>\\n                  </div>\\n                  <div class=\\\"modal-body\\\">\\n                      <form #formEditComm=\\\"ngForm\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (editCommentBody1.errors && editCommentBody1.dirty),\\n                            'has-success': (!editCommentBody1.errors && editCommentBody1.dirty)}\\\">\\n                            <textarea class=\\\"form-control\\\" rows=\\\"2\\\" cols=\\\"15\\\" name=\\\"editCommentBody\\\" [style.margin-bottom.px]=\\\"5\\\"\\n                                [(ngModel)]=\\\"editCommentBody\\\" #editCommentBody1=\\\"ngModel\\\" \\n                                required validateComment>\\n                            </textarea>\\n                            <ul class=\\\"help-block\\\">\\n                              <li *ngIf=\\\"editCommentBody1.errors?.required && editCommentBody1.dirty\\\">\\n                                <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span> This field is required\\n                              </li>\\n                              <li *ngIf=\\\"editCommentBody1.errors?.validateComment && editCommentBody1.dirty\\\">\\n                                <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span> \\n                                Comment must contain at least one character which is not space,new line,...\\n                              </li>\\n                            </ul>\\n                          </div>\\n                          \\n                        </form>\\n                  </div> <!-- end of modal body --> \\n                  <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                    <button type=\\\"submit\\\" id=\\\"submit\\\" [disabled]=\\\"!formEditComm.valid\\\" class=\\\"btn btn-primary\\\"\\n                      data-dismiss=\\\"modal\\\" (click)=\\\"editComment()\\\">Save</button>\\n                  </div>\\n                </div> <!-- end of modal content --> \\n              </div> <!-- end of modal dialog --> \\n          </div> <!-- end of edit modal --> \\n          <button class=\\\"btn btn-sm btn-warning\\\" *ngIf=\\\"comm.commentator === username\\\"\\n          data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" (click)=\\\"toDelete=comm._id\\\">\\n            Delete\\n          </button>\\n          <!-- Delete Modal -->\\n          <div id=\\\"deleteModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n              <div class=\\\"modal-dialog\\\">\\n            \\n                <!-- Modal content-->\\n                <div class=\\\"modal-content\\\">\\n                  <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                    <h4 class=\\\"modal-title\\\">Delete Comment</h4>\\n                  </div>\\n                  <div class=\\\"modal-body\\\">\\n                    <p>Are you sure you want to delete this comment?</p>\\n                  </div>\\n                  <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" \\n                    (click)=\\\"deleteComment()\\\">Yes</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n                  </div>\\n                </div>\\n            \\n              </div>\\n          </div>\\n        </div>\\n      </div>\\n      <ul [hidden]=\\\"editingComments.includes(blog._id)\\\" class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\">\\n          <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\"\\n          *ngIf=\\\"!commentsIds.includes(blog._id)\\\" (click)=\\\"commentsIds.push(blog._id)\\\">\\n            Post Comment\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" (click)=\\\"enabledIds.push(blog._id)\\\" \\n            *ngIf=\\\"blog.comments.length>0 && !enabledIds.includes(blog._id)\\\" [style.font-weight]=\\\"600\\\">\\n            Show comments\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" (click)=\\\"enabledIds.splice(enabledIds.indexOf(blog._id), 1)\\\" \\n            *ngIf=\\\"enabledIds.includes(blog._id) && blog.comments.length>0\\\" [style.font-weight]=\\\"600\\\"> <!-- blog.comments.length>0 to hide button \\\"Hide Comments\\\" when last comment is deleted by the user -->\\n            Hide comments\\n          </button>\\n          <span *ngIf=\\\"id===blog._id\\\">{{id}}</span>\\n          <br />\\n        </li>\\n        <li class=\\\"list-group-item\\\" *ngIf=\\\"commentsIds.includes(blog._id)\\\">\\n          <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"postComment(blog._id)\\\">\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (commentBody1.errors && commentBody1.dirty),\\n             'has-success': (!commentBody1.errors && commentBody1.dirty)}\\\">\\n              <textarea class=\\\"form-control\\\" rows=\\\"5\\\" cols=\\\"15\\\" name=\\\"commentBody\\\" [style.margin-bottom.px]=\\\"5\\\"\\n                placeholder=\\\"*Enter Your comment\\\" [(ngModel)]=\\\"commentBody\\\" #commentBody1=\\\"ngModel\\\" \\n                required validateComment>\\n              </textarea>\\n              <ul class=\\\"help-block\\\">\\n                <li *ngIf=\\\"commentBody1.errors?.required && commentBody1.dirty\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span> This field is required\\n                </li>\\n                <li *ngIf=\\\"commentBody1.errors?.validateComment && commentBody1.dirty\\\">\\n                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span> \\n                  Comment must contain at least one character which is not space,new line,...\\n                </li>\\n              </ul>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"commentsIds.splice(commentsIds.indexOf(blog._id), 1)\\\">\\n              Cancel\\n            </button>\\n            <button [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Comment!</button>\\n          </form>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n<!-- ################   result of search   #########################-->\\n  <div *ngIf=\\\"!newPost && !loadingBlogs && searchPerformed\\\">\\n      <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let blog of searchedBlogs\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">{{blog.title}}\\n            <span [style.float]=\\\"'right'\\\" [style.font-size.px]=\\\"14\\\" *ngIf=\\\"screenService.isLarge()\\\">\\n              {{blog.createdAt | date:'medium'}}\\n            </span>\\n          </h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">{{blog.body}}</div>\\n        <div class=\\\"panel-footer\\\">\\n          <strong>Posted by:</strong> {{blog.createdBy}}\\n          <br  *ngIf=\\\"!screenService.isLarge()\\\" />\\n          <span *ngIf=\\\"!screenService.isLarge()\\\"><strong>Date:</strong> {{blog.createdAt | date:'medium'}}</span>\\n          <div *ngIf=\\\"username === blog.createdBy\\\"> <!-- only user who created this can see this div -->\\n            <strong>Likes:</strong> {{blog.likes}}\\n            <strong>Dislikes:</strong> {{blog.dislikes}}\\n          </div>\\n          \\n          <a [routerLink]=\\\"['/edit-blog/', blog._id ]\\\" *ngIf=\\\"username === blog.createdBy\\\"> <!-- only user who created this can see this div -->\\n            <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\">Edit</button>\\n          </a>\\n          <a [routerLink]=\\\"['/delete-blog/', blog._id ]\\\" *ngIf=\\\"username === blog.createdBy\\\"> <!-- only user who created this can see this div -->\\n            <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Delete</button>\\n          </a>\\n          <br />\\n          <div class=\\\"dropdown\\\">\\n            <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-success drop-btn like-disabled\\\" *ngIf=\\\"username !== blog.createdBy\\\"\\n              (click)=\\\"onLike(blog._id)\\\" [disabled]=\\\"blog.likedBy.Array.includes(username)\\\"> \\n              <!-- alternative way to check if user already liked: [disabled]=\\\"blog.likedBy.Array.indexOf(username) > -1\\\" -->\\n              <span class=\\\"glyphicon glyphicon-thumbs-up\\\"></span> {{blog.likes}}\\n            </button>\\n            <div class=\\\"dropdown-content\\\">\\n              <a [routerLink]=\\\"['/user', liker]\\\" *ngFor=\\\"let liker of blog.likedBy.Array\\\">{{liker}}</a>\\n            </div>\\n          </div>\\n          <div class=\\\"dropdown\\\">\\n            <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-warning drop-btn dislike-disabled\\\" \\n            *ngIf=\\\"username !== blog.createdBy\\\" (click)=\\\"onDislike(blog._id)\\\" [disabled]=\\\"blog.dislikedBy.Array.includes(username)\\\">\\n              <span class=\\\"glyphicon glyphicon-thumbs-down\\\"></span> {{blog.dislikes}}\\n            </button>\\n            <div class=\\\"dropdown-content\\\">\\n              <a [routerLink]=\\\"['/user', disliker]\\\" *ngFor=\\\"let disliker of blog.dislikedBy.Array\\\">{{disliker}}</a>\\n            </div>\\n          </div>\\n        </div> <!-- footer end -->\\n        <!-- comments section -->\\n        <div class=\\\"panel panel-default\\\" \\n          [style.margin-bottom.px]=\\\"0\\\" *ngFor=\\\"let comm of blog.comments\\\">\\n          <div class=\\\"panel panel-body\\\" \\n            [style.margin-bottom.px]=\\\"0\\\" *ngIf=\\\"enabledIds.includes(blog._id)\\\">\\n            <strong>{{comm.commentator}}:</strong> {{comm.comment}}\\n            <br />\\n            <span [style.font-size.px]=\\\"13\\\"><strong>Date:</strong> {{comm.createdAt | date:'medium'}}</span>\\n            <br />\\n            <button class=\\\"btn btn-sm btn-primary\\\" *ngIf=\\\"comm.commentator === username\\\" \\n            data-toggle=\\\"modal\\\" data-target=\\\"#editModal\\\" (click)=\\\"getComment(comm._id)\\\">\\n              Edit\\n            </button>\\n            <!-- Edit Modal -->\\n            <div id=\\\"editModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n                <div class=\\\"modal-dialog\\\">\\n              \\n                  <!-- Modal content-->\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                      <h4 class=\\\"modal-title\\\">Edit Comment</h4>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <form #formEditComm=\\\"ngForm\\\">\\n                            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (editCommentBody1.errors && editCommentBody1.dirty),\\n                              'has-success': (!editCommentBody1.errors && editCommentBody1.dirty)}\\\">\\n                              <textarea class=\\\"form-control\\\" rows=\\\"2\\\" cols=\\\"15\\\" name=\\\"editCommentBody\\\" [style.margin-bottom.px]=\\\"5\\\"\\n                                  [(ngModel)]=\\\"editCommentBody\\\" #editCommentBody1=\\\"ngModel\\\" \\n                                  required validateComment>\\n                              </textarea>\\n                              <ul class=\\\"help-block\\\">\\n                                <li *ngIf=\\\"editCommentBody1.errors?.required && editCommentBody1.dirty\\\">\\n                                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span> This field is required\\n                                </li>\\n                                <li *ngIf=\\\"editCommentBody1.errors?.validateComment && editCommentBody1.dirty\\\">\\n                                  <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span> \\n                                  Comment must contain at least one character which is not space,new line,...\\n                                </li>\\n                              </ul>\\n                            </div>\\n                            \\n                          </form>\\n                    </div> <!-- end of modal body --> \\n                    <div class=\\\"modal-footer\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                      <button type=\\\"submit\\\" id=\\\"submit\\\" [disabled]=\\\"!formEditComm.valid\\\" class=\\\"btn btn-primary\\\"\\n                        data-dismiss=\\\"modal\\\" (click)=\\\"editComment()\\\">Save</button>\\n                    </div>\\n                  </div> <!-- end of modal content --> \\n                </div> <!-- end of modal dialog --> \\n            </div> <!-- end of edit modal --> \\n            <button class=\\\"btn btn-sm btn-warning\\\" *ngIf=\\\"comm.commentator === username\\\"\\n            data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" (click)=\\\"toDelete=comm._id\\\">\\n              Delete\\n            </button>\\n            <!-- Delete Modal -->\\n            <div id=\\\"deleteModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n                <div class=\\\"modal-dialog\\\">\\n              \\n                  <!-- Modal content-->\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                      <h4 class=\\\"modal-title\\\">Delete Comment</h4>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                      <p>Are you sure you want to delete this comment?</p>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" \\n                      (click)=\\\"deleteComment()\\\">Yes</button>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n                    </div>\\n                  </div>\\n              \\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n        <ul [hidden]=\\\"editingComments.includes(blog._id)\\\" class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\"\\n            *ngIf=\\\"!commentsIds.includes(blog._id)\\\" (click)=\\\"commentsIds.push(blog._id)\\\">\\n              Post Comment\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" (click)=\\\"enabledIds.push(blog._id)\\\" \\n              *ngIf=\\\"blog.comments.length>0 && !enabledIds.includes(blog._id)\\\" [style.font-weight]=\\\"600\\\">\\n              Show comments\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" (click)=\\\"enabledIds.splice(enabledIds.indexOf(blog._id), 1)\\\" \\n              *ngIf=\\\"enabledIds.includes(blog._id) && blog.comments.length>0\\\" [style.font-weight]=\\\"600\\\"> <!-- blog.comments.length>0 to hide button \\\"Hide Comments\\\" when last comment is deleted by the user -->\\n              Hide comments\\n            </button>\\n            <span *ngIf=\\\"id===blog._id\\\">{{id}}</span>\\n            <br />\\n          </li>\\n          <li class=\\\"list-group-item\\\" *ngIf=\\\"commentsIds.includes(blog._id)\\\">\\n            <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"postComment(blog._id)\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (commentBody1.errors && commentBody1.dirty),\\n               'has-success': (!commentBody1.errors && commentBody1.dirty)}\\\">\\n                <textarea class=\\\"form-control\\\" rows=\\\"5\\\" cols=\\\"15\\\" name=\\\"commentBody\\\" [style.margin-bottom.px]=\\\"5\\\"\\n                  placeholder=\\\"*Enter Your comment\\\" [(ngModel)]=\\\"commentBody\\\" #commentBody1=\\\"ngModel\\\" \\n                  required validateComment>\\n                </textarea>\\n                <ul class=\\\"help-block\\\">\\n                  <li *ngIf=\\\"commentBody1.errors?.required && commentBody1.dirty\\\">\\n                    <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span> This field is required\\n                  </li>\\n                  <li *ngIf=\\\"commentBody1.errors?.validateComment && commentBody1.dirty\\\">\\n                    <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span> \\n                    Comment must contain at least one character which is not space,new line,...\\n                  </li>\\n                </ul>\\n              </div>\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"commentsIds.splice(commentsIds.indexOf(blog._id), 1)\\\">\\n                Cancel\\n              </button>\\n              <button [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Comment!</button>\\n            </form>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    <!-- if no blogs were found -->\\n    <div *ngIf=\\\"searchPerformed && searchedBlogs==''\\\" [style.text-align]=\\\"'center'\\\" [style.margin-top.px]=\\\"20\\\"> \\n      Your search returned no matches.\\n    </div>\\n<!-- $$$$$$$$$$$$$$$$$$$$$$$   end of search results    $$$$$$$$$$$$$$$$$$$$$$$$$-->\\n\\n  <div *ngIf=\\\"loadingBlogs\\\">\\n      Getting All Blog Posts...\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { BlogService } from '../../services/blog.service';\nimport { FlashMessagesService } from 'angular2-flash-messages/module/flash-messages.service';\nimport { ScreenService } from '../../services/screen.service';\nimport { ValidateComment } from '../../services/comment-validator';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n  @ViewChild('itemm') itemm: ElementRef;\n\n  newPost = false;\n  loadingBlogs = false;\n  showItem = false;\n  form;\n  processing = false;\n  username;\n  blogPosts;\n  showProf = false;\n  showComments = false;\n  id;\n  enabledIds = []; // for comments to show/hide\n  commentsIds = []; // for text field for comment\n  commentBody = '';\n  toDelete; // id of comment to be deleted\n  editingComments = [];\n  editCommentBody = '';\n  editCommId;\n  showSearchBox = false;\n  titleItems = null; titleCond = false; titleInput = ''; ind = -1; currentItemDropdown = null;\n  authorItems = null; authorCond = false; authorInput = ''; indAuthor = -1; currentAuthorDropdown = null;\n  searchedBlogs;\n  searchPerformed = false;\n  \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private blogService: BlogService,\n    private flashMessages: FlashMessagesService,\n    private screenService: ScreenService\n  ) { \n    this.createNewBlogForm();\n  }\n\n  ngOnInit() {\n    this.authService.getProfile()\n      .subscribe(\n        profile => {\n          this.username = profile.user.username;\n        }\n      ); // this way, because in localStorage are stored strings, not objects, s we cannot access with: user.username\n      this.getAllBlogs();\n  }\n\n  newBlogForm() {\n    this.newPost = true;\n  }\n\n  reloadBlogs() {\n    this.enabledIds = []; //reset\n    this.commentsIds = []; //reset\n    this.loadingBlogs = true;\n    this.searchPerformed = false; // show all blogs on reload\n    this.getAllBlogs();\n    setTimeout(() => {\n      this.loadingBlogs = false;\n    }, 1000);\n  }\n\n  // Title Validity Checker\n  validateTitle(control) {\n    let regexp = new RegExp(/^[a-zA-Z0-9 ]+$/);\n    if(regexp.test(control.value)) { return null }\n    else { return { 'validateTitle': true } }\n  }\n\n  // Create New Blog Form\n  createNewBlogForm() {\n    this.form = this.formBuilder.group({\n      title: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(50), this.validateTitle]],\n      body: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(500)]]\n    });\n  }\n\n  enableNewBlogForm() {\n    this.form.get('title').enable();\n    this.form.get('body').enable();\n  }\n\n  disableNewBlogForm() {\n    this.form.get('title').disable();\n    this.form.get('body').disable();\n  }\n\n  // On Submit Blog Post\n  onBlogSubmit() {\n    this.processing = true;\n    this.disableNewBlogForm();\n    const blog = {\n      title: this.form.get('title').value,\n      body: this.form.get('body').value,\n      createdBy: this.username\n    }\n    this.blogService.postNewBlogPost(blog)\n      .subscribe(\n        data => {\n          if(data.success) {\n            this.flashMessages.show(data.msg, { cssClass: 'alert-success', timeout: 2000 });\n            this.getAllBlogs(); // retreive all blogs when new blog is saved\n            setTimeout(() => {\n              this.newPost = false;\n              this.processing = false;\n              this.enableNewBlogForm();\n            }, 2000);\n          }\n          else {\n            this.flashMessages.show(data.msg, { cssClass: 'alert-danger', timeout: 2000 });\n            setTimeout(() => {\n              this.newPost = false;\n              this.processing = false;\n              this.enableNewBlogForm();\n            }, 2000);\n          }\n        }\n      );\n  }\n\n  goBack() {\n    window.location.reload();\n  }\n\n  getAllBlogs() {\n    this.blogService.getAllBlogs()\n      .subscribe(\n          (data) => {\n            this.blogPosts = data.blogs;\n          }\n      );\n  }\n\n  onSearch(creator, title) {\n    this.blogService.getByCreator(creator, title)\n      .subscribe(\n        data => {\n          this.blogPosts = data.blogs;\n        }\n      );\n  }\n\n  // On LIke\n  onLike(id) {\n    const obj = { id: id };\n    this.blogService.likeBlog(obj)\n      .subscribe( \n        res => {\n          if(!res.success) {\n            console.log(res.msg);\n          }\n          else {\n            console.log(res.msg);\n          }\n        }\n      );\n      this.getAllBlogs();\n      this.searchPerformed = false; //go to all comment when like comment\n  }\n\n  // On Dislike\n  onDislike(id) {\n    const obj = { id: id };\n    this.blogService.dislikeBlog(obj)\n      .subscribe(\n        res => {\n          if(!res.success) {\n            console.log(res.msg);\n          }\n          else {\n            console.log(res.msg);\n          }\n        }\n      );\n      this.getAllBlogs();\n      this.searchPerformed = false; //go to all comment when dislike comment\n  }\n\n  // Post Comment\n  postComment(id) {\n    const comment = {\n      comment: this.commentBody,\n      id: id\n    }\n    this.blogService.comment(comment)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.flashMessages.show(data.msg, {cssClass: 'alert-danger', timeout: 1200});\n          }\n          else {\n              this.commentBody = '';\n              let ind = this.commentsIds.indexOf(id);\n              this.commentsIds.splice(ind, 1);\n              this.enabledIds.push(id);\n              this.getAllBlogs();\n          }\n        }\n      );\n    this.searchPerformed = false; //go to all comment when post comment\n  }\n\n  // Delete Comment\n  deleteComment() {\n    this.blogService.deleteComment(this.toDelete)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.flashMessages.show(data.msg, {cssClass: 'alert-danger', timeout: 1200});\n          }\n          else {\n            this.flashMessages.show(data.msg, {cssClass: 'alert-success', timeout: 1200});\n            this.getAllBlogs();\n          }\n        }\n      );\n      this.searchPerformed = false; //go to all comment when delete comment\n  }\n\n  // Get Comment To Be Edited\n  getComment(commId) {\n    this.editCommId = commId;\n    this.blogService.getComment(commId)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.flashMessages.show(data.msg, {cssClass: 'alert-danger'});\n          }\n          else {\n            this.editCommentBody = data.comment.comment;\n          }\n        }\n      );\n  }\n\n  // Edit Comment\n  editComment() {\n    const obj = {\n      comment: this.editCommentBody,\n      commId: this.editCommId\n    }\n    this.blogService.editComment(obj)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.flashMessages.show(data.msg, {cssClass: 'alert-danger', timeout: 1200});\n          }\n          else {\n            \n            this.getAllBlogs();\n          }\n        }\n      );\n      this.searchPerformed = false; //go to all comment when cmment is edited\n  }\n\n  // title search section\n  // on input -> search for titles for autocomplete\n  titleSearch() {\n    this.currentItemDropdown = null; // reset currentItemDropdown on input(to avoid remembered item)\n    this.ind = -1; // reset ind on input(to avoid remembered index)\n    if(this.titleInput === '' || !this.isValidTitle()) {\n      this.titleItems = null;\n    }\n    else {\n      this.blogService.getTitles(this.titleInput)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            console.log('Can not get titles from database')\n          }\n          else {\n            this.titleCond = true; //show autocomplete options\n            this.titleItems = data.blogs;\n          }\n        }\n      );\n    }\n  }\n\n  // on title item click\n  titleItemClick(titleItem) {\n    this.titleInput = titleItem; //show selected autocomplete option inside of text field\n    this.titleCond = false; //hide autocomplete options\n    this.titleItems = null; //clear preview autocomplete options\n    this.ind = -1; // reset index\n  }\n\n  toggleDropdown() {\n    this.titleCond = !this.titleCond;\n    // when dropdown is hidden clear currentItemDropdown and ind\n    this.currentItemDropdown = null;\n    this.ind = -1;\n  }\n\n  onKeydown(event) {\n    if(this.titleItems != null) {\n      if(event === 'downArrow') {\n        if(this.ind == this.titleItems.length-1) {\n          this.ind = 0; // when come to last\n        }\n        else {\n          ++this.ind; // initially ind=-1, so we start from 0\n        }\n        if(this.ind>-1 && this.ind<this.titleItems.length) {\n          this.currentItemDropdown = this.titleItems[this.ind].title; // set current item only if current index is valid\n        }\n      }\n      if(event === 'upArrow') {\n        if(this.ind == 0 || this.ind == -1) {\n          this.ind = this.titleItems.length-1;\n        }\n        else {\n          --this.ind;\n        }\n        if(this.ind>-1 && this.ind<this.titleItems.length) {\n          this.currentItemDropdown = this.titleItems[this.ind].title; // set current item only if current index is valid\n        }\n      }\n    }\n  }\n\n  mouseOver(i, currentItem) {\n    this.ind = i;\n    this.currentItemDropdown = currentItem;\n  }\n\n  mouseOut() {\n    this.ind = -1;\n    this.currentItemDropdown = null;\n  }\n\n  onEnter() {\n    if(this.currentItemDropdown != null) {\n      this.titleItemClick(this.currentItemDropdown); // to set value on enter only if some value is selected\n    }\n  }\n\n  isValidTitle(): boolean {\n    let regexp = /^\\s+$/;\n    if(regexp.test(this.titleInput)) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  // end of title search section\n\n  // author search section\n  // on input -> search for authors for autocomplete\n  authorSearch() {\n    this.currentAuthorDropdown = null; // reset currentItemDropdown on input(to avoid remembered item)\n    this.indAuthor = -1; // reset ind on input(to aovoid remembered index)\n    if(this.authorInput === '' || !this.isValidAuthor()) {\n      this.authorItems = null;\n    }\n    else {\n      this.blogService.getAuthors(this.authorInput)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            console.log('Cannot get authors from database');\n          }\n          else {\n            this.authorCond = true; //show autocomplete options\n            this.authorItems = data.authors;\n          }\n        }\n      );\n    }\n  }\n\n  // on title item click\n  authorItemClick(author) {\n    this.authorInput = author; //show selected autocomplete option inside of text field\n    this.authorCond = false; //hide autocomplete options\n    this.authorItems = null; //clear preview autocomplete options\n    this.indAuthor = -1; // reset index\n  }\n\n  toggleDropdownAuthor() {\n    this.authorCond = !this.authorCond;\n    // when dropdown is hidden clear currentItemDropdown and ind\n    this.currentAuthorDropdown = null;\n    this.indAuthor = -1;\n  }\n\n  onKeydownAuthor(event) {\n    this.isValidAuthor();\n    if(this.authorItems != null) {\n      if(event === 'downArrow') {\n        if(this.indAuthor == this.authorItems.length-1) {\n          this.indAuthor = 0; // when come to last\n        }\n        else {\n          ++this.indAuthor; // initially ind=-1, so we start from 0\n        }\n        if(this.indAuthor>-1 && this.indAuthor<this.authorItems.length) {\n          this.currentAuthorDropdown = this.authorItems[this.indAuthor]; // set current item only if current index is valid\n        }\n      }\n      if(event === 'upArrow') {\n        if(this.indAuthor == 0 || this.indAuthor == -1) {\n          this.indAuthor = this.authorItems.length-1;\n        }\n        else {\n          --this.indAuthor;\n        }\n        if(this.indAuthor>-1 && this.indAuthor<this.authorItems.length) {\n          this.currentAuthorDropdown = this.authorItems[this.indAuthor]; // set current item only if current index is valid\n        }\n      }\n    }\n  }\n\n  mouseOverAuthor(i, currentAuthor) {\n    this.indAuthor = i;\n    this.currentAuthorDropdown = currentAuthor;\n  }\n\n  mouseOutAuthor() {\n    this.indAuthor = -1;\n    this.currentAuthorDropdown = null;\n  }\n\n  onEnterAuthor() {\n    if(this.currentAuthorDropdown != null) {\n      this.authorItemClick(this.currentAuthorDropdown); // to set value on enter only if some value is selected\n    }\n  }\n\n  isValidAuthor(): boolean {\n    let regexp = /^\\s+$/;\n    if(regexp.test(this.authorInput)) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  // end of Author search section\n\n  // search for blogs(filters: title,author)\n  searchBlogs() {\n    this.searchPerformed = true;\n    this.enabledIds = []; //reset\n    this.commentsIds = []; //reset\n    this.blogService.searchBlogs(this.titleInput, this.authorInput)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.searchedBlogs = null;\n          }\n          else {\n            this.searchedBlogs = data.blogs;\n          }\n        }\n      );\n  }\n\n}\n","module.exports = \"* {\\r\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\r\\n}\\r\\n\\r\\n.question {\\r\\n    background-color: #e6c5ec;\\r\\n    height: 50px;\\r\\n    line-height: 50px;\\r\\n    border-top-left-radius: 5px;\\r\\n    border-bottom-left-radius: 5px;\\r\\n    border-radius: 5px;\\r\\n    font-size: 17px;\\r\\n}\\r\\n\\r\\n.yes {\\r\\n    height: 50px;\\r\\n    line-height: 50px;\\r\\n    background-color: #303f9f;\\r\\n    text-align: center;\\r\\n    border-radius: 5px;\\r\\n    font-size: 17px;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.yes:hover {\\r\\n    background-color: #3f51b5;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.no {\\r\\n    height: 50px;\\r\\n    line-height: 50px;\\r\\n    background-color: #f50057; \\r\\n    text-align: center;\\r\\n    border-radius: 5px;\\r\\n    font-size: 17px;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.no:hover {\\r\\n    background-color: #f73377;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.row2 {\\r\\n    margin-top: 30px;\\r\\n    margin-left: -15px;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    background-color: #691a99;\\r\\n    color: white;\\r\\n    padding: 10px 14px 10px 14px;\\r\\n    font-size: 20px;\\r\\n    border-top-left-radius: 5px;\\r\\n    border-top-right-radius: 5px;\\r\\n    border-top: 1px solid #691a99;\\r\\n    border-right: 1px solid #691a99;\\r\\n    border-left: 1px solid #691a99;\\r\\n}\\r\\n\\r\\n.body {\\r\\n    background-color: #e6c5ec;\\r\\n    color: black;\\r\\n    padding: 10px 14px 10px 14px;\\r\\n    border-left: 1px solid #691a99;\\r\\n    border-right: 1px solid #691a99;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n    background-color: #7e7680;\\r\\n    color: white;\\r\\n    padding: 10px 14px 10px 14px;\\r\\n    border-bottom-left-radius: 5px;\\r\\n    border-bottom-right-radius: 5px;\\r\\n    border-bottom: 1px solid #691a99;\\r\\n    border-right: 1px solid #691a99;\\r\\n    border-left: 1px solid #691a99;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <h2 class=\\\"page-header\\\">Delete Blog</h2>\\n    <div class=\\\"col-md-5 question\\\">Are you sure you want to delete this blog?</div>\\n    <div class=\\\"col-md-1 yes\\\" (click)=\\\"deleteBlog()\\\">Yes</div>\\n    <div class=\\\"col-md-1 no\\\" (click)=\\\"backToBlogs()\\\">No</div>\\n  </div>\\n\\n  <div class=\\\"row row2\\\" *ngIf=\\\"blog\\\">\\n    <div class=\\\"col-md-7 title\\\">{{blog.title}}</div>\\n    <div class=\\\"col-md-7 body\\\">{{blog.body}}</div>\\n    <div class=\\\"col-md-7 footer\\\">\\n      <strong>posted by:</strong> {{blog.createdBy}}\\n      <br />\\n      <strong>date:</strong> {{blog.createdAt | date: 'medium'}}\\n    </div>\\n  </div>\\n  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BlogService } from '../../../services/blog.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages/module/flash-messages.service';\n\n@Component({\n  selector: 'app-delete-blog',\n  templateUrl: './delete-blog.component.html',\n  styleUrls: ['./delete-blog.component.css']\n})\nexport class DeleteBlogComponent implements OnInit {\n\n  id;\n  blog = null;\n\n  constructor(\n    private blogService: BlogService,\n    private router: Router,\n    private flashMessages: FlashMessagesService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap\n      .subscribe(\n        params => {\n          this.id = params.get('id');\n        }\n      );\n      this.fetchBlog();\n  }\n\n  // Fetch Blog\n  fetchBlog() {\n    this.blogService.getBlogToEdit(this.id)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.flashMessages.show(data.msg, {cssClass: 'alert-danger', timeout: 1500});\n            setTimeout(() => {\n              this.router.navigate(['/blog']);\n            }, 1500);\n          }\n          else {\n            this.blog = data.blog;\n          }\n        }\n      );\n  }\n\n  // Go Back\n  backToBlogs() {\n    this.router.navigate(['/blog']);\n  }\n\n  // Delete Blog\n  deleteBlog() {\n    this.blogService.deleteBlog(this.id)\n      .subscribe(\n        res => {\n          if(!res.success) {\n            this.flashMessages.show(res.msg, {cssClass: 'alert-danger', timeout: 1500});\n            setTimeout(() => {\n              this.router.navigate(['/blog']);\n            }, 1500);\n          }\n          else {\n            this.flashMessages.show(res.msg, {cssClass: 'alert-success', timeout: 1500});\n            setTimeout(() => {\n              this.router.navigate(['/blog']);\n            }, 1500);\n          }\n        }\n      );\n  }\n\n}\n","module.exports = \".left {\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.blog-not-found {\\r\\n    height: 50px;\\r\\n    line-height: 50px;\\r\\n    padding-left: 10px;\\r\\n    background-color: rgb(240, 71, 71);\\r\\n    border-radius: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2 class=\\\"page-header\\\">Edit Blog</h2>\\n  <form (ngSubmit)=\\\"onSaveChanges()\\\" *ngIf=\\\"blog\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"center-block\\\">Edit title:</label>\\n      <input [disabled]=\\\"processing\\\" class=\\\"form-control\\\" name=\\\"title\\\" [(ngModel)]=\\\"blog.title\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"center-block\\\">Edit Body:</label>\\n      <textarea [disabled]=\\\"processing\\\" class=\\\"form-control\\\" rows=\\\"8\\\" cols=\\\"80\\\" name=\\\"blog\\\" [(ngModel)]=\\\"blog.body\\\"></textarea>\\n    </div>\\n\\n    <a [routerLink]=\\\"['/delete-blog/', blog._id]\\\"><button [disabled]=\\\"processing\\\" type=\\\"button\\\" class=\\\"btn btn-danger left\\\">Delete</button></a>\\n    <a (click)=\\\"goBack()\\\"><button [style.margin-right.px]=\\\"5\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-default left\\\">Back</button></a>\\n    <a><button [disabled]=\\\"processing\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save Changes</button></a>\\n\\n  </form>\\n\\n  <div class=\\\"blog-not-found\\\" *ngIf=\\\"!blogFound\\\">\\n    Unable to edit blog\\n  </div>\\n  <a (click)=\\\"goBack()\\\" *ngIf=\\\"!blogFound\\\">\\n    <button [style.margin-top.px]=\\\"5\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-default\\\">\\n      Back\\n    </button>\\n  </a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { BlogService } from '../../../services/blog.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages/module/flash-messages.service';\n\n@Component({\n  selector: 'app-edit-blog',\n  templateUrl: './edit-blog.component.html',\n  styleUrls: ['./edit-blog.component.css']\n})\nexport class EditBlogComponent implements OnInit {\n\n  blog = null;\n  processing = false;\n  id;\n  blogFound = true;\n  errMsg;\n\n  constructor(\n    private location: Location,\n    private blogService: BlogService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    console.log('init');\n    this.route.paramMap\n      .subscribe(\n        params => {\n          this.id = params.get('id');\n        }\n      );\n      console.log('id: ' + this.id);\n      this.getBlogById();\n  }\n\n  // Get Blog With Specific id\n  getBlogById() {\n    this.blogService.getBlogToEdit(this.id)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.blogFound = false;\n            this.errMsg = data.msg;\n          }\n          else {\n            this.blogFound = true;\n            this.blog = data.blog;\n          }\n        }\n      );\n  }\n\n  // Update Blog\n  updateBlog() {\n    this.blogService.updateBlog(this.blog) \n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.flashMessages.show(data.msg, {cssClass: 'alert-danger', timeout: 1500});\n            this.processing = false;\n          }\n          else {\n            this.processing = false;\n            this.router.navigate(['/blog']);\n            this.flashMessages.show(data.msg, {cssClass: 'alert-success', timeout: 1500});\n          }\n        }\n      );\n  }\n\n  // Go Back\n  goBack() {\n    this.location.back();\n  }\n\n\n  // Save Changes\n  onSaveChanges() {\n    console.log('saved');\n    this.processing = true;\n    console.log(this.blog);\n    this.updateBlog();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n  ) {}\n\n  ngOnInit() {}\n}","module.exports = \".table > tbody > tr > td { \\r\\n    padding-top: 1px;\\r\\n    padding-bottom: 1px;\\r\\n    font-size: 13px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.table > thead > tr > th {\\r\\n    text-align: center;\\r\\n    font-size: 13.5px;\\r\\n}\\r\\n\\r\\n#meal-calculaton-table {\\r\\n    background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n#meal-calculaton-table > td {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n#row-total {\\r\\n    background-color: #673ab7;\\r\\n    color: #ffffff;\\r\\n}\\r\\n\\r\\n.loading-meals {\\r\\n    min-height: 200px;\\r\\n    min-width: 100%;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.loading-content {\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n#edit-cell {\\r\\n    background-color: #673ab7; \\r\\n    color:#ffffff; \\r\\n    display: flex; \\r\\n    padding: 0 0 0 0;\\r\\n    height: 36.8px; \\r\\n    line-height: 36.8px;\\r\\n}\\r\\n\\r\\n#edit-cell .edit-span {\\r\\n    background-color:rgb(241, 243, 243); \\r\\n    min-height: 100%; \\r\\n    min-width: 36.8px;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n#edit-cell .edit-span i {\\r\\n    vertical-align: middle; \\r\\n}\\r\\n\\r\\n#edit-cell > .edit-span:hover{\\r\\n    background-color: black;\\r\\n    color: rgb(241, 243, 243);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.calories-ok {\\r\\n    background-color: rgb(9, 161, 9);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.calories-bad {\\r\\n    background-color: red;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n#summary {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.fixed-size-container {\\r\\n    max-width: 940px;\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    justify-content: space-around;\\r\\n    align-items: center;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.fixed-size {\\r\\n    width: 120px;\\r\\n    height: 20px;\\r\\n    line-height: 20px;\\r\\n    text-align: center;\\r\\n    margin-bottom: 10px;\\r\\n    background-color: #e6e6e6;\\r\\n}\\r\\n\\r\\n.fixed-size:hover {\\r\\n    cursor: pointer;\\r\\n    color: white;\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n.text-missing {\\r\\n    font-size: 16px;\\r\\n    font-weight: 600;\\r\\n    margin: 20px 0 20px 0;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"loadingMeals\\\" class=\\\"loading-meals\\\">\\n  <div class=\\\"loading-content\\\">\\n      <mat-spinner [diameter]=\\\"60\\\"></mat-spinner>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"!loadingMeals && !thereAreMeals\\\" style=\\\"display:flex;min-height:200px;\\\">\\n  <div style=\\\"margin:auto;\\\">{{periodName2()}}</div>\\n</div>\\n\\n<div *ngIf=\\\"!loadingMeals && thereAreMeals\\\">\\n  <div *ngFor=\\\"let day of periodMeals\\\">\\n    <div class=\\\"table-responsive\\\" style=\\\"margin-bottom:20px\\\"> \\n      <table class=\\\"table table-hover\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th scope=\\\"col\\\" id=\\\"edit-cell\\\">\\n              <a class=\\\"edit-span\\\" matTooltip=\\\"edit meals\\\" [routerLink]=\\\"['/edit-meal', day.date]\\\"\\n              [queryParams]=\\\"{ period: period }\\\">\\n                <i class=\\\"material-icons\\\">edit</i>\\n              </a>\\n              <span style=\\\"padding: 0 4px 0 4px;\\\">{{day.date}}</span>\\n            </th> \\n            <th scope=\\\"col\\\">grocerie</th>\\n            <th scope=\\\"col\\\">quantity(g)</th>\\n            <th scope=\\\"col\\\">energy(kcal)</th>\\n            <th scope=\\\"col\\\">proteins(g)</th>\\n            <th scope=\\\"col\\\">carbohydrates(g)</th>\\n            <th scope=\\\"col\\\">sugar(g)</th>\\n            <th scope=\\\"col\\\">fat(g)</th>\\n            <th scope=\\\"col\\\">saturated(g)</th>\\n            <th scope=\\\"col\\\">monounsaturated(g)</th>\\n          </tr>\\n        </thead>\\n        <tbody *ngFor=\\\"let meal of day.mealsInfo; let i = index\\\">\\n          <tr id=\\\"meal-calculaton-table\\\">\\n            <td colspan=\\\"10\\\"><strong>{{mealNames[i]}}</strong></td>\\n          </tr>\\n          <tr *ngFor=\\\"let item of meal\\\">\\n            <td scope=\\\"col\\\">\\n            </td>\\n            <td scope=\\\"col\\\">{{item.food}}</td>\\n            <td scope=\\\"col\\\">\\n              <span>{{item.quantity}}</span>\\n            </td>\\n            <td scope=\\\"col\\\">{{item.energy}}</td>\\n            <td scope=\\\"col\\\">{{item.proteins}}</td>\\n            <td scope=\\\"col\\\">{{item.carbohydrates}}</td>\\n            <td scope=\\\"col\\\">{{item.sugar}}</td>\\n            <td scope=\\\"col\\\">{{item.fat}}</td>\\n            <td scope=\\\"col\\\">{{item.saturated}}</td>\\n            <td scope=\\\"col\\\">{{item.monounsaturated}}</td>\\n          </tr>\\n          <tr>\\n            <td><strong>&Sigma;</strong></td>\\n            <td scope=\\\"col\\\"></td>\\n            <td scope=\\\"col\\\"></td>\\n            <td scope=\\\"col\\\">{{day.sumInfo[i].energy}}</td>\\n            <td scope=\\\"col\\\">{{day.sumInfo[i].proteins}}</td>\\n            <td scope=\\\"col\\\">{{day.sumInfo[i].carbohydrates}}</td>\\n            <td scope=\\\"col\\\">{{day.sumInfo[i].sugar}}</td>\\n            <td scope=\\\"col\\\">{{day.sumInfo[i].fat}}</td>\\n            <td scope=\\\"col\\\">{{day.sumInfo[i].saturated}}</td>\\n            <td scope=\\\"col\\\">{{day.sumInfo[i].monounsaturated}}</td>\\n          </tr>\\n        </tbody>\\n        <tr id=\\\"row-total\\\">\\n            <td><strong>TOTAL</strong></td>\\n            <td scope=\\\"col\\\"></td>\\n            <td scope=\\\"col\\\"></td>\\n            <td scope=\\\"col\\\"><strong>{{day.totalInfo.energy}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{day.totalInfo.proteins}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{day.totalInfo.carbohydrates}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{day.totalInfo.sugar}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{day.totalInfo.fat}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{day.totalInfo.saturated}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{day.totalInfo.monounsaturated}}</strong></td>\\n        </tr>\\n        <tr>\\n          <td colspan=\\\"10\\\" id=\\\"summary\\\"\\n          [ngClass]=\\\"{'calories-ok': (caloryLimit - day.totalInfo.energy)>=0,\\n                      'calories-bad': (caloryLimit - day.totalInfo.energy)<0}\\\">\\n            <span *ngIf=\\\"(caloryLimit - day.totalInfo.energy)>=0\\\" class=\\\"calories-ok\\\">\\n              <strong>Calory limit not crossed, calories left: {{caloryLimit - day.totalInfo.energy}}kcal</strong>\\n            </span>\\n            <span *ngIf=\\\"(caloryLimit - day.totalInfo.energy)<0\\\" class=\\\"calories-bad\\\">\\n              <strong>Calory limit crossed for: {{day.totalInfo.energy - caloryLimit}}kcal</strong>\\n            </span>\\n          </td>\\n        </tr>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"text-missing\\\" *ngIf=\\\"isMissing\\\">{{periodName()}}</div> \\n<div class=\\\"fixed-size-container\\\" *ngIf=\\\"isMissing\\\">\\n  <div class=\\\"fixed-size\\\" *ngFor=\\\"let date of missing\\\" [routerLink]=\\\"['/edit-meal', date]\\\"\\n    [queryParams]=\\\"{ period: period }\\\">\\n    <span matTooltip=\\\"click to add\\\">{{date}}</span>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { NutritionService } from 'src/app/services/nutrition.service';\nimport { ScreenService } from 'src/app/services/screen.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-earlier-days',\n  templateUrl: './earlier-days.component.html',\n  styleUrls: ['./earlier-days.component.css']\n})\nexport class EarlierDaysComponent implements OnInit, OnChanges {\n  @Input() period;\n  @Input() caloryLimit;\n  periodMeals;\n  mealNames = ['Breakfast', 'Lunch', 'Dinner', 'Additionally'];\n  loadingMeals = true;\n  missing;\n  isMissing = false;\n  thereAreMeals = false;\n\n  constructor(\n    private nutritionService: NutritionService,\n    private screenService: ScreenService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {}\n\n  ngOnChanges() {\n    this.loadingMeals = true;\n    this.getSomeMeals();\n  }\n\n  // get meals info for period\n  getSomeMeals() {\n    this.nutritionService.getSomeMeals(this.period)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.loadingMeals = false;\n          }\n          else {\n            this.loadingMeals = false;\n            this.periodMeals = data.periodmeals;\n            if(this.periodMeals == '') {\n              this.thereAreMeals = false;\n              this.isMissing = true;\n              this.missing = data.missing;\n            }\n            else {\n              this.thereAreMeals = true;\n              this.periodMeals = data.periodmeals;\n              this.missing = data.missing;\n              if(this.missing == '') {\n                this.isMissing = false;\n              }\n              else {\n                this.isMissing = true;\n              }\n            }\n          }\n        }\n      );\n  }\n\n  // on edit meal\n  onEditMeal(date) {\n    this.router.navigate(['edit-meal/' + date]);\n  }\n\n  // period name just for the template\n  periodName() {\n    switch(this.period) {\n      case '3days':\n        return 'Want to add meals for some date that is missing in last 3 days?';\n      case 'week':\n        return 'Want to add meals for some date that is missing in this week?';\n      case 'month':\n        return 'Want to add meals for some date that is missing in this month?';\n      default: return '(error)'\n    }\n  }\n\n  // period name just for the template\n  periodName2() {\n    switch(this.period) {\n      case '3days':\n        return 'No meals for last 3 days';\n      case 'week':\n        return 'No meals for this week';\n      case 'month':\n        return 'No meals for this month';\n      default: return '(error)'\n    }\n  }\n\n}\n","module.exports = \".table > tbody > tr > td { \\r\\n    padding-top: 2px;\\r\\n    padding-bottom: 2px;\\r\\n    font-size: 13.5px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.table > thead > tr > th {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#meal-calculaton-table {\\r\\n    background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n#meal-calculaton-table > td {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n#row-total {\\r\\n    background-color: #ffd740;\\r\\n}\\r\\n\\r\\n.spinner-wrapper {\\r\\n    display: flex;\\r\\n    min-height: 200px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n#delete-food:hover {\\r\\n    color: #f77a7a;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nmat-radio-button {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.input-field {\\r\\n    background-color: red;\\r\\n    width: 200px;\\r\\n    max-width: 200px;\\r\\n}\\r\\n\\r\\n.input-food {\\r\\n    width: 100%;\\r\\n    pointer-events: all;\\r\\n}\\r\\n\\r\\n.dropdown-list {\\r\\n    position: absolute;\\r\\n    z-index: 1;\\r\\n    width: 200px;\\r\\n    max-width: 200px;\\r\\n    max-height: 100px;\\r\\n    padding: 0;\\r\\n    list-style-type: none;\\r\\n}\\r\\n\\r\\n.dropdown-item {\\r\\n    padding: 5px;\\r\\n    background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n.dropdown-item-hover {\\r\\n    background-color: #cec8c8;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.meal-wrapper {\\r\\n    margin-top: 10px;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.meal-wrapper-small {\\r\\n    margin-top: 10px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.add-button {\\r\\n    max-height:25px;\\r\\n}\\r\\n\\r\\n.food-wrapper {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.quant-wrapper {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.button-add-small{\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n.delete-forever {\\r\\n    color: red;\\r\\n    vertical-align: middle;\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\n.delete-forever:hover {\\r\\n    cursor: pointer;\\r\\n    color: rgb(187, 3, 3)\\r\\n}\\r\\n\\r\\n.add-new-food {\\r\\n    display: flex; \\r\\n    justify-content: center; \\r\\n    flex-direction: column; \\r\\n    background-color: rgb(248, 248, 247);\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n.quantity-margin {\\r\\n    margin-right: 30px;\\r\\n}\\r\\n\\r\\n.food-margin {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.wrapper-all{\\r\\n    margin: 0 7px 0 7px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div style=\\\"margin: 10px 0 10px 0;\\\">\\n      <mat-toolbar>Edit meals: {{date}} &nbsp;&nbsp;\\n        <span matTooltip=\\\"delete all meals\\\" (click)=\\\"removeMeal()\\\" *ngIf=\\\"!todaysMealsEmpty\\\">\\n          <i class=\\\"material-icons delete-forever\\\">delete_forever</i>\\n        </span>\\n      </mat-toolbar>\\n    </div>\\n\\n    <div style=\\\"margin: 0 0 15px 0;\\\">\\n      <span matTooltip=\\\"back to Nutrition Manager\\\" style=\\\"margin-left: 5px;\\\">\\n        <a type=\\\"button\\\" mat-mini-fab color=\\\"accent\\\" [routerLink]=\\\"['/nutritionmanager']\\\"\\n        queryParamsHandling=\\\"preserve\\\">\\n          <i class=\\\"material-icons\\\">arrow_back</i>\\n        </a>\\n      </span>\\n      <span matTooltip=\\\"save changes\\\" *ngIf=\\\"gettingMealsDone\\\" style=\\\"float:right;\\\">\\n        <a type=\\\"button\\\" mat-mini-fab [routerLink]=\\\"['/nutritionmanager']\\\"\\n        queryParamsHandling=\\\"preserve\\\">\\n          <i class=\\\"material-icons\\\">check</i>\\n        </a>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\" [ngClass]=\\\"{'wrapper-all': !screenService.isLarge()}\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n\\n        <div class=\\\"col-md-6 add-new-food\\\">\\n          <div style=\\\"margin-bottom: 15px; display:flex; justify-content:center;\\\">\\n            <h4>Add new food:</h4>\\n          </div>\\n          <div style=\\\"text-align: center;\\\">\\n            <mat-radio-group name=\\\"meal\\\" [(ngModel)]=\\\"meal\\\">\\n              <mat-radio-button value=\\\"breakfast\\\">\\n                  Breakfast\\n              </mat-radio-button>\\n              <mat-radio-button value=\\\"lunch\\\">\\n                  Lunch\\n              </mat-radio-button>\\n              <mat-radio-button value=\\\"dinner\\\">\\n                  Dinner\\n              </mat-radio-button>\\n              <mat-radio-button value=\\\"additionally\\\">\\n                  Additionally\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n\\n          <div [ngClass]=\\\"{'meal-wrapper': screenService.isLarge(), 'meal-wrapper-small': !screenService.isLarge()}\\\"\\n          style=\\\"display:flex; justify-content:center; padding-bottom: 8px;\\\">\\n              <div class=\\\"food-wrapper\\\">\\n                <div class=\\\"input-field\\\"\\n                [ngClass]=\\\"{'food-margin': screenService.isLarge()}\\\">\\n                  <input placeholder=\\\"Enter food\\\" name=\\\"lunchFoodItem\\\" [(ngModel)]=\\\"lunchFoodItem\\\" (input)=\\\"getmatchedLunchs()\\\"\\n                  keydownEvent (keydownEvent)=\\\"onKeyDownLunch($event)\\\" (keydown.enter)=\\\"onEnterLunch()\\\" class=\\\"input-food\\\">\\n                </div>\\n                <span *ngIf=\\\"lunchErrMsg!=''\\\" style=\\\"color:red; font-size:10.5px\\\">{{lunchErrMsg}}</span>\\n                <div class=\\\"dropdown-box\\\" style=\\\"max-height: 100px\\\">\\n                  <ul class=\\\"dropdown-list\\\">\\n                    <li class=\\\"dropdown-item\\\" *ngFor=\\\"let groc of matchedLunchs; let i = index\\\" \\n                    (click)=\\\"onItemClickLunch(groc, i)\\\" clickOutside (clickOutside)=\\\"matchedLunchs=null;this.currentLunch=null;indLunch=-1\\\"\\n                    (mouseover)=\\\"onMouseOverLunch(groc, i)\\\" (mouseout)=\\\"onMouseOutLunch()\\\"\\n                    [ngClass]=\\\"{'dropdown-item-hover': indLunch==i}\\\">\\n                     {{groc.food}}\\n                    </li>\\n                  </ul>\\n                </div>\\n              </div>\\n      \\n              <div class=\\\"quant-wrapper\\\">\\n                <div [ngClass]=\\\"{'input-field': !screenService.isLarge(), 'quantity-margin': screenService.isLarge()}\\\">\\n                  <input placeholder=\\\"Enter quantity\\\" name=\\\"lunchQuantityItem\\\" [(ngModel)]=\\\"lunchQuantityItem\\\"  \\n                  [ngClass]=\\\"{'input-food': !screenService.isLarge()}\\\">\\n                </div>\\n                <span *ngIf=\\\"lunchQuantErrMsg!=''\\\" style=\\\"color:red; font-size:10.5px\\\">{{lunchQuantErrMsg}}</span>\\n              </div>\\n              <button class=\\\"btn btn-sm btn-success add-button\\\" type=\\\"button\\\" (click)=\\\"addLunchItem()\\\"\\n              [ngClass]=\\\"{'button-add-small': !screenService.isLarge()}\\\">add</button>\\n          </div>\\n        </div>\\n      <div class=\\\"col-md-3\\\"></div>\\n    </div>\\n\\n    <div *ngIf=\\\"!gettingMealsDone\\\" class=\\\"spinner-wrapper\\\">\\n      <mat-spinner [diameter]=\\\"70\\\"></mat-spinner>\\n    </div>\\n\\n    <div *ngIf=\\\"todaysMealsEmpty\\\" class=\\\"spinner-wrapper\\\">\\n      <span style=\\\"margin: auto;\\\">No food for this date.</span>\\n    </div>\\n\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"gettingMealsDone && !todaysMealsEmpty\\\">\\n      <table class=\\\"table table-hover\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th scope=\\\"col\\\"></th> \\n            <th scope=\\\"col\\\">grocerie</th>\\n            <th scope=\\\"col\\\">quantity(g)</th>\\n            <th scope=\\\"col\\\">energy(kcal)</th>\\n            <th scope=\\\"col\\\">proteins(g)</th>\\n            <th scope=\\\"col\\\">carbohydrates(g)</th>\\n            <th scope=\\\"col\\\">sugar(g)</th>\\n            <th scope=\\\"col\\\">fat(g)</th>\\n            <th scope=\\\"col\\\">saturated(g)</th>\\n            <th scope=\\\"col\\\">monounsaturated(g)</th>\\n          </tr>\\n        </thead>\\n        <tbody *ngFor=\\\"let array of todaysMeals; let i = index\\\">\\n          <tr id=\\\"meal-calculaton-table\\\">\\n            <td colspan=\\\"10\\\"><strong>{{mealNames[i]}}</strong></td>\\n          </tr>\\n          <tr *ngFor=\\\"let item of array\\\">\\n            <td scope=\\\"col\\\">\\n              <div style=\\\"display:flex;\\\">\\n                <span matTooltip=\\\"delete\\\" id=\\\"delete-food\\\" \\n                (click)=\\\"deleteFood(item.food, item.quantity, i)\\\">\\n                  <i class=\\\"material-icons\\\">delete</i>\\n                </span>\\n              </div>\\n            </td>\\n            <td scope=\\\"col\\\">{{item.food}}</td>\\n            <td scope=\\\"col\\\">{{item.quantity}}</td>\\n            <td scope=\\\"col\\\">{{item.energy}}</td>\\n            <td scope=\\\"col\\\">{{item.proteins}}</td>\\n            <td scope=\\\"col\\\">{{item.carbohydrates}}</td>\\n            <td scope=\\\"col\\\">{{item.sugar}}</td>\\n            <td scope=\\\"col\\\">{{item.fat}}</td>\\n            <td scope=\\\"col\\\">{{item.saturated}}</td>\\n            <td scope=\\\"col\\\">{{item.monounsaturated}}</td>\\n          </tr>\\n          <tr>\\n            <td><strong>&Sigma;</strong></td>\\n            <td scope=\\\"col\\\"></td>\\n            <td scope=\\\"col\\\"></td>\\n            <td scope=\\\"col\\\">{{todaysInfos[i].energy}}</td>\\n            <td scope=\\\"col\\\">{{todaysInfos[i].proteins}}</td>\\n            <td scope=\\\"col\\\">{{todaysInfos[i].carbohydrates}}</td>\\n            <td scope=\\\"col\\\">{{todaysInfos[i].sugar}}</td>\\n            <td scope=\\\"col\\\">{{todaysInfos[i].fat}}</td>\\n            <td scope=\\\"col\\\">{{todaysInfos[i].saturated}}</td>\\n            <td scope=\\\"col\\\">{{todaysInfos[i].monounsaturated}}</td>\\n          </tr>\\n        </tbody>\\n        <tr id=\\\"row-total\\\">\\n            <td><strong>TOTAL</strong></td>\\n            <td scope=\\\"col\\\"></td>\\n            <td scope=\\\"col\\\"></td>\\n            <td scope=\\\"col\\\"><strong>{{totalInfo.energy}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{totalInfo.proteins}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{totalInfo.carbohydrates}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{totalInfo.sugar}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{totalInfo.fat}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{totalInfo.saturated}}</strong></td>\\n            <td scope=\\\"col\\\"><strong>{{totalInfo.monounsaturated}}</strong></td>\\n        </tr>\\n      </table>\\n    </div> \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NutritionService } from 'src/app/services/nutrition.service';\nimport { MatSnackBar } from '@angular/material';\nimport { ScreenService } from 'src/app/services/screen.service';\n\n@Component({\n  selector: 'app-edit-meal',\n  templateUrl: './edit-meal.component.html',\n  styleUrls: ['./edit-meal.component.css']\n})\nexport class EditMealComponent implements OnInit {\n  date;\n  gettingMealsDone = false;\n  todaysMealsEmpty;\n  todaysMeals; \n  todaysInfos;\n  totalInfo;\n  mealNames = ['Breakfast', 'Lunch', 'Dinner', 'Additionally'];\n  meal = 'breakfast'; // for radio buttons\n  lunchQuantityItem = null; lunchErrMsg = ''; matchedLunchs = null; lunchItems = [];\n  lunchFoodItem = ''; indLunch = -1; currentLunch = null; lunchQuantErrMsg;\n  period;\n\n  constructor(\n    private route: ActivatedRoute,\n    private nutritionService: NutritionService,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private screenService: ScreenService\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap\n      .subscribe(\n        params => {\n          let date = params.get('date');\n          this.getMealsForDate(date);\n          this.date = date;\n        }\n      );\n    this.route.queryParamMap\n      .subscribe(\n        params => {\n          this.period = params.get('period');\n        }\n      );\n  }\n\n  // snack bar messages\n  openSnackBar(message: string) {\n    this.snackBar.open(message, '', {duration: 2000});\n  }\n\n  // get meals for specific date $$$$$ no converting to string, function gets date in string format $$$$$\n  getMealsForDate(date) {\n    this.nutritionService.getMealsInfo(date)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.gettingMealsDone = true;\n            this.todaysMealsEmpty = true;\n            this.totalInfo = data.totalInfo;\n          }\n          else {\n            this.gettingMealsDone = true;\n            this.todaysMealsEmpty = false;\n            this.todaysMeals = data.mealsInfo; \n            this.todaysInfos = data.sumInfo;\n            this.totalInfo = data.totalInfo;\n          }\n        }\n      );\n  }\n\n  // delete food for specific meal\n  deleteFood(food, quant, ind) {\n    this.nutritionService.deleteFood(food, quant, this.mealNames[ind], this.date )\n      .subscribe(\n        data => {\n          if(!data.success) {\n            console.log(data.msg);\n          }\n          else {\n            this.deleteMeal(this.date); // run cleaner\n            this.getMealsForDate(this.date);\n            console.log(data.msg);\n          }\n        }\n      );\n  }\n\n  // check is all meals are empty after deleting food from some meal, and if they are empty, delete meal document\n  deleteMeal(date) {\n    this.nutritionService.deleteMeal(date)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            console.log(data.msg);\n          }\n          else {\n            console.log(data.msg);\n          }\n        }\n      );\n  }\n\n  /// on back\n  goBack() {\n    this.router.navigate(['/nutritionmanager']);\n  }\n\n    // ########### lunch\n\n  // push lunch food and quantity to the side-list\n  addLunchItem() {\n    let regexp = /^\\s+$/;\n    if(this.lunchFoodItem!='' && !regexp.test(this.lunchFoodItem)) {\n      this.nutritionService.checkForFood(this.lunchFoodItem)\n      .subscribe(\n        data => {\n          if(!data.success) {\n              this.openSnackBar('Please select food from autocomplete options');\n              this.lunchErrMsg = '*Select food from autocomplete options';\n              console.log('no success, errmsg: ' + this.lunchErrMsg);\n              if(!this.isQuantityValid(this.lunchQuantityItem)) {\n                this.lunchQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n              }\n          }\n          else {\n            if(this.isQuantityValid(this.lunchQuantityItem)) {\n              this.lunchErrMsg = '';\n              let lunchItem = {\n                food: this.lunchFoodItem,\n                quantity: this.lunchQuantityItem\n              }\n              this.lunchItems.push(lunchItem);\n              let m = this.mealNames.toString();\n              let lunch = {\n                date: this.date,\n                items: this.lunchItems,\n                meal: this.meal\n              }\n              this.nutritionService.pushTodaysMeal(lunch)\n                .subscribe(\n                  data => {\n                    if(!data.success) {\n                      this.openSnackBar(data.msg);\n                    }\n                    else {\n                      this.lunchItems = [];\n                      this.openSnackBar(data.msg);\n                      this.getMealsForDate(this.date);\n                    }\n                  }\n                );\n              this.lunchFoodItem = '';\n              this.lunchQuantityItem = null;\n            }\n            else {\n              this.lunchQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n            }\n          }\n        }\n      );\n    }\n    else {\n        this.openSnackBar('Please enter some food first');\n        this.lunchErrMsg = '*Food is required';\n      if(!this.isQuantityValid(this.lunchQuantityItem)) {\n        this.lunchQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n      }\n    }\n    if(this.isQuantityValid(this.lunchQuantityItem)) {\n      this.lunchQuantErrMsg = '';\n    }\n  }\n\n  // get all matched groceries\n  getmatchedLunchs() {\n    this.lunchErrMsg = ''; // to remove error message from DOM\n    if(this.lunchFoodItem === '') {\n      this.matchedLunchs = null;\n    }\n    else {\n      this.indLunch = -1; ///\n      this.currentLunch = null; ///\n      this.nutritionService.getMathedGroceries(this.lunchFoodItem)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.matchedLunchs = null;\n          }\n          else {\n            this.matchedLunchs = data.groceries;\n          }\n        }\n      );\n    }\n  }\n\n  // on key down in search field\n  onKeyDownLunch(event) {\n    if(this.matchedLunchs!=null) {\n      if(event === 'downArrow') {\n        if(this.indLunch == this.matchedLunchs.length-1) {\n          this.indLunch = 0;\n        }\n        else {\n          ++this.indLunch;\n        }\n        if(this.indLunch>-1 && this.indLunch<this.matchedLunchs.length) {\n          this.currentLunch = this.matchedLunchs[this.indLunch];  \n        }\n      }\n      if(event === 'upArrow') {\n        if(this.indLunch == -1 || this.indLunch == 0) {\n          this.indLunch = this.matchedLunchs.length-1;\n        }\n        else {\n          --this.indLunch;\n        }\n        if(this.indLunch>-1 && this.indLunch<this.matchedLunchs.length) {\n          this.currentLunch = this.matchedLunchs[this.indLunch];\n        }\n      }\n    }\n  }\n\n  onEnterLunch() {\n    if(this.currentLunch != null) {\n      this.lunchFoodItem = this.currentLunch.food;\n      this.matchedLunchs = null;\n      this.indLunch = -1;\n      this.currentLunch = null;\n    }\n  }\n\n  onItemClickLunch(grocerie, indLunchex) {\n    this.lunchFoodItem = this.currentLunch.food;\n    this.matchedLunchs = null;\n    this.indLunch = -1;\n  }\n\n  onMouseOverLunch(groc, indLunch) {\n    this.currentLunch = groc;\n    this.indLunch = indLunch;\n  }\n\n  onMouseOutLunch() {\n    this.currentLunch = null;\n    this.indLunch = -1;\n  }\n\n  // quantity check\n  isQuantityValid(quantity) {\n    let regexp = /^\\s+$/;\n    let x = Number(quantity);\n    if(quantity==='' || regexp.test(quantity) || isNaN(x)) {\n      return false;\n    }\n    else if(x<1 || x>5000) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n  // push todays lunch to database\n  pushTodaysLunch(todaysLunch) {\n    let lunch = {\n      date: this.date,\n      items: todaysLunch,\n      meal: this.meal\n    }\n    this.nutritionService.pushTodaysMeal(lunch)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.openSnackBar(data.msg);\n          }\n          else {\n            todaysLunch = null;\n            this.openSnackBar(data.msg);\n            this.getMealsForDate(this.date);\n          }\n        }\n      );\n  }\n\n  // delete meal document from database\n  removeMeal() {\n    this.nutritionService.removeMeal(this.date)\n      .subscribe(\n          data => {\n            if(!data.success) {\n              this.openSnackBar(data.msg);\n            }\n            else {\n              this.openSnackBar(data.msg);\n              setTimeout(() => {\n                this.router.navigate(['/nutritionmanager'], { queryParams: {period: this.period}});\n              }, 1500);\n            }\n          }\n      );\n  }\n\n}\n","module.exports = \".page-header {\\r\\n    font-size: 18px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"page-header\\\">Home</div>\\n  <div>\\n    <div>Use this username and password to check the functionality of the application:</div>\\n    <div>username: senka</div>\\n    <div>password: senka123</div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit { \n\n  constructor() {}\n\n  ngOnInit() {}\n\n  \n\n}\n","module.exports = \":host {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n    background-image: url('login_pic.jpg');\\r\\n    width: 100vw;\\r\\n    height: 100vh;\\r\\n    background-position: center center;\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.form {\\r\\n    width: 300px;\\r\\n    background-color: rgb(216, 213, 213);\\r\\n    border-radius: 20px;\\r\\n    opacity: .96;\\r\\n}\\r\\n\\r\\n.heading-text {\\r\\n    text-align: center;\\r\\n    color: rgb(124, 124, 124);\\r\\n}\\r\\n\\r\\n.submit-btn {\\r\\n    margin-top: 25px;\\r\\n    text-align: center;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n    color: rgb(124, 124, 124);\\r\\n    margin: 0 20px 0 20px;\\r\\n}\\r\\n\\r\\nspan {\\r\\n    color: rgb(124, 124, 124);\\r\\n}\\r\\n\\r\\nul {\\r\\n    list-style-type: none;\\r\\n    margin-left: 6px;\\r\\n    padding-left: 0;\\r\\n}\\r\\n\\r\\n.error-message {\\r\\n    background-color: rgb(231, 136, 136);\\r\\n    color: rgb(201, 26, 26);\\r\\n    min-width: 400px;\\r\\n    text-align: center;\\r\\n    height: 50px;\\r\\n    line-height: 50px;\\r\\n    font-size: 20px;\\r\\n    border-radius: 5px;\\r\\n    opacity: .85;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.glyphicon-remove {\\r\\n    color: rgb(245, 68, 68);\\r\\n}\\r\\n\\r\\n.glyphicon-ok {\\r\\n    color: rgb(29, 153, 29);\\r\\n}\\r\\n\\r\\n.loggingIn {\\r\\n    color: white;\\r\\n    font-size: 25px;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    min-height: 200px;\\r\\n    min-width: 200px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"errorMsg\\\" class=\\\"error-message\\\">\\n    {{errorMsg}}\\n  </div>\\n  \\n  <div *ngIf=\\\"!submitted\\\" class=\\\"form\\\">\\n    <span class=\\\"heading-text\\\"><h1 [style.font-weight]=\\\"600\\\">Login</h1></span>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  \\n      <div class=\\\"form-group\\\"> \\n        <label class=\\\"center-block\\\">Username:</label>\\n        <div [ngClass]=\\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty) , \\n        'has-success': !form.controls.username.errors && form.controls.username.dirty}\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"*Enter username\\\" name=\\\"username\\\" formControlName=\\\"username\\\">\\n          <ul class=\\\"help-block\\\">\\n            <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">\\n              <span class=\\\"glyphicon glyphicon-remove\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> Username is required\\n            </li>\\n            <li *ngIf=\\\"(form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength) \\n              && form.controls.username.dirty\\\">\\n              <span class=\\\"glyphicon glyphicon-remove\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> \\n              Username must be between 5 and 30 characters long\\n            </li>\\n            <li *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty \\n                      && !form.controls.username.errors?.required\\\">\\n              <span class=\\\"glyphicon glyphicon-remove\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> \\n              Username can't contain special characters\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"center-block\\\">Password:</label>\\n        <div [ngClass]=\\\"{'has-error': (form.controls.password.errors && form.controls.password.dirty), \\n        'has-success': !form.controls.password.errors && form.controls.password.dirty}\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"*Enter password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n          <ul class=\\\"help-block\\\">\\n            <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">\\n              <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> Password is required\\n            </li>\\n            <li *ngIf=\\\"(form.controls.password.errors?.minlength || form.controls.password.errors?.maxlength) \\n                && form.controls.password.dirty\\\">\\n              <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> \\n              Password must be at least 8, but not more than 30 characters long\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"submit-btn\\\">\\n        <input [disabled]=\\\"!form.valid || submitted\\\" \\n          type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Log in\\\">\\n      </div>\\n      \\n    </form>\\n  </div>\\n  \\n  <div *ngIf=\\\"submitted\\\" class=\\\"loggingIn\\\">\\n    <span style=\\\"color:white;\\\">Just a few seconds, please...</span>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'; \nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../services/config.service';\nimport { AuthGuardService } from '../../services/auth-guard.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  errorMsg = null;\n  submitted = false;\n  previousUrl;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private configService: ConfigService,\n    private authGuard: AuthGuardService\n  ) {\n    this.createForm();\n   }\n\n  ngOnInit() {\n    // Check for redirectUrl from AuthGuardService\n    if(this.authGuard.redirectUrl) {\n      this.previousUrl = this.authGuard.redirectUrl;\n      this.authGuard.redirectUrl = undefined;\n    }\n  }\n\n  validateUsername(control) {\n    let regexp = new RegExp(/^[a-zA-Z0-9]+$/);\n    if(regexp.test(control.value)) {\n      return null;\n    }\n    else {\n      return { 'validateUsername': true }\n    }\n  }\n\n  createForm() {\n    this.form = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(30), this.validateUsername] ],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(30)] ]\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    const user = {\n      username: this.form.get('username').value,\n      password: this.form.get('password').value\n    }\n\n    this.authService.loginUser(user)\n      .subscribe(\n        data => {\n          if(data.success) {\n            this.authService.storeUserData(data.token, data.user);\n            this.errorMsg = null;\n            console.log('Success: ' + data.msg);\n            this.configService.updateShowProperty();\n            setTimeout(() => {\n              if(this.previousUrl) {\n                this.router.navigate([this.previousUrl]);\n              }\n              else {\n                this.router.navigate(['/dashboard']);\n              }\n            }, 1200);\n          }\n          else {\n            this.submitted = false;\n            this.errorMsg = data.msg;\n            console.log('Fail: ' + data.msg);\n          }\n        }\n      );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  logout works!\\n</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".input-field {\\r\\n    background-color: red;\\r\\n    width: 200px;\\r\\n    max-width: 200px;\\r\\n}\\r\\n\\r\\n.input-food {\\r\\n    width: 100%;\\r\\n    pointer-events: all;\\r\\n}\\r\\n\\r\\n.dropdown-list {\\r\\n    position: absolute;\\r\\n    z-index: 1;\\r\\n    width: 200px;\\r\\n    max-width: 200px;\\r\\n    max-height: 100px;\\r\\n    padding: 0;\\r\\n    list-style-type: none;\\r\\n}\\r\\n\\r\\n.dropdown-item {\\r\\n    padding: 5px;\\r\\n    background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n.dropdown-item-hover {\\r\\n    background-color: #cec8c8;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.meal-wrapper {\\r\\n    margin-top: 10px;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.meal-wrapper-small {\\r\\n    margin-top: 10px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.add-button {\\r\\n    max-height:25px;\\r\\n}\\r\\n\\r\\n.food-wrapper {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.quant-wrapper {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.button-add-small{\\r\\n    width: 200px;\\r\\n}\"","module.exports = \"<mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Enter your todays meals&nbsp;<i class=\\\"material-icons\\\" [style.font-size.px]=\\\"18\\\">fastfood</i>\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        <!-- some optional description -->\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n\\n    <form #mealsForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitToDatabase()\\\">\\n      <!-- ######################    breakfast    #################### -->\\n      <span><strong>Breakfast</strong></span><br />\\n      <div [ngClass]=\\\"{'meal-wrapper': screenService.isLarge(), 'meal-wrapper-small': !screenService.isLarge()}\\\">\\n        <div class=\\\"food-wrapper\\\">\\n          <div [style.margin-right.px]=\\\"10\\\" class=\\\"input-field\\\">\\n            <input placeholder=\\\"Enter food\\\" name=\\\"breakfastFoodItem\\\" [(ngModel)]=\\\"breakfastFoodItem\\\" (input)=\\\"getmatchedBreakfasts()\\\"\\n            keydownEvent (keydownEvent)=\\\"onKeyDown($event)\\\" (keydown.enter)=\\\"onEnter()\\\" class=\\\"input-food\\\">\\n          </div>\\n          <span *ngIf=\\\"breakfErrMsg!=''\\\" style=\\\"color:red; font-size:10.5px\\\">{{breakfErrMsg}}</span>\\n          <div class=\\\"dropdown-box\\\" style=\\\"max-height: 100px\\\">\\n            <ul class=\\\"dropdown-list\\\">\\n              <li class=\\\"dropdown-item\\\" *ngFor=\\\"let groc of matchedBreakfasts; let i = index\\\" \\n              (click)=\\\"onItemClick(groc, i)\\\" clickOutside (clickOutside)=\\\"matchedBreakfasts=null;this.currentBreakfast=null;indBreakfast=-1\\\"\\n              (mouseover)=\\\"onMouseOver(groc, i)\\\" (mouseout)=\\\"onMouseOut()\\\"\\n              [ngClass]=\\\"{'dropdown-item-hover': indBreakfast==i}\\\">\\n               {{groc.food}}\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"quant-wrapper\\\">\\n          <div [style.margin-right.px]=\\\"30\\\">\\n            <input placeholder=\\\"Enter quantity\\\" name=\\\"breakfastQuantityItem\\\" [(ngModel)]=\\\"breakfastQuantityItem\\\" size=\\\"15\\\">\\n          </div>\\n          <span *ngIf=\\\"breakfQuantErrMsg!=''\\\" style=\\\"color:red; font-size:10.5px\\\">{{breakfQuantErrMsg}}</span>\\n        </div>\\n        <button class=\\\"btn btn-sm btn-success add-button\\\" type=\\\"button\\\" (click)=\\\"addBreakfastItem()\\\"\\n        [ngClass]=\\\"{'button-add-small': !screenService.isLarge()}\\\">add</button>\\n      </div>\\n\\n      <mat-divider [style.margin-top.px]=\\\"15\\\" [style.margin-bottom.px]=\\\"15\\\"></mat-divider>\\n      <!-- ######################    lunch    #################### -->\\n      <span><strong>Lunch</strong></span><br />\\n      <div [ngClass]=\\\"{'meal-wrapper': screenService.isLarge(), 'meal-wrapper-small': !screenService.isLarge()}\\\">\\n        <div class=\\\"food-wrapper\\\">\\n          <div [style.margin-right.px]=\\\"10\\\" class=\\\"input-field\\\">\\n            <input placeholder=\\\"Enter food\\\" name=\\\"lunchFoodItem\\\" [(ngModel)]=\\\"lunchFoodItem\\\" (input)=\\\"getmatchedLunchs()\\\"\\n            keydownEvent (keydownEvent)=\\\"onKeyDownLunch($event)\\\" (keydown.enter)=\\\"onEnterLunch()\\\" class=\\\"input-food\\\">\\n          </div>\\n          <span *ngIf=\\\"lunchErrMsg!=''\\\" style=\\\"color:red; font-size:10.5px\\\">{{lunchErrMsg}}</span>\\n          <div class=\\\"dropdown-box\\\" style=\\\"max-height: 100px\\\">\\n            <ul class=\\\"dropdown-list\\\">\\n              <li class=\\\"dropdown-item\\\" *ngFor=\\\"let groc of matchedLunchs; let i = index\\\" \\n              (click)=\\\"onItemClickLunch(groc, i)\\\" clickOutside (clickOutside)=\\\"matchedLunchs=null;this.currentLunch=null;indLunch=-1\\\"\\n              (mouseover)=\\\"onMouseOverLunch(groc, i)\\\" (mouseout)=\\\"onMouseOutLunch()\\\"\\n              [ngClass]=\\\"{'dropdown-item-hover': indLunch==i}\\\">\\n               {{groc.food}}\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"quant-wrapper\\\">\\n          <div [style.margin-right.px]=\\\"30\\\">\\n            <input placeholder=\\\"Enter quantity\\\" name=\\\"lunchQuantityItem\\\" [(ngModel)]=\\\"lunchQuantityItem\\\" size=\\\"15\\\">\\n          </div>\\n          <span *ngIf=\\\"lunchQuantErrMsg!=''\\\" style=\\\"color:red; font-size:10.5px\\\">{{lunchQuantErrMsg}}</span>\\n        </div>\\n        <button class=\\\"btn btn-sm btn-success add-button\\\" type=\\\"button\\\" (click)=\\\"addLunchItem()\\\"\\n        [ngClass]=\\\"{'button-add-small': !screenService.isLarge()}\\\">add</button>\\n      </div>\\n\\n      <mat-divider [style.margin-top.px]=\\\"15\\\" [style.margin-bottom.px]=\\\"15\\\"></mat-divider>\\n      <!-- ######################    dinner    #################### -->\\n      <span><strong>Dinner</strong></span><br />\\n      <div [ngClass]=\\\"{'meal-wrapper': screenService.isLarge(), 'meal-wrapper-small': !screenService.isLarge()}\\\">\\n        <div class=\\\"food-wrapper\\\">\\n          <div [style.margin-right.px]=\\\"10\\\" class=\\\"input-field\\\">\\n            <input placeholder=\\\"Enter food\\\" name=\\\"dinnerFoodItem\\\" [(ngModel)]=\\\"dinnerFoodItem\\\" (input)=\\\"getmatchedDinners()\\\"\\n            keydownEvent (keydownEvent)=\\\"onKeyDownDinner($event)\\\" (keydown.enter)=\\\"onEnterDinner()\\\" class=\\\"input-food\\\">\\n          </div>\\n          <span *ngIf=\\\"dinnerErrMsg!=''\\\" style=\\\"color:red; font-size:10.5px\\\">{{dinnerErrMsg}}</span>\\n          <div class=\\\"dropdown-box\\\" style=\\\"max-height: 100px\\\">\\n            <ul class=\\\"dropdown-list\\\">\\n              <li class=\\\"dropdown-item\\\" *ngFor=\\\"let groc of matchedDinners; let i = index\\\" \\n              (click)=\\\"onItemClickDinner(groc, i)\\\" clickOutside (clickOutside)=\\\"matchedDinners=null;this.currentDinner=null;indDinner=-1\\\"\\n              (mouseover)=\\\"onMouseOverDinner(groc, i)\\\" (mouseout)=\\\"onMouseOutDinner()\\\"\\n              [ngClass]=\\\"{'dropdown-item-hover': indDinner==i}\\\">\\n               {{groc.food}}\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"quant-wrapper\\\">\\n          <div [style.margin-right.px]=\\\"30\\\">\\n            <input placeholder=\\\"Enter quantity\\\" name=\\\"dinnerQuantityItem\\\" [(ngModel)]=\\\"dinnerQuantityItem\\\" size=\\\"15\\\">\\n          </div>\\n          <span *ngIf=\\\"dinnerQuantErrMsg!=''\\\" style=\\\"color:red; font-size:10.5px\\\">{{dinnerQuantErrMsg}}</span>\\n        </div>\\n        <button class=\\\"btn btn-sm btn-success add-button\\\" type=\\\"button\\\" (click)=\\\"addDinnerItem()\\\"\\n        [ngClass]=\\\"{'button-add-small': !screenService.isLarge()}\\\">add</button>\\n      </div>\\n\\n      <mat-divider [style.margin-top.px]=\\\"15\\\" [style.margin-bottom.px]=\\\"15\\\"></mat-divider>\\n      <!-- ######################    additionally    #################### -->\\n      <span><strong>Additionally</strong></span><br />\\n      <div [ngClass]=\\\"{'meal-wrapper': screenService.isLarge(), 'meal-wrapper-small': !screenService.isLarge()}\\\"\\n      style=\\\"margin-bottom: 10px\\\">\\n        <div class=\\\"food-wrapper\\\">\\n          <div [style.margin-right.px]=\\\"10\\\" class=\\\"input-field\\\">\\n            <input placeholder=\\\"Enter food\\\" name=\\\"additionallyFoodItem\\\" [(ngModel)]=\\\"additionallyFoodItem\\\" (input)=\\\"getmatchedAdditionallys()\\\"\\n            keydownEvent (keydownEvent)=\\\"onKeyDownAdditionally($event)\\\" (keydown.enter)=\\\"onEnterAdditionally()\\\" class=\\\"input-food\\\">\\n          </div>\\n          <span *ngIf=\\\"additionallyErrMsg!=''\\\" style=\\\"color:red; font-size:10.5px\\\">{{additionallyErrMsg}}</span>\\n          <div class=\\\"dropdown-box\\\" style=\\\"max-height: 100px\\\">\\n            <ul class=\\\"dropdown-list\\\">\\n              <li class=\\\"dropdown-item\\\" *ngFor=\\\"let groc of matchedAdditionallys; let i = index\\\" \\n              (click)=\\\"onItemClickAdditionally(groc, i)\\\" clickOutside (clickOutside)=\\\"matchedAdditionallys=null;this.currentAdditionally=null;indAdditionally=-1\\\"\\n              (mouseover)=\\\"onMouseOverAdditionally(groc, i)\\\" (mouseout)=\\\"onMouseOutAdditionally()\\\"\\n              [ngClass]=\\\"{'dropdown-item-hover': indAdditionally==i}\\\">\\n               {{groc.food}}\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"quant-wrapper\\\">\\n          <div [style.margin-right.px]=\\\"30\\\">\\n            <input placeholder=\\\"Enter quantity\\\" name=\\\"additionallyQuantityItem\\\" [(ngModel)]=\\\"additionallyQuantityItem\\\" size=\\\"15\\\">\\n          </div>\\n          <span *ngIf=\\\"additionallyQuantErrMsg!=''\\\" style=\\\"color:red; font-size:10.5px\\\">{{additionallyQuantErrMsg}}</span>\\n        </div>\\n        <button class=\\\"btn btn-sm btn-success add-button\\\" type=\\\"button\\\" (click)=\\\"addAdditionallyItem()\\\"\\n        [ngClass]=\\\"{'button-add-small': !screenService.isLarge()}\\\">add</button>\\n      </div>\\n\\n    </form>\\n\\n</mat-expansion-panel>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { NutritionService } from 'src/app/services/nutrition.service';\nimport { MatSnackBar } from '@angular/material';\nimport { ScreenService } from 'src/app/services/screen.service';\n\n@Component({\n  selector: 'app-meals',\n  templateUrl: './meals.component.html',\n  styleUrls: ['./meals.component.css']\n})\nexport class MealsComponent implements OnInit {\n  breakfastQuantityItem = null; breakfastItems = []; breakfErrMsg = ''; matchedBreakfasts = null;\n  breakfastFoodItem = ''; indBreakfast = -1; currentBreakfast = null; breakfQuantErrMsg;\n  lunchQuantityItem = null; lunchItems = []; lunchErrMsg = ''; matchedLunchs = null;\n  lunchFoodItem = ''; indLunch = -1; currentLunch = null; lunchQuantErrMsg;\n  dinnerQuantityItem = null; dinnerItems = []; dinnerErrMsg = ''; matchedDinners = null;\n  dinnerFoodItem = ''; indDinner = -1; currentDinner = null; dinnerQuantErrMsg;\n  additionallyQuantityItem = null; additionallyItems = []; additionallyErrMsg = ''; matchedAdditionallys = null;\n  additionallyFoodItem = ''; indAdditionally = -1; currentAdditionally = null; additionallyQuantErrMsg;\n\n  constructor(\n    private nutritionService: NutritionService,\n    private snackBar: MatSnackBar,\n    private screenService: ScreenService\n  ) { }\n\n  ngOnInit() {}\n\n  // snack bar messages\n  openSnackBar(message: string) {\n    this.snackBar.open(message, '', {duration: 2000});\n  }\n\n  // push breakfast food and quantity to the side-list\n  addBreakfastItem() {\n    let regexp = /^\\s+$/;\n    if(this.breakfastFoodItem!='' && !regexp.test(this.breakfastFoodItem)) {\n      this.nutritionService.checkForFood(this.breakfastFoodItem)\n      .subscribe(\n        data => {\n          if(!data.success) {\n              this.openSnackBar('Please select food from autocomplete options');\n              this.breakfErrMsg = '*Select food from autocomplete options';\n              console.log('no success, errmsg: ' + this.breakfErrMsg);\n              if(!this.isQuantityValid(this.breakfastQuantityItem)) {\n                this.breakfQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n              }\n          }\n          else {\n            if(this.isQuantityValid(this.breakfastQuantityItem)) {\n              this.breakfErrMsg = '';\n              let breakfastItem = {\n                food: this.breakfastFoodItem,\n                quantity: this.breakfastQuantityItem\n              }\n              this.breakfastItems.push(breakfastItem);\n              this.breakfastFoodItem = '';\n              this.breakfastQuantityItem = null;\n            }\n            else {\n              this.breakfQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n            }\n          }\n        }\n      );\n    }\n    else {\n        this.openSnackBar('Please enter some food first');\n        this.breakfErrMsg = '*Food is required';\n      if(!this.isQuantityValid(this.breakfastQuantityItem)) {\n        this.breakfQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n      }\n    }\n    if(this.isQuantityValid(this.breakfastQuantityItem)) {\n      this.breakfQuantErrMsg = '';\n    }\n  }\n\n  // quantity check\n  isQuantityValid(quantity) {\n    let regexp = /^\\s+$/;\n    let x = Number(quantity);\n    if(quantity==='' || regexp.test(quantity) || isNaN(x)) {\n      return false;\n    }\n    else if(x<1 || x>5000) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n  // ########### breakfast\n    // get all matched groceries\n    getmatchedBreakfasts() {\n      this.breakfErrMsg = ''; // to remove error message from dom\n      if(this.breakfastFoodItem === '') {\n        this.matchedBreakfasts = null;\n      }\n      else {\n        this.indBreakfast = -1; ///\n        this.currentBreakfast = null; ///\n        this.nutritionService.getMathedGroceries(this.breakfastFoodItem)\n        .subscribe(\n          data => {\n            if(!data.success) {\n              this.matchedBreakfasts = null;\n            }\n            else {\n              this.matchedBreakfasts = data.groceries;\n            }\n          }\n        );\n      }\n    }\n  \n    // on key down in search field\n    onKeyDown(event) {\n      if(this.matchedBreakfasts!=null) {\n        if(event === 'downArrow') {\n          if(this.indBreakfast == this.matchedBreakfasts.length-1) {\n            this.indBreakfast = 0;\n          }\n          else {\n            ++this.indBreakfast;\n          }\n          if(this.indBreakfast>-1 && this.indBreakfast<this.matchedBreakfasts.length) {\n            this.currentBreakfast = this.matchedBreakfasts[this.indBreakfast];  \n          }\n        }\n        if(event === 'upArrow') {\n          if(this.indBreakfast == -1 || this.indBreakfast == 0) {\n            this.indBreakfast = this.matchedBreakfasts.length-1;\n          }\n          else {\n            --this.indBreakfast;\n          }\n          if(this.indBreakfast>-1 && this.indBreakfast<this.matchedBreakfasts.length) {\n            this.currentBreakfast = this.matchedBreakfasts[this.indBreakfast];\n          }\n        }\n      }\n    }\n  \n    onEnter() {\n      if(this.currentBreakfast != null) {\n        this.breakfastFoodItem = this.currentBreakfast.food;\n        this.matchedBreakfasts = null;\n        this.indBreakfast = -1;\n        this.currentBreakfast = null;\n      }\n    }\n  \n    onItemClick(grocerie, indBreakfastex) {\n      this.breakfastFoodItem = this.currentBreakfast.food;\n      this.matchedBreakfasts = null;\n      this.indBreakfast = -1;\n    }\n  \n    onMouseOver(groc, indBreakfast) {\n      this.currentBreakfast = groc;\n      this.indBreakfast = indBreakfast;\n    }\n  \n    onMouseOut() {\n      this.currentBreakfast = null;\n      this.indBreakfast = -1;\n    }\n\n  // ########### lunch\n\n// push lunch food and quantity to the side-list\n    addLunchItem() {\n      let regexp = /^\\s+$/;\n      if(this.lunchFoodItem!='' && !regexp.test(this.lunchFoodItem)) {\n        this.nutritionService.checkForFood(this.lunchFoodItem)\n        .subscribe(\n          data => {\n            if(!data.success) {\n                this.openSnackBar('Please select food from autocomplete options');\n                this.lunchErrMsg = '*Select food from autocomplete options';\n                console.log('no success, errmsg: ' + this.lunchErrMsg);\n                if(!this.isQuantityValid(this.lunchQuantityItem)) {\n                  this.lunchQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n                }\n            }\n            else {\n              if(this.isQuantityValid(this.lunchQuantityItem)) {\n                this.lunchErrMsg = '';\n                let lunchItem = {\n                  food: this.lunchFoodItem,\n                  quantity: this.lunchQuantityItem\n                }\n                this.lunchItems.push(lunchItem);\n                this.lunchFoodItem = '';\n                this.lunchQuantityItem = null;\n              }\n              else {\n                this.lunchQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n              }\n            }\n          }\n        );\n      }\n      else {\n          this.openSnackBar('Please enter some food first');\n          this.lunchErrMsg = '*Food is required';\n        if(!this.isQuantityValid(this.lunchQuantityItem)) {\n          this.lunchQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n        }\n      }\n      if(this.isQuantityValid(this.lunchQuantityItem)) {\n        this.lunchQuantErrMsg = '';\n      }\n    }\n\n    // get all matched groceries\n    getmatchedLunchs() {\n      this.lunchErrMsg = ''; // to remove error message from dom\n      if(this.lunchFoodItem === '') {\n        this.matchedLunchs = null;\n      }\n      else {\n        this.indLunch = -1;\n        this.currentLunch = null;\n        this.nutritionService.getMathedGroceries(this.lunchFoodItem)\n        .subscribe(\n          data => {\n            if(!data.success) {\n              this.matchedLunchs = null;\n            }\n            else {\n              this.matchedLunchs = data.groceries;\n            }\n          }\n        );\n      }\n    }\n  \n    // on key down in search field\n    onKeyDownLunch(event) {\n      if(this.matchedLunchs!=null) {\n        if(event === 'downArrow') {\n          if(this.indLunch == this.matchedLunchs.length-1) {\n            this.indLunch = 0;\n          }\n          else {\n            ++this.indLunch;\n          }\n          if(this.indLunch>-1 && this.indLunch<this.matchedLunchs.length) {\n            this.currentLunch = this.matchedLunchs[this.indLunch];  \n          }\n        }\n        if(event === 'upArrow') {\n          if(this.indLunch == -1 || this.indLunch == 0) {\n            this.indLunch = this.matchedLunchs.length-1;\n          }\n          else {\n            --this.indLunch;\n          }\n          if(this.indLunch>-1 && this.indLunch<this.matchedLunchs.length) {\n            this.currentLunch = this.matchedLunchs[this.indLunch];\n          }\n        }\n      }\n    }\n  \n    onEnterLunch() {\n      if(this.currentLunch != null) {\n        this.lunchFoodItem = this.currentLunch.food;\n        this.matchedLunchs = null;\n        this.indLunch = -1;\n        this.currentLunch = null;\n      }\n    }\n  \n    onItemClickLunch(grocerie, indLunchex) {\n      this.lunchFoodItem = this.currentLunch.food;\n      this.matchedLunchs = null;\n      this.indLunch = -1;\n    }\n  \n    onMouseOverLunch(groc, indLunch) {\n      this.currentLunch = groc;\n      this.indLunch = indLunch;\n    }\n  \n    onMouseOutLunch() {\n      this.currentLunch = null;\n      this.indLunch = -1;\n    }\n\n// ########### dinner\n\n// push dinner food and quantity to the side-list\naddDinnerItem() {\n  let regexp = /^\\s+$/;\n  if(this.dinnerFoodItem!='' && !regexp.test(this.dinnerFoodItem)) {\n    this.nutritionService.checkForFood(this.dinnerFoodItem)\n    .subscribe(\n      data => {\n        if(!data.success) {\n            this.openSnackBar('Please select food from autocomplete options');\n            this.dinnerErrMsg = '*Select food from autocomplete options';\n            console.log('no success, errmsg: ' + this.dinnerErrMsg);\n            if(!this.isQuantityValid(this.dinnerQuantityItem)) {\n              this.dinnerQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n            }\n        }\n        else {\n          if(this.isQuantityValid(this.dinnerQuantityItem)) {\n            this.dinnerErrMsg = '';\n            let dinnerItem = {\n              food: this.dinnerFoodItem,\n              quantity: this.dinnerQuantityItem\n            }\n            this.dinnerItems.push(dinnerItem);\n            this.dinnerFoodItem = '';\n            this.dinnerQuantityItem = null;\n          }\n          else {\n            this.dinnerQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n          }\n        }\n      }\n    );\n  }\n  else {\n      this.openSnackBar('Please enter some food first');\n      this.dinnerErrMsg = '*Food is required';\n    if(!this.isQuantityValid(this.dinnerQuantityItem)) {\n      this.dinnerQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n    }\n  }\n  if(this.isQuantityValid(this.dinnerQuantityItem)) {\n    this.dinnerQuantErrMsg = '';\n  }\n}\n\n// get all matched groceries\ngetmatchedDinners() {\n  this.dinnerErrMsg = ''; // to remove error message from dom\n  if(this.dinnerFoodItem === '') {\n    this.matchedDinners = null;\n  }\n  else {\n    this.indDinner = -1;\n    this.currentDinner = null;\n    this.nutritionService.getMathedGroceries(this.dinnerFoodItem)\n    .subscribe(\n      data => {\n        if(!data.success) {\n          this.matchedDinners = null;\n        }\n        else {\n          this.matchedDinners = data.groceries;\n        }\n      }\n    );\n  }\n}\n\n// on key down in search field\nonKeyDownDinner(event) {\n  if(this.matchedDinners!=null) {\n    if(event === 'downArrow') {\n      if(this.indDinner == this.matchedDinners.length-1) {\n        this.indDinner = 0;\n      }\n      else {\n        ++this.indDinner;\n      }\n      if(this.indDinner>-1 && this.indDinner<this.matchedDinners.length) {\n        this.currentDinner = this.matchedDinners[this.indDinner];  \n      }\n    }\n    if(event === 'upArrow') {\n      if(this.indDinner == -1 || this.indDinner == 0) {\n        this.indDinner = this.matchedDinners.length-1;\n      }\n      else {\n        --this.indDinner;\n      }\n      if(this.indDinner>-1 && this.indDinner<this.matchedDinners.length) {\n        this.currentDinner = this.matchedDinners[this.indDinner];\n      }\n    }\n  }\n}\n\nonEnterDinner() {\n  if(this.currentDinner != null) {\n    this.dinnerFoodItem = this.currentDinner.food;\n    this.matchedDinners = null;\n    this.indDinner = -1;\n    this.currentDinner = null;\n  }\n}\n\nonItemClickDinner(grocerie, indDinnerex) {\n  this.dinnerFoodItem = this.currentDinner.food;\n  this.matchedDinners = null;\n  this.indDinner = -1;\n}\n\nonMouseOverDinner(groc, indDinner) {\n  this.currentDinner = groc;\n  this.indDinner = indDinner;\n}\n\nonMouseOutDinner() {\n  this.currentDinner = null;\n  this.indDinner = -1;\n}\n\n\n// ########### additionally\n\n// push additionally food and quantity to the side-list\naddAdditionallyItem() {\n  let regexp = /^\\s+$/;\n  if(this.additionallyFoodItem!='' && !regexp.test(this.additionallyFoodItem)) {\n    this.nutritionService.checkForFood(this.additionallyFoodItem)\n    .subscribe(\n      data => {\n        if(!data.success) {\n            this.openSnackBar('Please select food from autocomplete options');\n            this.additionallyErrMsg = '*Select food from autocomplete options';\n            console.log('no success, errmsg: ' + this.additionallyErrMsg);\n            if(!this.isQuantityValid(this.additionallyQuantityItem)) {\n              this.additionallyQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n            }\n        }\n        else {\n          if(this.isQuantityValid(this.additionallyQuantityItem)) {\n            this.additionallyErrMsg = '';\n            let additionallyItem = {\n              food: this.additionallyFoodItem,\n              quantity: this.additionallyQuantityItem\n            }\n            this.additionallyItems.push(additionallyItem);\n            this.additionallyFoodItem = '';\n            this.additionallyQuantityItem = null;\n          }\n          else {\n            this.additionallyQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n          }\n        }\n      }\n    );\n  }\n  else {\n      this.openSnackBar('Please enter some food first');\n      this.additionallyErrMsg = '*Food is required';\n    if(!this.isQuantityValid(this.additionallyQuantityItem)) {\n      this.additionallyQuantErrMsg = '*Please enter valid quantity in \\'g\\'';\n    }\n  }\n  if(this.isQuantityValid(this.additionallyQuantityItem)) {\n    this.additionallyQuantErrMsg = '';\n  }\n}\n\n// get all matched groceries\ngetmatchedAdditionallys() {\n  this.additionallyErrMsg = ''; // to remove error message from dom\n  if(this.additionallyFoodItem === '') {\n    this.matchedAdditionallys = null;\n  }\n  else {\n    this.indAdditionally = -1;\n    this.currentAdditionally = null;\n    this.nutritionService.getMathedGroceries(this.additionallyFoodItem)\n    .subscribe(\n      data => {\n        if(!data.success) {\n          this.matchedAdditionallys = null;\n        }\n        else {\n          this.matchedAdditionallys = data.groceries;\n        }\n      }\n    );\n  }\n}\n\n// on key down in search field\nonKeyDownAdditionally(event) {\n  if(this.matchedAdditionallys!=null) {\n    if(event === 'downArrow') {\n      if(this.indAdditionally == this.matchedAdditionallys.length-1) {\n        this.indAdditionally = 0;\n      }\n      else {\n        ++this.indAdditionally;\n      }\n      if(this.indAdditionally>-1 && this.indAdditionally<this.matchedAdditionallys.length) {\n        this.currentAdditionally = this.matchedAdditionallys[this.indAdditionally];  \n      }\n    }\n    if(event === 'upArrow') {\n      if(this.indAdditionally == -1 || this.indAdditionally == 0) {\n        this.indAdditionally = this.matchedAdditionallys.length-1;\n      }\n      else {\n        --this.indAdditionally;\n      }\n      if(this.indAdditionally>-1 && this.indAdditionally<this.matchedAdditionallys.length) {\n        this.currentAdditionally = this.matchedAdditionallys[this.indAdditionally];\n      }\n    }\n  }\n}\n\nonEnterAdditionally() {\n  if(this.currentAdditionally != null) {\n    this.additionallyFoodItem = this.currentAdditionally.food;\n    this.matchedAdditionallys = null;\n    this.indAdditionally = -1;\n    this.currentAdditionally = null;\n  }\n}\n\nonItemClickAdditionally(grocerie, indAdditionallyex) {\n  this.additionallyFoodItem = this.currentAdditionally.food;\n  this.matchedAdditionallys = null;\n  this.indAdditionally = -1;\n}\n\nonMouseOverAdditionally(groc, indAdditionally) {\n  this.currentAdditionally = groc;\n  this.indAdditionally = indAdditionally;\n}\n\nonMouseOutAdditionally() {\n  this.currentAdditionally = null;\n  this.indAdditionally = -1;\n}\n\n}","module.exports = \".item {\\r\\n    height: 50px;\\r\\n    line-height: 50px;\\r\\n    margin-right: 20px;\\r\\n    padding: 0px 7px;\\r\\n}\\r\\n\\r\\n.item:hover {\\r\\n    cursor: pointer;\\r\\n    color: rgb(78, 77, 77);\\r\\n}\\r\\n\\r\\n.router-link-active {\\r\\n    background-color: rgb(187, 184, 184);\\r\\n    color: rgb(78, 77, 77);\\r\\n}\\r\\n\\r\\n/* Small Item */\\r\\n\\r\\n.small-item {\\r\\n    height: 30px;\\r\\n    line-height: 30px;\\r\\n    font-size: 20px;\\r\\n    text-align: center;\\r\\n    padding: 0 25px 0 25px;\\r\\n    margin: 10px 0 10px 0;\\r\\n}\\r\\n\\r\\n.small-item:hover {\\r\\n    cursor: pointer;\\r\\n    background-color: rgb(187, 184, 184);\\r\\n    color: rgb(78, 77, 77);\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"item.show\\\" [routerLink]=\\\"[item.route]\\\" \\n  [ngClass]=\\\"{'item': screenService.isLarge() , 'small-item': !screenService.isLarge() , 'router-link-active': isActive}\\\"\\n  >\\n  {{item.name}}\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Item } from '../../services/config.service';\nimport { Router, NavigationEnd  } from '@angular/router';\nimport { ScreenService } from '../../services/screen.service';\n\n@Component({\n  selector: 'app-navbar-item',\n  templateUrl: './navbar-item.component.html',\n  styleUrls: ['./navbar-item.component.css']\n})\nexport class NavbarItemComponent implements OnInit {\n  @Input() item: Item;\n  isActive = false;\n\n  constructor(\n    private router: Router,\n    private screenService: ScreenService\n  ) {\n   }\n\n  checkActiveRoute(route: string) {\n    this.isActive = (route == this.item.route);\n  }\n\n  ngOnInit() {\n    this.checkActiveRoute(this.router.url);\n    this.router.events\n      .subscribe(\n        (event) => {\n          if(event instanceof NavigationEnd) {\n            this.checkActiveRoute(event.url);\n          }\n        }\n      );\n  }\n\n}\n","module.exports = \"* {\\r\\n    color: rgb(133, 133, 133);\\r\\n}\\r\\n\\r\\n.navb {\\r\\n    display: flex;\\r\\n    background-color: rgb(216, 213, 213);\\r\\n    height: 50px;\\r\\n    line-height: 50px;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.navb-left {\\r\\n    display: flex;\\r\\n    margin-left: 120px;\\r\\n}\\r\\n\\r\\n.logo {\\r\\n    margin-right: 20px;\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\n.logo:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.home {\\r\\n    padding: 0px 7px;\\r\\n}\\r\\n\\r\\n.home:hover {\\r\\n    cursor: pointer;\\r\\n    color: rgb(78, 77, 77);\\r\\n}\\r\\n\\r\\n.navb-right {\\r\\n    display: flex;\\r\\n    flex-grow: 1;\\r\\n    justify-content: flex-end;\\r\\n    margin-right: 110px;\\r\\n}\\r\\n\\r\\nul {\\r\\n    list-style-type: none;\\r\\n    display: flex;\\r\\n    \\r\\n}\\r\\n\\r\\n.router-link-active {\\r\\n    background-color: rgb(187, 184, 184);\\r\\n    color: rgb(78, 77, 77);\\r\\n}\\r\\n\\r\\n#logout:hover {\\r\\n    cursor: pointer;\\r\\n    color: rgb(78, 77, 77);\\r\\n}\\r\\n\\r\\n/* Small Navbar */\\r\\n\\r\\n.small-navb {\\r\\n    display: flex;\\r\\n    height: 40px;\\r\\n    line-height: 40px;\\r\\n    background-color: rgb(216, 213, 213);\\r\\n}\\r\\n\\r\\n.hamburger {\\r\\n    flex-grow: 1;\\r\\n    padding-left: 20px;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n.menu-shown {\\r\\n    background-color: rgb(187, 184, 184);\\r\\n    color: rgb(78, 77, 77);\\r\\n}\\r\\n\\r\\n.logo-small {\\r\\n    flex-grow: 1;\\r\\n    text-align: center;\\r\\n    font-size: 22px;\\r\\n}\\r\\n\\r\\n.logo-small-span:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.home-small {\\r\\n    flex-grow: 1;\\r\\n    text-align: right;\\r\\n    padding-right: 20px;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n.icon {\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n.icon:hover {\\r\\n    cursor: pointer;\\r\\n    background-color: rgb(187, 184, 184);\\r\\n    color: rgb(78, 77, 77);\\r\\n}\\r\\n\\r\\n.small-menu {\\r\\n    position: absolute;\\r\\n    background-color: rgb(42, 42, 44);\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n/* for logout small */\\r\\n\\r\\n.logout-item {\\r\\n    height: 30px;\\r\\n    line-height: 30px;\\r\\n    font-size: 20px;\\r\\n    text-align: center;\\r\\n    padding: 0 25px 0 25px;\\r\\n    margin: 10px 0 10px 0;\\r\\n}\\r\\n\\r\\n.logout-item:hover {\\r\\n    cursor: pointer;\\r\\n    background-color: rgb(255, 255, 255);\\r\\n    color: rgb(0, 0, 0);\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"screenService.isLarge()\\\" class=\\\"navb\\\">\\n  <div class=\\\"navb-left\\\">\\n    <div class=\\\"logo\\\" [routerLink]=\\\"['/home']\\\">\\n      MEAN Stack App\\n    </div>\\n    <div class=\\\"home\\\" [routerLink]=\\\"['/home']\\\" [ngClass]=\\\"{'router-link-active': isActive}\\\">\\n      Home\\n    </div>\\n  </div>\\n\\n  <div class=\\\"navb-right\\\">\\n    <ul>\\n      <li *ngFor=\\\"let item of configService.navbarItems\\\">\\n        <app-navbar-item [item]=\\\"item\\\"></app-navbar-item>\\n      </li>\\n      <li *ngIf=\\\"this.authService.loggedIn()\\\" id=\\\"logout\\\" (click)=\\\"onLogout()\\\">Logout</li>\\n    </ul>\\n  </div>\\n</div>\\n\\n\\n<!-- small menu -->\\n\\n<div *ngIf=\\\"!screenService.isLarge()\\\" class=\\\"small\\\">\\n  <div class=\\\"small-navb\\\">\\n    <div class=\\\"hamburger\\\">\\n      <span class=\\\"glyphicon glyphicon-menu-hamburger icon\\\" (click)=\\\"configService.showMenu=!configService.showMenu\\\"\\n      [ngClass]=\\\"{'menu-shown': configService.showMenu}\\\"></span>\\n    </div>\\n\\n    <div class=\\\"logo-small\\\">\\n      <span class=\\\"logo-small-span\\\"  [routerLink]=\\\"['/home']\\\">MEAN Stack App</span>\\n    </div>\\n\\n    <div class=\\\"home-small\\\">\\n      <span class=\\\"glyphicon glyphicon-home icon\\\" [ngClass]=\\\"{'router-link-active': isActive}\\\"\\n      [routerLink]=\\\"['/home']\\\" ></span>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"configService.showMenu\\\" class=\\\"small-menu\\\">\\n      <div *ngFor=\\\"let item of configService.navbarItems\\\" class=\\\"small-item\\\" (click)=\\\"configService.showMenu=false\\\">\\n        <app-navbar-item [item]=\\\"item\\\"></app-navbar-item>\\n      </div>\\n      <div *ngIf=\\\"this.authService.loggedIn()\\\" class=\\\"logout-item\\\" (click)=\\\"onLogout(); configService.showMenu=false;\\\">\\n        Logout\\n      </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '../../services/config.service';\nimport { Router } from '@angular/router';\nimport { ScreenService } from '../../services/screen.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isActive = false;\n  showMenu = false;\n  logged: boolean;\n\n  constructor(\n    private configService: ConfigService,\n    private router: Router,\n    private screenService: ScreenService,\n    private authService: AuthService,\n    private flashMessagesService: FlashMessagesService\n  ) {\n  }\n\n  ngOnInit() {\n    this.logged = this.authService.loggedIn();\n  }\n\n  ngDoCheck() {\n    if(this.router.url === '/home' || this.router.url === '/') { this.isActive = true; }\n    else { this.isActive = false; }\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.flashMessagesService.show('You are logged out!', { cssClass: 'alert-success' });\n    this.configService.updateShowProperty();\n    this.router.navigate(['/home']);\n  }\n  \n}\n","module.exports = \".hide-show-info-section-buttons {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.info-section {\\r\\n    border: 2px solid #ffd740;\\r\\n    border-radius: 10px;\\r\\n    margin-left: 15px;\\r\\n    margin-right: 15px;\\r\\n    background-color: #fdfcfc;\\r\\n}\\r\\n\\r\\n.edit-section {\\r\\n    border: 2px solid #ffd740;\\r\\n    border-radius: 10px;\\r\\n    background-color: #fdfcfc;\\r\\n}\\r\\n\\r\\n.edit-section-small {\\r\\n    border: 2px solid #ffd740;\\r\\n    border-radius: 10px;\\r\\n    margin-left: 15px;\\r\\n    margin-right: 15px;\\r\\n    background-color: #fdfcfc;\\r\\n}\\r\\n\\r\\n.info-form {\\r\\n    margin: 10px 10px 15px 10px;\\r\\n}\\r\\n\\r\\n.info-form-field {\\r\\n    min-width: 120px;\\r\\n    margin-bottom: 8px;\\r\\n}\\r\\n\\r\\nmat-radio-button {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.info-section-buttons-div {\\r\\n    margin-top: 7px;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.calculating {\\r\\n    margin: 50px auto 50px auto ;\\r\\n}\\r\\n\\r\\n.calories {\\r\\n    font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\r\\n    /* font-size: 14px; */\\r\\n    background-color: #ffd740;\\r\\n    border-radius: 5px;\\r\\n    text-align: left;\\r\\n    margin-top: 5px;\\r\\n    min-height: 36px;\\r\\n    line-height: 36px;\\r\\n    padding: 0 8px 0 8px;\\r\\n    /* display: inline-flex; */\\r\\n    /* vertical-align: middle; */\\r\\n}\\r\\n\\r\\n.calories > i {\\r\\n    vertical-align: middle !important;\\r\\n}\\r\\n\\r\\n.meal-list {\\r\\n    background-color: #ffd740;\\r\\n    border: 2px solid #673ab7;\\r\\n    border-radius: 5px;\\r\\n    list-style-type: none;\\r\\n    padding: 0px 20px 10px 20px;\\r\\n}\\r\\n\\r\\n.meal-item {\\r\\n    /* max-width: 160px; */\\r\\n    word-wrap:break-word;\\r\\n    padding-left: 3px;\\r\\n    padding-right: 3px;\\r\\n    margin-bottom: 3px;\\r\\n}\\r\\n\\r\\n.meal-item:hover {\\r\\n    cursor: default;\\r\\n    background-color: #fddd6a;\\r\\n}\\r\\n\\r\\n.times {\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.times:hover {\\r\\n    color: rgb(250, 64, 64);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.input-field {\\r\\n    width: 200px;\\r\\n    max-width: 200px;\\r\\n}\\r\\n\\r\\n.dropdown-list {\\r\\n    position: absolute;\\r\\n    top: 47.5px; /* to fix it just under input */\\r\\n    z-index: 1;\\r\\n    width: 200px;\\r\\n    max-width: 200px;\\r\\n    max-height: 100px;\\r\\n    padding: 0;\\r\\n    list-style-type: none;\\r\\n    line-height: 30px;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.dropdown-item {\\r\\n    padding: 5px;\\r\\n    background-color: #f5f5f5;\\r\\n    /* height: 30px;  */\\r\\n    line-height: 30px;\\r\\n    color: black;\\r\\n    /* vertical-align: middle; */ /* ovako je tekst centriran */\\r\\n}\\r\\n\\r\\n.dropdown-item-hover {\\r\\n    background-color: #cec8c8;\\r\\n    cursor: pointer;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.side-bar {\\r\\n    font-family: \\\"Trebuchet MS\\\", Helvetica, sans-serif;\\r\\n}\\r\\n\\r\\n.img {\\r\\n    width: 30px;\\r\\n    max-width: 30px;\\r\\n    height: 30px;\\r\\n    max-height: 30px;\\r\\n    float: left;\\r\\n    border-radius: 50%;\\r\\n    margin-left: -35px;\\r\\n    border: 1px solid #673ab7;\\r\\n}\\r\\n\\r\\n.table-width {\\r\\n    min-width: 720px;\\r\\n}\\r\\n\\r\\n.table > tbody > tr > td { \\r\\n    padding-top: 2px;\\r\\n    padding-bottom: 2px;\\r\\n    font-size: 13.5px;\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.table > thead > tr > th {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#meal-calculaton-table {\\r\\n    background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n#meal-calculaton-table > td {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n#row-total {\\r\\n    background-color: #ffd740;\\r\\n}\\r\\n\\r\\n#edit-food:hover {\\r\\n    color: #ffd740;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#delete-food:hover {\\r\\n    color: #f77a7a;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#quantityToEdit {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#done-food:hover {\\r\\n    color: rgb(4, 161, 4);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#cancel-food:hover {\\r\\n    color: rgb(4, 75, 230);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.search-row {\\r\\n    display: inline-block;\\r\\n    margin: 25px 0 25px 0;\\r\\n    background-color: rgb(199, 228, 238);\\r\\n    border-radius: 15px;\\r\\n}\\r\\n\\r\\n.search-row-opened {\\r\\n    display: inline-block;\\r\\n    margin: 25px 0 25px 0;\\r\\n    background-color: rgb(199, 228, 238);\\r\\n    border-radius: 15px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.search-text {\\r\\n    height: 60px;\\r\\n    line-height: 60px;\\r\\n}\\r\\n\\r\\n.search-text > span {\\r\\n    height: 60px;\\r\\n    line-height: 60px;\\r\\n}\\r\\n\\r\\n.search-text > span > i {\\r\\n    vertical-align: middle;\\r\\n    font-size: 40px;\\r\\n    color: #000000;\\r\\n}\\r\\n\\r\\n.search-input {\\r\\n    height: 60px;\\r\\n    line-height: 60px;\\r\\n}\\r\\n\\r\\n.search-input input {\\r\\n    height: 30px;\\r\\n}\\r\\n\\r\\n#search-sign {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n#search-sign > i {\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n#search-sign:hover {\\r\\n    color: white;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.search-text input {\\r\\n    height: 35px;\\r\\n    width: 200px;\\r\\n    max-width: 200px;\\r\\n}\\r\\n\\r\\n.gr {\\r\\n    float: right; \\r\\n    font-size: 13px; \\r\\n    color: rgb(104, 101, 101);\\r\\n    padding: 0 10px 5px 0;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\" [style.margin-top.px]=\\\"10\\\" [style.margin-left.px]=\\\"0\\\" [style.margin-right.px]=\\\"0\\\">\\n      <mat-toolbar [style.width]=\\\"'100%'\\\">My Nutrition Manager</mat-toolbar>\\n    </div>\\n  </div>\\n  \\n  <!-- enter info and hide buttons -->\\n  <div *ngIf=\\\"!checkedIfprovidedInfo\\\">\\n    Preparing things, please wait just a second...\\n  </div>\\n\\n  <div class=\\\"row hide-show-info-section-buttons\\\" *ngIf=\\\"checkedIfprovidedInfo\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <button color=\\\"primary\\\" mat-button (click)=\\\"showInfoSection=true\\\" *ngIf=\\\"!showInfoSection && !providedInfo\\n      && !calculating\\\" [style.margin-top.px]=\\\"5\\\">\\n        Enter Your info <i class=\\\"material-icons\\\">arrow_drop_down</i>\\n      </button>\\n      <button color=\\\"primary\\\" mat-button (click)=\\\"showInfoSection=false\\\" *ngIf=\\\"showInfoSection && !providedInfo\\n      && !calculating\\\" [style.margin-top.px]=\\\"5\\\">\\n        Hide <i class=\\\"material-icons\\\">arrow_drop_up</i>\\n      </button>\\n      <div class=\\\"calories\\\" *ngIf=\\\"providedInfo\\\">\\n        <i class=\\\"material-icons\\\" style=\\\"font-size:20px\\\">person</i>\\n        My daily calory limit: <strong>{{caloryLimit}}kcal</strong>\\n      </div>\\n\\n      <div *ngIf=\\\"totalInfo !== undefined\\\">\\n        <div *ngIf=\\\"checkedIfprovidedInfo && providedInfo && (caloryLimit - totalInfo?.energy)>=0\\\">\\n          <div>\\n            <div class=\\\"calories\\\" *ngIf=\\\"providedInfo\\\" style=\\\"background-color:#673ab7; color:white\\\">\\n              <i class=\\\"material-icons\\\" style=\\\"font-size:20px\\\">restaurant</i>\\n              Calories to go: &nbsp;<strong>{{caloryLimit - totalInfo.energy}}kcal</strong>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    \\n      <div *ngIf=\\\"totalInfo !== undefined\\\">\\n        <div *ngIf=\\\"checkedIfprovidedInfo && providedInfo && (caloryLimit - totalInfo?.energy)<0\\\">\\n          <div>\\n            <div class=\\\"calories\\\" *ngIf=\\\"providedInfo\\\" style=\\\"background-color:#f76565; color:white\\\">\\n              <i class=\\\"glyphicon glyphicon-exclamation-sign\\\" style=\\\"font-size:20px\\\"></i>\\n              Calory limit crossed for: &nbsp;<strong>{{-(caloryLimit - totalInfo.energy)}}kcal</strong>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-md-8\\\" *ngIf=\\\"!calculating\\\">\\n      <button color=\\\"accent\\\" mat-button (click)=\\\"showEditSection=true\\\" *ngIf=\\\"!showEditSection && providedInfo\\\" \\n      style=\\\"margin-top:5px;float:right;\\\">\\n      <i class=\\\"material-icons\\\" style=\\\"font-size:18px !important; vertical-align:middle;\\\">edit</i> Edit Your info\\n      </button>\\n      <button color=\\\"accent\\\" mat-button (click)=\\\"showEditSection=false\\\" *ngIf=\\\"showEditSection && providedInfo\\\" \\n      [style.margin-top.px]=\\\"5\\\" [style.float]=\\\"'right'\\\">\\n      <i class=\\\"material-icons\\\">arrow_drop_up</i> Hide\\n      </button>\\n    </div>\\n  </div>\\n\\n  <!--###### enter info form #####-->\\n  <div class=\\\"row\\\" *ngIf=\\\"!providedInfo && showInfoSection\\\">\\n    <div class=\\\"col-md-8 info-section\\\" *ngIf=\\\"!calculating\\\">\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"info-form\\\">\\n        <mat-form-field class=\\\"info-form-field\\\">\\n            <input matInput placeholder=\\\"Enter age\\\" name=\\\"age\\\" formControlName=\\\"age\\\">\\n            <mat-error *ngIf=\\\"form.controls.age.errors?.required && form.controls.age.dirty\\\">\\n              *Age is <strong>required</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"form.controls.age.errors?.validateAge && form.controls.age.dirty\\n            && !form.controls.age.errors?.required\\\">\\n              *Please enter <strong>valid age</strong>\\n            </mat-error> \\n        </mat-form-field>\\n        <br />\\n\\n        <mat-form-field class=\\\"info-form-field\\\">\\n            <input matInput placeholder=\\\"Enter height\\\" name=\\\"height\\\" formControlName=\\\"height\\\">\\n            <mat-error *ngIf=\\\"form.controls.height.errors?.required && form.controls.height.dirty\\\">\\n              *Height is <strong>required</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"form.controls.height.errors?.validateHeight && form.controls.height.dirty\\n            && !form.controls.height.errors?.required\\\">\\n              *Please enter <strong>valid height in 'cm'</strong>\\n            </mat-error> \\n        </mat-form-field>\\n        <br />\\n        \\n        <mat-form-field class=\\\"info-form-field\\\">\\n            <input matInput placeholder=\\\"Enter weight\\\" name=\\\"weight\\\" formControlName=\\\"weight\\\">\\n            <mat-error *ngIf=\\\"form.controls.weight.errors?.required && form.controls.weight.dirty\\\">\\n              *Weight is <strong>required</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"form.controls.weight.errors?.validateWeight && form.controls.weight.dirty\\n            && !form.controls.weight.errors?.required\\\">\\n              *Please enter <strong>valid weight in 'kg'</strong>\\n            </mat-error> \\n        </mat-form-field>\\n        <br />\\n\\n        <mat-form-field class=\\\"info-form-field\\\">\\n            <mat-select placeholder=\\\"Your gender\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">\\n              <mat-option [value]=\\\"'male'\\\">male</mat-option>\\n              <mat-option [value]=\\\"'female'\\\">female</mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"form.controls.gender.errors?.required && form.controls.gender.touched\\\">\\n              *Gender is <strong>required</strong>\\n            </mat-error>\\n        </mat-form-field>\\n          <br />\\n\\n          <div [style.margin-bottom.px]=\\\"10\\\">Activity level:</div> \\n          <mat-radio-group name=\\\"activity\\\" formControlName=\\\"activity\\\">\\n            <mat-radio-button value=\\\"sedentary\\\">\\n              <span matTooltip=\\\"Office worker getting little or no exercise\\\" matTooltipShowDelay=\\\"400\\\">\\n                Sedentary or light activity\\n              </span>\\n            </mat-radio-button>\\n            <mat-radio-button value=\\\"moderately_active\\\">\\n              <span matTooltip=\\\"Construction worker or person running one hour daily\\\" matTooltipShowDelay=\\\"400\\\">\\n                Active or moderately active\\n              </span>\\n            </mat-radio-button>\\n            <mat-radio-button value=\\\"vigorously_active\\\">\\n              <span matTooltip=\\\"Agricultural worker (non mechanized) or person swimming two hours daily\\\" matTooltipShowDelay=\\\"400\\\">\\n                  Vigorously active\\n              </span>\\n            </mat-radio-button>\\n          </mat-radio-group>\\n          <mat-error *ngIf=\\\"form.controls.activity.errors?.required && form.controls.activity.untouched\\\">\\n            <strong>*Select one</strong> of the activity levels\\n          </mat-error>\\n          <br />\\n          \\n          <div class=\\\"info-section-buttons-div\\\">\\n            <button [disabled]=\\\"!form.valid\\\" mat-fab type=\\\"submit\\\" class=\\\"submit-info-section\\\">\\n              <i class=\\\"material-icons\\\" [style.color]=\\\"'white'\\\">done</i>\\n            </button>\\n          </div> \\n\\n      </form>\\n    </div>\\n    <div *ngIf=\\\"calculating\\\">\\n      <mat-spinner></mat-spinner>\\n    </div>\\n  </div>\\n\\n  <!--##### edit info form #####-->\\n  <div class=\\\"row\\\" *ngIf=\\\"providedInfo && showEditSection\\\">\\n    <div class=\\\"col-md-4\\\" [style.margin-left.px]=\\\"-15\\\"></div>\\n    <div class=\\\"col-md-8 edit-section\\\" [ngClass]=\\\"{'edit-section': screenService.isLarge(), \\n    'edit-section-small': !screenService.isLarge() }\\\">\\n      <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmitEdit()\\\" class=\\\"info-form\\\">\\n        <mat-form-field class=\\\"info-form-field\\\">\\n            <input matInput placeholder=\\\"Enter age\\\" name=\\\"age\\\" formControlName=\\\"age\\\">\\n            <mat-error *ngIf=\\\"editForm.controls.age.errors?.required && editForm.controls.age.dirty\\\">\\n              *Age is <strong>required</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"editForm.controls.age.errors?.validateAge && editForm.controls.age.dirty\\n            && !editForm.controls.age.errors?.required\\\">\\n              *Please enter <strong>valid age</strong>\\n            </mat-error> \\n        </mat-form-field>\\n        <br />\\n\\n        <mat-form-field class=\\\"info-form-field\\\">\\n            <input matInput placeholder=\\\"Enter height\\\" name=\\\"height\\\" formControlName=\\\"height\\\">\\n            <mat-error *ngIf=\\\"editForm.controls.height.errors?.required && editForm.controls.height.dirty\\\">\\n              *Height is <strong>required</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"editForm.controls.height.errors?.validateHeight && editForm.controls.height.dirty\\n            && !editForm.controls.height.errors?.required\\\">\\n              *Please enter <strong>valid height in 'cm'</strong>\\n            </mat-error> \\n        </mat-form-field>\\n        <br />\\n        \\n        <mat-form-field class=\\\"info-form-field\\\">\\n            <input matInput placeholder=\\\"Enter weight\\\" name=\\\"weight\\\" formControlName=\\\"weight\\\">\\n            <mat-error *ngIf=\\\"editForm.controls.weight.errors?.required && editForm.controls.weight.dirty\\\">\\n              *Weight is <strong>required</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"editForm.controls.weight.errors?.validateWeight && editForm.controls.weight.dirty\\n            && !editForm.controls.weight.errors?.required\\\">\\n              *Please enter <strong>valid weight in 'kg'</strong>\\n            </mat-error> \\n        </mat-form-field>\\n        <br />\\n\\n        <mat-form-field class=\\\"info-form-field\\\">\\n            <mat-select placeholder=\\\"Your gender\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">\\n              <mat-option [value]=\\\"'male'\\\">male</mat-option>\\n              <mat-option [value]=\\\"'female'\\\">female</mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"editForm.controls.gender.errors?.required && editForm.controls.gender.touched\\\">\\n              *Gender is <strong>required</strong>\\n            </mat-error>\\n        </mat-form-field>\\n          <br />\\n\\n          <div [style.margin-bottom.px]=\\\"10\\\">Activity level:</div> \\n          <mat-radio-group name=\\\"activity\\\" formControlName=\\\"activity\\\">\\n            <mat-radio-button value=\\\"sedentary\\\">\\n              <span matTooltip=\\\"Office worker getting little or no exercise\\\" matTooltipShowDelay=\\\"400\\\">\\n                Sedentary or light activity\\n              </span>\\n            </mat-radio-button>\\n            <mat-radio-button value=\\\"moderately_active\\\">\\n              <span matTooltip=\\\"Construction worker or person running one hour daily\\\" matTooltipShowDelay=\\\"400\\\">\\n                Active or moderately active\\n              </span>\\n            </mat-radio-button>\\n            <mat-radio-button value=\\\"vigorously_active\\\">\\n              <span matTooltip=\\\"Agricultural worker (non mechanized) or person swimming two hours daily\\\" matTooltipShowDelay=\\\"400\\\">\\n                Vigorously active\\n              </span>\\n            </mat-radio-button>\\n          </mat-radio-group>\\n          <mat-error *ngIf=\\\"editForm.controls.activity.errors?.required && editForm.controls.activity.untouched\\\">\\n            <strong>*Select one</strong> of the activity levels\\n          </mat-error>\\n          <br />\\n          \\n          <div class=\\\"info-section-buttons-div\\\">\\n            <button [disabled]=\\\"!editForm.valid\\\" mat-fab type=\\\"submit\\\" class=\\\"submit-info-section\\\">\\n              <i class=\\\"material-icons\\\" [style.color]=\\\"'white'\\\">done</i>\\n            </button>\\n          </div> \\n\\n      </form>\\n    </div>\\n  </div>\\n\\n  <!-- ######## search food ########### -->\\n  <div class=\\\"row\\\" [ngClass]=\\\"{'search-row': !showSearchInput, 'search-row-opened': showSearchInput}\\\">\\n    <div class=\\\"col-sm-3 search-text\\\" style=\\\"display: flex; flex: 1;\\\">\\n      <div style=\\\"display: flex; flex: 1; margin: auto;\\\">\\n        <span matTooltip=\\\"search food\\\" (click)=\\\"onExpand()\\\" id=\\\"search-sign\\\" *ngIf=\\\"!showSearchInput\\\">\\n          <i class=\\\"material-icons\\\">search</i>\\n        </span>\\n        <span matTooltip=\\\"hide search\\\" (click)=\\\"onHideSearch()\\\" id=\\\"search-sign\\\" *ngIf=\\\"showSearchInput\\\">\\n          <i class=\\\"material-icons\\\">chevron_left</i>\\n        </span>\\n       \\n        <div [hidden]=\\\"!showSearchInput\\\">\\n            <input placeholder=\\\"Enter food\\\" class=\\\"input-food\\\" [(ngModel)]=\\\"searchText\\\" (input)=\\\"getMatchedGroceries()\\\"\\n              keydownEvent (keydownEvent)=\\\"onKeyDown($event)\\\" (keydown.enter)=\\\"onEnter()\\\" #foodSearch>\\n            <ul class=\\\"dropdown-list\\\">\\n              <li class=\\\"dropdown-item\\\" *ngFor=\\\"let groc of matchedGroceries; let i=index\\\" \\n              (click)=\\\"onItemClick(groc, i)\\\" clickOutside (clickOutside)=\\\"matchedGroceries=null;this.currentGrocerie=null;ind=-1\\\"\\n              (mouseover)=\\\"onMouseOver(groc, i)\\\" (mouseout)=\\\"onMouseOut()\\\"\\n              [ngClass]=\\\"{'dropdown-item-hover': ind==i}\\\">\\n              {{groc.food}}\\n              </li>\\n            </ul>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div  *ngIf=\\\"showSearchInput\\\">\\n      <div style=\\\"display: flex; min-height: 60px;\\\">\\n        <div *ngIf=\\\"!foodFound && searchPerformed\\\" style=\\\"margin: auto;\\\">\\n          No result\\n        </div>\\n        <div class=\\\"table-responsive\\\" *ngIf=\\\"foodFound && searchPerformed\\\">\\n          <table class=\\\"table\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th scope=\\\"col\\\">grocerie</th>\\n                <th scope=\\\"col\\\">energy</th>\\n                <th scope=\\\"col\\\">proteins</th>\\n                <th scope=\\\"col\\\">carbohydrates</th>\\n                <th scope=\\\"col\\\">sugar</th>\\n                <th scope=\\\"col\\\">fat</th>\\n                <th scope=\\\"col\\\">saturated</th>\\n                <th scope=\\\"col\\\">monounsaturated</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td scope=\\\"col\\\">{{searchedFood.food}}</td>\\n                <td scope=\\\"col\\\">{{searchedFood.energy}}kcal</td>\\n                <td scope=\\\"col\\\">{{searchedFood.proteins}}</td>\\n                <td scope=\\\"col\\\">{{searchedFood.carbohydrates}}</td>\\n                <td scope=\\\"col\\\">{{searchedFood.sugar}}</td>\\n                <td scope=\\\"col\\\">{{searchedFood.fat}}</td>\\n                <td scope=\\\"col\\\">{{searchedFood.saturated}}</td>\\n                <td scope=\\\"col\\\">{{searchedFood.monounsaturated}}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"foodFound && searchPerformed\\\" class=\\\"gr\\\">\\n        <span>*per 100g</span>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  \\n  <!-- ###### enter todays meals ########## , ############# todays meals table ######### --> \\n  <div class=\\\"row\\\" *ngIf=\\\"providedInfo\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <!-- enter meals -->\\n      <app-meals #meals></app-meals>\\n\\n\\n\\n      <div *ngIf=\\\"!screenService.isLarge()\\\" style=\\\"margin-top:20px;\\\">\\n          <!-- #################   breakfast    ####### -->\\n          <ul class=\\\"meal-list\\\" *ngIf=\\\"meals.breakfastItems!=''\\\">\\n            <div style=\\\"display:flex; justify-content:center; align-items:center;\\\">\\n              <img src=\\\"../../assets/breakfast.jpg\\\" alt=\\\"Avatar\\\" class=\\\"img\\\"> \\n              <h5 style=\\\"text-align:center; margin-left:5px;\\\"><strong class=\\\"side-bar\\\">Breakfast</strong></h5>\\n            </div>\\n            <li *ngFor=\\\"let breakf of meals.breakfastItems\\\" class=\\\"meal-item\\\">\\n              <i class=\\\"material-icons\\\" [style.font-size.px]=\\\"14\\\">check</i>\\n              <span class=\\\"side-bar\\\">{{breakf.food}} - {{breakf.quantity}}g</span>\\n              <span (click)=\\\"removeFromArray(meals.breakfastItems, breakf)\\\" class=\\\"times\\\">&times;</span>\\n            </li>\\n            <div style=\\\"text-align:center; height:20px; margin:5px 0 5px 0\\\">\\n              <span matTooltip=\\\"click to submit breakfast\\\">\\n                <button type=\\\"button\\\" (click)=\\\"pushTodaysBreakfast(meals.breakfastItems); meals.breakfastItems=[]\\\"\\n                class=\\\"btn btn-sm btn-success\\\">\\n                  <i class=\\\"material-icons\\\" style=\\\"font-size:13px; font-weight:bold; vertical-align:middle\\\">check</i>\\n                </button> \\n              </span>\\n            </div>\\n          </ul>\\n          <!-- #################   lunch    ####### -->\\n          <ul class=\\\"meal-list\\\" *ngIf=\\\"meals.lunchItems!=''\\\">\\n            <div style=\\\"display:flex; justify-content:center; align-items:center;\\\">\\n              <img src=\\\"../../assets/lunch.jpg\\\" alt=\\\"Avatar\\\" class=\\\"img\\\"> \\n              <h5 style=\\\"text-align:center; margin-left:5px;\\\"><strong class=\\\"side-bar\\\">Lunch</strong></h5>\\n            </div>\\n            <li *ngFor=\\\"let breakf of meals.lunchItems\\\" class=\\\"meal-item\\\">\\n              <i class=\\\"material-icons\\\" [style.font-size.px]=\\\"14\\\">check</i>\\n              <span class=\\\"side-bar\\\">{{breakf.food}} - {{breakf.quantity}}g</span>\\n              <span (click)=\\\"removeFromArray(meals.lunchItems, breakf)\\\" class=\\\"times\\\">&times;</span>\\n            </li>\\n            <div style=\\\"text-align:center; height:20px; margin:5px 0 5px 0\\\">\\n                <span matTooltip=\\\"click to submit lunch\\\">\\n                  <button type=\\\"button\\\" (click)=\\\"pushTodaysLunch(meals.lunchItems); meals.lunchItems=[]\\\"\\n                  class=\\\"btn btn-sm btn-success\\\">\\n                    <i class=\\\"material-icons\\\" style=\\\"font-size:13px; font-weight:bold; vertical-align:middle\\\">check</i>\\n                  </button> \\n                </span>\\n              </div> \\n          </ul>\\n          <!-- #################   dinner    ####### -->\\n          <ul class=\\\"meal-list\\\" *ngIf=\\\"meals.dinnerItems!=''\\\">\\n              <div style=\\\"display:flex; justify-content:center; align-items:center;\\\">\\n                <img src=\\\"../../assets/dinner.jpg\\\" alt=\\\"Avatar\\\" class=\\\"img\\\"> \\n                <h5 style=\\\"text-align:center; margin-left:5px;\\\"><strong class=\\\"side-bar\\\">Dinner</strong></h5>\\n              </div>\\n              <li *ngFor=\\\"let breakf of meals.dinnerItems\\\" class=\\\"meal-item\\\">\\n                <i class=\\\"material-icons\\\" [style.font-size.px]=\\\"14\\\">check</i>\\n                <span class=\\\"side-bar\\\">{{breakf.food}} - {{breakf.quantity}}g</span>\\n                <span (click)=\\\"removeFromArray(meals.dinnerItems, breakf)\\\" class=\\\"times\\\">&times;</span>\\n              </li>\\n              <div style=\\\"text-align:center; height:20px; margin:5px 0 5px 0\\\">\\n                  <span matTooltip=\\\"click to submit dinner\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"pushTodaysDinner(meals.dinnerItems); meals.dinnerItems=[]\\\"\\n                    class=\\\"btn btn-sm btn-success\\\">\\n                      <i class=\\\"material-icons\\\" style=\\\"font-size:13px; font-weight:bold; vertical-align:middle\\\">check</i>\\n                    </button> \\n                  </span>\\n                </div> \\n            </ul>\\n          <!-- #################   additionally    ####### -->\\n          <ul class=\\\"meal-list\\\" *ngIf=\\\"meals.additionallyItems!=''\\\">\\n            <div style=\\\"display:flex; justify-content:center; align-items:center;\\\">\\n              <img src=\\\"../../assets/additionally.jpg\\\" alt=\\\"Avatar\\\" class=\\\"img\\\"> \\n              <h5 style=\\\"text-align:center; margin-left:5px;\\\"><strong class=\\\"side-bar\\\">Additionally</strong></h5>\\n            </div>\\n            <li *ngFor=\\\"let breakf of meals.additionallyItems\\\" class=\\\"meal-item\\\">\\n              <i class=\\\"material-icons\\\" [style.font-size.px]=\\\"14\\\">check</i>\\n              <span class=\\\"side-bar\\\">{{breakf.food}} - {{breakf.quantity}}g</span>\\n              <span (click)=\\\"removeFromArray(meals.additionallyItems, breakf)\\\" class=\\\"times\\\">&times;</span>\\n            </li>\\n            <div style=\\\"text-align:center; height:20px; margin:5px 0 5px 0\\\">\\n                <span matTooltip=\\\"click to submit additionally food\\\">\\n                  <button type=\\\"button\\\" (click)=\\\"pushTodaysAdditionally(meals.additionallyItems); meals.additionallyItems=[]\\\"\\n                  class=\\\"btn btn-sm btn-success\\\">\\n                    <i class=\\\"material-icons\\\" style=\\\"font-size:13px; font-weight:bold; vertical-align:middle\\\">check</i>\\n                  </button> \\n                </span>\\n              </div> \\n          </ul>\\n        </div>\\n\\n\\n\\n      <!-- entered todays meals -->\\n      <h4 style=\\\"margin:15px 0 10px 5px\\\">\\n          <i class=\\\"material-icons\\\" style=\\\"vertical-align:bottom;\\\">person</i>My todays meals:\\n      </h4>\\n      <div *ngIf=\\\"!gettingMealsDone\\\">\\n        <span style=\\\"font-size:14px\\\">Getting meals info...</span>\\n      </div>\\n      <div *ngIf=\\\"todaysMealsEmpty && gettingMealsDone\\\">\\n        <mat-list color=\\\"accent\\\">\\n          <mat-list-item>(meals not entered yet)</mat-list-item>\\n          <mat-list-item style=\\\"margin-top:-20px;\\\">\\n              Calories to go:<strong style=\\\"margin-left:5px\\\">{{caloryLimit}}kcal</strong>\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <div class=\\\"table-responsive\\\" *ngIf=\\\"!todaysMealsEmpty && gettingMealsDone\\\" \\n      [ngClass]=\\\"{'table-width': screenService.isLarge()}\\\"> <!-- table width is crossing col-md-8 but i want it, because i dont want to save scroll on big screens -->\\n        <table class=\\\"table table-hover\\\" style=\\\"min-width: 710px;\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th scope=\\\"col\\\"></th> \\n              <th scope=\\\"col\\\">grocerie</th>\\n              <th scope=\\\"col\\\">quantity(g)</th>\\n              <th scope=\\\"col\\\">energy(kcal)</th>\\n              <th scope=\\\"col\\\">proteins(g)</th>\\n              <th scope=\\\"col\\\">carbohydrates(g)</th>\\n              <th scope=\\\"col\\\">sugar(g)</th>\\n              <th scope=\\\"col\\\">fat(g)</th>\\n              <th scope=\\\"col\\\">saturated(g)</th>\\n              <th scope=\\\"col\\\">monounsaturated(g)</th>\\n            </tr>\\n          </thead>\\n          <tbody *ngFor=\\\"let array of todaysMeals; let i = index\\\">\\n            <tr id=\\\"meal-calculaton-table\\\">\\n              <td colspan=\\\"10\\\"><strong>{{mealNames[i]}}</strong></td>\\n            </tr>\\n            <tr *ngFor=\\\"let item of array\\\">\\n              <td scope=\\\"col\\\">\\n                <div style=\\\"display:flex;\\\" *ngIf=\\\"!isEditing(item.id)\\\">\\n                  <span matTooltip=\\\"edit\\\" id=\\\"edit-food\\\"\\n                  (click)=\\\"editQuantity(item.food, item.quantity, item.id)\\\">\\n                    <i class=\\\"material-icons\\\">edit</i>\\n                  </span>\\n                  <span matTooltip=\\\"delete\\\" id=\\\"delete-food\\\" \\n                  (click)=\\\"deleteFood(item.food, item.quantity, i)\\\">\\n                    <i class=\\\"material-icons\\\">delete</i>\\n                  </span>\\n                </div>\\n                <div style=\\\"display:flex;\\\" *ngIf=\\\"isEditing(item.id)\\\">\\n                  <span matTooltip=\\\"save\\\" id=\\\"done-food\\\"\\n                  (click)=\\\"onSaveEditing(i)\\\">\\n                    <i class=\\\"material-icons\\\">done</i>\\n                  </span>\\n                  <span matTooltip=\\\"cancel\\\" id=\\\"cancel-food\\\"\\n                  (click)=\\\"onCancelEditing()\\\">\\n                    <i class=\\\"material-icons\\\">cancel</i>\\n                  </span>\\n                </div>\\n              </td>\\n              <td scope=\\\"col\\\">{{item.food}}</td>\\n              <td scope=\\\"col\\\">\\n                <span *ngIf=\\\"!isEditing(item.id)\\\">{{item.quantity}}</span>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"quantityToEdit\\\" name=\\\"quantityToEdit\\\" id=\\\"quantityToEdit\\\"\\n                *ngIf=\\\"isEditing(item.id)\\\" size=\\\"8\\\" autocomplete=\\\"off\\\" maxlength=\\\"4\\\">\\n                <span *ngIf=\\\"quantErrMsg!='' && isEditing(item.id)\\\" \\n                style=\\\"color:red; font-size:10.5px\\\">{{quantErrMsg}}</span>\\n              </td>\\n              <td scope=\\\"col\\\">{{item.energy}}</td>\\n              <td scope=\\\"col\\\">{{item.proteins}}</td>\\n              <td scope=\\\"col\\\">{{item.carbohydrates}}</td>\\n              <td scope=\\\"col\\\">{{item.sugar}}</td>\\n              <td scope=\\\"col\\\">{{item.fat}}</td>\\n              <td scope=\\\"col\\\">{{item.saturated}}</td>\\n              <td scope=\\\"col\\\">{{item.monounsaturated}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>&Sigma;</strong></td>\\n              <td scope=\\\"col\\\"></td>\\n              <td scope=\\\"col\\\"></td>\\n              <td scope=\\\"col\\\">{{todaysInfos[i].energy}}</td>\\n              <td scope=\\\"col\\\">{{todaysInfos[i].proteins}}</td>\\n              <td scope=\\\"col\\\">{{todaysInfos[i].carbohydrates}}</td>\\n              <td scope=\\\"col\\\">{{todaysInfos[i].sugar}}</td>\\n              <td scope=\\\"col\\\">{{todaysInfos[i].fat}}</td>\\n              <td scope=\\\"col\\\">{{todaysInfos[i].saturated}}</td>\\n              <td scope=\\\"col\\\">{{todaysInfos[i].monounsaturated}}</td>\\n            </tr>\\n          </tbody>\\n          <tr id=\\\"row-total\\\">\\n              <td><strong>TOTAL</strong></td>\\n              <td scope=\\\"col\\\"></td>\\n              <td scope=\\\"col\\\"></td>\\n              <td scope=\\\"col\\\"><strong>{{totalInfo.energy}}</strong></td>\\n              <td scope=\\\"col\\\"><strong>{{totalInfo.proteins}}</strong></td>\\n              <td scope=\\\"col\\\"><strong>{{totalInfo.carbohydrates}}</strong></td>\\n              <td scope=\\\"col\\\"><strong>{{totalInfo.sugar}}</strong></td>\\n              <td scope=\\\"col\\\"><strong>{{totalInfo.fat}}</strong></td>\\n              <td scope=\\\"col\\\"><strong>{{totalInfo.saturated}}</strong></td>\\n              <td scope=\\\"col\\\"><strong>{{totalInfo.monounsaturated}}</strong></td>\\n          </tr>\\n        </table>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-md-1\\\"></div>\\n    <div class=\\\"col-md-3\\\" *ngIf=\\\"screenService.isLarge()\\\">\\n      <!-- #################   breakfast    ####### -->\\n      <ul class=\\\"meal-list\\\" *ngIf=\\\"meals.breakfastItems!=''\\\">\\n        <div style=\\\"display:flex; justify-content:center; align-items:center;\\\">\\n          <img src=\\\"../../assets/breakfast.jpg\\\" alt=\\\"Avatar\\\" class=\\\"img\\\"> \\n          <h5 style=\\\"text-align:center; margin-left:5px;\\\"><strong class=\\\"side-bar\\\">Breakfast</strong></h5>\\n        </div>\\n        <li *ngFor=\\\"let breakf of meals.breakfastItems\\\" class=\\\"meal-item\\\">\\n          <i class=\\\"material-icons\\\" [style.font-size.px]=\\\"14\\\">check</i>\\n          <span class=\\\"side-bar\\\">{{breakf.food}} - {{breakf.quantity}}g</span>\\n          <span (click)=\\\"removeFromArray(meals.breakfastItems, breakf)\\\" class=\\\"times\\\">&times;</span>\\n        </li>\\n        <div style=\\\"text-align:center; height:20px; margin:5px 0 5px 0\\\">\\n          <span matTooltip=\\\"click to submit breakfast\\\">\\n            <button type=\\\"button\\\" (click)=\\\"pushTodaysBreakfast(meals.breakfastItems); meals.breakfastItems=[]\\\"\\n            class=\\\"btn btn-sm btn-success\\\">\\n              <i class=\\\"material-icons\\\" style=\\\"font-size:13px; font-weight:bold; vertical-align:middle\\\">check</i>\\n            </button> \\n          </span>\\n        </div>\\n      </ul>\\n      <!-- #################   lunch    ####### -->\\n      <ul class=\\\"meal-list\\\" *ngIf=\\\"meals.lunchItems!=''\\\">\\n        <div style=\\\"display:flex; justify-content:center; align-items:center;\\\">\\n          <img src=\\\"../../assets/lunch.jpg\\\" alt=\\\"Avatar\\\" class=\\\"img\\\"> \\n          <h5 style=\\\"text-align:center; margin-left:5px;\\\"><strong class=\\\"side-bar\\\">Lunch</strong></h5>\\n        </div>\\n        <li *ngFor=\\\"let breakf of meals.lunchItems\\\" class=\\\"meal-item\\\">\\n          <i class=\\\"material-icons\\\" [style.font-size.px]=\\\"14\\\">check</i>\\n          <span class=\\\"side-bar\\\">{{breakf.food}} - {{breakf.quantity}}g</span>\\n          <span (click)=\\\"removeFromArray(meals.lunchItems, breakf)\\\" class=\\\"times\\\">&times;</span>\\n        </li>\\n        <div style=\\\"text-align:center; height:20px; margin:5px 0 5px 0\\\">\\n            <span matTooltip=\\\"click to submit lunch\\\">\\n              <button type=\\\"button\\\" (click)=\\\"pushTodaysLunch(meals.lunchItems); meals.lunchItems=[]\\\"\\n              class=\\\"btn btn-sm btn-success\\\">\\n                <i class=\\\"material-icons\\\" style=\\\"font-size:13px; font-weight:bold; vertical-align:middle\\\">check</i>\\n              </button> \\n            </span>\\n          </div> \\n      </ul>\\n      <!-- #################   dinner    ####### -->\\n      <ul class=\\\"meal-list\\\" *ngIf=\\\"meals.dinnerItems!=''\\\">\\n          <div style=\\\"display:flex; justify-content:center; align-items:center;\\\">\\n            <img src=\\\"../../assets/dinner.jpg\\\" alt=\\\"Avatar\\\" class=\\\"img\\\"> \\n            <h5 style=\\\"text-align:center; margin-left:5px;\\\"><strong class=\\\"side-bar\\\">Dinner</strong></h5>\\n          </div>\\n          <li *ngFor=\\\"let breakf of meals.dinnerItems\\\" class=\\\"meal-item\\\">\\n            <i class=\\\"material-icons\\\" [style.font-size.px]=\\\"14\\\">check</i>\\n            <span class=\\\"side-bar\\\">{{breakf.food}} - {{breakf.quantity}}g</span>\\n            <span (click)=\\\"removeFromArray(meals.dinnerItems, breakf)\\\" class=\\\"times\\\">&times;</span>\\n          </li>\\n          <div style=\\\"text-align:center; height:20px; margin:5px 0 5px 0\\\">\\n              <span matTooltip=\\\"click to submit dinner\\\">\\n                <button type=\\\"button\\\" (click)=\\\"pushTodaysDinner(meals.dinnerItems); meals.dinnerItems=[]\\\"\\n                class=\\\"btn btn-sm btn-success\\\">\\n                  <i class=\\\"material-icons\\\" style=\\\"font-size:13px; font-weight:bold; vertical-align:middle\\\">check</i>\\n                </button> \\n              </span>\\n            </div> \\n        </ul>\\n      <!-- #################   additionally    ####### -->\\n      <ul class=\\\"meal-list\\\" *ngIf=\\\"meals.additionallyItems!=''\\\">\\n        <div style=\\\"display:flex; justify-content:center; align-items:center;\\\">\\n          <img src=\\\"../../assets/additionally.jpg\\\" alt=\\\"Avatar\\\" class=\\\"img\\\"> \\n          <h5 style=\\\"text-align:center; margin-left:5px;\\\"><strong class=\\\"side-bar\\\">Additionally</strong></h5>\\n        </div>\\n        <li *ngFor=\\\"let breakf of meals.additionallyItems\\\" class=\\\"meal-item\\\">\\n          <i class=\\\"material-icons\\\" [style.font-size.px]=\\\"14\\\">check</i>\\n          <span class=\\\"side-bar\\\">{{breakf.food}} - {{breakf.quantity}}g</span>\\n          <span (click)=\\\"removeFromArray(meals.additionallyItems, breakf)\\\" class=\\\"times\\\">&times;</span>\\n        </li>\\n        <div style=\\\"text-align:center; height:20px; margin:5px 0 5px 0\\\">\\n            <span matTooltip=\\\"click to submit additionally food\\\">\\n              <button type=\\\"button\\\" (click)=\\\"pushTodaysAdditionally(meals.additionallyItems); meals.additionallyItems=[]\\\"\\n              class=\\\"btn btn-sm btn-success\\\">\\n                <i class=\\\"material-icons\\\" style=\\\"font-size:13px; font-weight:bold; vertical-align:middle\\\">check</i>\\n              </button> \\n            </span>\\n          </div> \\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- ########## tables of meals for earlier days ############ -->\\n  <div class=\\\"row\\\" *ngIf=\\\"providedInfo\\\" style=\\\"margin:30px 0 0 0\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-9\\\">\\n        <h4>{{periodName()}}</h4>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n          <mat-form-field class=\\\"info-form-field\\\">\\n              <mat-select placeholder=\\\"Select period\\\" name=\\\"period\\\" [(ngModel)]=\\\"period\\\" [disabled]=\\\"!checkboxPeriod\\\">\\n                <mat-option [value]=\\\"'3days'\\\">last 3 days</mat-option>\\n                <mat-option [value]=\\\"'week'\\\">this week</mat-option>\\n                <mat-option [value]=\\\"'month'\\\">this month</mat-option>\\n              </mat-select>\\n          </mat-form-field>\\n      </div>\\n    </div>\\n    {{date}}\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <app-earlier-days [period]=\\\"period\\\" [caloryLimit]=\\\"caloryLimit\\\"></app-earlier-days>\\n      </div>\\n    </div>\\n  </div>\\n\\n  \\n</div>\"","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NutritionService } from 'src/app/services/nutrition.service';\nimport { ScreenService } from 'src/app/services/screen.service';\nimport { MatSnackBar } from '@angular/material';\nimport { Http } from '@angular/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { MealsComponent } from '../meals/meals.component';\n\n@Component({\n  selector: 'app-nutrition-manager',\n  templateUrl: './nutrition-manager.component.html',\n  styleUrls: ['./nutrition-manager.component.css']\n})\nexport class NutritionManagerComponent implements OnInit {\n  @ViewChild('quantEditing') quantEditing: ElementRef;\n  @ViewChild('foodSearch') foodSearch: ElementRef;\n  showInfoSection = false;\n  form: FormGroup;\n  editForm: FormGroup;\n  providedInfo; // determines whether to show to enter user's info or to edit user's info\n  checkedIfprovidedInfo = false; // false while checking to database if user provided info\n  showEditSection = false;\n  calculating = false;\n  caloryLimit = null;\n  matchedGroceries = null;\n  searchText = ''; ind = -1; currentGrocerie = null;\n  todaysMealsEmpty = true;\n  todaysBreakfast = null; todaysLunch = null; todaysDinner = null; todaysAdditionally = null;\n  todaysMeals = []; todaysInfos = []; mealNames = ['Breakfast', 'Lunch', 'Dinner', 'Additionally'];\n  totalInfo;\n  gettingMealsDone = false; // false while getting information about meals from database(no matter meals exist or not)\n  editingQuantity; quantityToEdit; itemForEdit = { food: '', quantity: '', id: '' }; quantErrMsg = '';\n  period;\n  showSearchInput = false;\n  foodFound = false;\n  searchPerformed = false;\n  searchedFood = null;\n  lastChoice = '3days';\n  date;\n  checkboxDate = false;\n  checkboxPeriod = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private nutritionService: NutritionService,\n    private screenService: ScreenService,\n    private snackBar: MatSnackBar,\n    private http: Http,\n    private route: ActivatedRoute\n  ) { \n    this.createForm(); \n    this.createEditForm();\n  }\n\n  ngOnInit() {\n    this.route.queryParamMap // to remember which period filter was chosen\n      .subscribe(\n        params => {\n          this.period = params.get('period') || '3days';\n        }\n      );\n    this.setValues();\n    this.getMealsForDate(new Date());\n  }\n\n  // snack bar messages\n  openSnackBar(message: string) {\n    this.snackBar.open(message, '', {duration: 2000});\n  }\n\n  // validate height\n  validateHeight(control) {\n    let regexp = /^1\\d{2}$|^20\\d$|^21\\d$|^22\\d$|^23\\d$|^24\\d$/;\n    if(regexp.test(control.value)) { return null }\n    else { return { 'validateHeight': true } }\n  }\n\n  // vaidate weight\n  validateWeight(control) {\n    let regexp = /^3\\d{1}$|^4\\d{1}$|^5\\d{1}$|^6\\d{1}$|^7\\d{1}$|^8\\d{1}$|^9\\d{1}$|^1\\d{2}$|^2\\d{2}$/;\n    if(regexp.test(control.value)) { return null }\n    else { return { 'validateWeight': true } }\n  }\n\n  // validate age\n  validateAge(control) {\n    let regexp = /^\\d{1,2}$|^10\\d{1}$|^11\\d{1}$/;\n    if(regexp.test(control.value)) { return null }\n    else { return { 'validateAge': true } }\n  }\n\n  // create reactive form\n  createForm() {\n    this.form = this.fb.group({\n      age: new FormControl('', [ Validators.required, this.validateAge ]),\n      height: new FormControl('', [ Validators.required, this.validateHeight ]),\n      weight: new FormControl('', [ Validators.required, this.validateWeight ]),\n      gender: new FormControl('', [ Validators.required ]), \n      activity: new FormControl('', [ Validators.required ]), \n    });\n  }\n\n  // create reactive edit form\n  createEditForm() {\n    this.editForm = this.fb.group({\n      age: new FormControl('', [ Validators.required, this.validateAge ]),\n      height: new FormControl('', [ Validators.required, this.validateHeight ]),\n      weight: new FormControl('', [ Validators.required, this.validateWeight ]),\n      gender: new FormControl('', [ Validators.required ]), \n      activity: new FormControl('', [ Validators.required ]), \n    });\n  }\n\n  // submit user's physical info (POST)\n  onSubmit() {\n    const info = {\n      age: this.form.get('age').value,\n      height: this.form.get('height').value,\n      weight: this.form.get('weight').value,\n      gender: this.form.get('gender').value,\n      activity: this.form.get('activity').value\n    }\n    this.nutritionService.addPhysicalInfo(info)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.openSnackBar('Something went wrong..');\n          }\n          else {\n            this.calculating = true;\n            setTimeout(() => {\n              this.setValues();\n              this.calculating = false;\n              this.openSnackBar('Successfully added physical info!');\n            }, 2000);\n          }\n        }\n      );\n  }\n\n  // submit EDIT user's physical info (PUT)\n  onSubmitEdit() {\n    const editedInfo = {\n      age: this.editForm.get('age').value,\n      height: this.editForm.get('height').value,\n      weight: this.editForm.get('weight').value,\n      gender: this.editForm.get('gender').value,\n      activity: this.editForm.get('activity').value\n    }\n    this.nutritionService.editInfo(editedInfo)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.openSnackBar(data.msg);\n          }\n          else {\n            this.openSnackBar(data.msg);\n            this.showEditSection = false;\n            this.setValues();\n          }\n        }\n      );    \n  }\n\n  // set values from database to edit section\n  setValues() {\n    this.nutritionService.checkForInfo()\n    .subscribe(\n      data => {\n        if(!data.success) {\n          this.checkedIfprovidedInfo = true;\n          this.providedInfo = false;\n        }\n        else {\n          this.checkedIfprovidedInfo = true;\n          this.providedInfo = true;\n          this.caloryLimit = Math.round(Number(data.info.calories));\n          this.editForm.setValue({\n            age: data.info.age,\n            height: data.info.height,\n            weight: data.info.weight,\n            gender: data.info.gender,\n            activity: data.info.activity\n          });\n        }\n      }\n    );\n  }\n\n  // convert date to string in form of dd-mm-yyyy (adding one to\n  // month to get real month, because of zero-based months in JS)\n  dateToString(date) {\n    let d = date.getDate();\n    let m = date.getMonth() + 1;\n    let y = date.getFullYear();\n    if(d<=9) {\n      d = \"0\"+d;\n    }\n    if(m<=9) {\n      m = \"0\"+m; \n    }\n    let dateString = d+\"-\"+m+\"-\"+y;\n    return dateString; \n  }\n\n  // remove item from array of meals (universal)\n  removeFromArray(array, arrayItem) {\n    let ind = array.findIndex(item => (item.food == arrayItem.food && item.quantity == arrayItem.quantity));\n    array.splice(ind, 1);\n  }\n\n  // get all matched groceries\n  getMatchedGroceries() {\n    let regexp = /^\\s+$/;\n    if(this.searchText === '' || regexp.test(this.searchText)) {\n      this.matchedGroceries = null;\n    }\n    else {\n      this.ind = -1;\n      this.currentGrocerie = null;\n      this.nutritionService.getMathedGroceries(this.searchText)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.matchedGroceries = null;\n          }\n          else {\n            this.matchedGroceries = data.groceries;\n          }\n        }\n      );\n    }\n  }\n\n  // on key down in search field\n  onKeyDown(event) {\n    if(this.matchedGroceries != null) { \n      if(event === 'downArrow') {\n        if(this.ind == this.matchedGroceries.length-1) {\n          this.ind = 0;\n        }\n        else {\n          ++this.ind;\n        }\n        if(this.ind>-1 && this.ind<this.matchedGroceries.length) {\n          this.currentGrocerie = this.matchedGroceries[this.ind];  \n        }\n      }\n      if(event === 'upArrow') {\n        if(this.ind == -1 || this.ind == 0) {\n          this.ind = this.matchedGroceries.length-1;\n        }\n        else {\n          --this.ind;\n        }\n        if(this.ind>-1 && this.ind<this.matchedGroceries.length) {\n          this.currentGrocerie = this.matchedGroceries[this.ind];\n        }\n      }\n    }\n  }\n\n  onEnter() {\n    if(this.currentGrocerie != null) {\n      this.searchText = this.currentGrocerie.food;\n    }\n    this.matchedGroceries = null;\n    this.ind = -1;\n    this.currentGrocerie = null;\n    let regexp = /^\\s+$/;\n    if(this.searchText != '' && !regexp.test(this.searchText)) {\n      this.nutritionService.searchGroceries(this.searchText)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.searchPerformed = true;\n            this.foodFound = false;\n          }\n          else {\n            this.searchPerformed = true;\n            this.foodFound = true;\n            this.searchedFood = data.grocerie;\n\n          }\n        }\n      );\n    }\n  }\n\n  onItemClick(grocerie, index) {\n    this.searchText = this.currentGrocerie.food;\n    this.matchedGroceries = null;\n    this.ind = -1;\n  }\n\n  onMouseOver(groc, ind) {\n    this.currentGrocerie = groc;\n    this.ind = ind;\n  }\n\n  onMouseOut() {\n    this.currentGrocerie = null;\n    this.ind = -1;\n  }\n\n  // push todays breakfast to database\n  pushTodaysBreakfast(todaysBreakfast) {\n    let breakfast = {\n      date: this.dateToString(new Date()),\n      items: todaysBreakfast,\n      meal: 'breakfast'\n    }\n    this.nutritionService.pushTodaysMeal(breakfast)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.openSnackBar(data.msg);\n          }\n          else {\n            todaysBreakfast = null;\n            this.openSnackBar(data.msg);\n            this.getMealsForDate(new Date());\n          }\n        }\n      );\n    \n  }\n\n  // push todays lunch to database\n  pushTodaysLunch(todaysLunch) {\n    let lunch = {\n      date: this.dateToString(new Date()),\n      items: todaysLunch,\n      meal: 'lunch'\n    }\n    this.nutritionService.pushTodaysMeal(lunch)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.openSnackBar(data.msg);\n          }\n          else {\n            todaysLunch = null;\n            this.openSnackBar(data.msg);\n            this.getMealsForDate(new Date());\n          }\n        }\n      );\n  }\n\n  // push todays dinner to database\n  pushTodaysDinner(todaysDinner) {\n    let dinner = {\n      date: this.dateToString(new Date()),\n      items: todaysDinner,\n      meal: 'dinner'\n    }\n    this.nutritionService.pushTodaysMeal(dinner)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.openSnackBar(data.msg);\n          }\n          else {\n            todaysDinner = null;\n            this.openSnackBar(data.msg);\n            this.getMealsForDate(new Date());\n          }\n        }\n      );\n  }\n\n// push todays additionally to database\npushTodaysAdditionally(todaysAdditionally) {\n  let additionally = {\n    date: this.dateToString(new Date()),\n    items: todaysAdditionally,\n    meal: 'additionally'\n  }\n  this.nutritionService.pushTodaysMeal(additionally)\n    .subscribe(\n      data => {\n        if(!data.success) {\n          this.openSnackBar(data.msg);\n        }\n        else {\n          todaysAdditionally = null;\n          this.openSnackBar(data.msg);\n          this.getMealsForDate(new Date());\n        }\n      }\n    );\n}\n\n// get meals for specific date $$$$$$$(pass date in 'date' format, and function converts it to string)$$$$$$$$\ngetMealsForDate(date) {\n  this.nutritionService.getMealsInfo(this.dateToString(date))\n    .subscribe(\n      data => {\n        if(!data.success) {\n          this.gettingMealsDone = true;\n          this.todaysMealsEmpty = true;\n          this.totalInfo = data.totalInfo;\n        }\n        else {\n          this.gettingMealsDone = true;\n          this.todaysMealsEmpty = false;\n          this.todaysMeals = data.mealsInfo; \n          this.todaysInfos = data.sumInfo;\n          this.totalInfo = data.totalInfo;\n        }\n      }\n    );\n}\n\n// delete food for specific meal, for today ########## getMealsForDate(this.dateToString(new Date())); **\ndeleteFood(food, quant, ind) {\n  let date = this.dateToString(new Date());\n  this.nutritionService.deleteFood(food, quant, this.mealNames[ind], date )\n    .subscribe(\n      data => {\n        if(!data.success) {\n          console.log(data.msg);\n        }\n        else {\n          this.deleteMeal(date); // run cleaner\n          this.getMealsForDate(new Date()); // <-- **\n          console.log(data.msg);\n        }\n      }\n    );\n}\n\n// check is all meals are empty after deleting food from some meal, and if they are empty, delete meal document\ndeleteMeal(date) {\n  this.nutritionService.deleteMeal(date)\n    .subscribe(\n      data => {\n        if(!data.success) {\n          console.log(data.msg);\n        }\n        else {\n          console.log(data.msg);\n        }\n      }\n    );\n}\n\n// when edit button clicked\neditQuantity(food, quantity, id) {\n  this.quantErrMsg = '';\n  this.itemForEdit.food = food;\n  this.itemForEdit.quantity = quantity;\n  this.itemForEdit.id = id;\n  //this.editingQuantity = true;\n  this.quantityToEdit = quantity;\n}\n\n// check if this item is clicked to be edited\nisEditing(id): boolean {\n  if(this.itemForEdit.id == id) {\n    return true;\n  }\n  else {\n    return false;\n  }\n}\n\n// on cancel editing\nonCancelEditing() {\n  this.quantErrMsg = '';\n  this.itemForEdit.food = '';\n  this.itemForEdit.quantity = '';\n  this.itemForEdit.id = '';\n}\n\n// on save editing\nonSaveEditing(i) {\n  let num = Number(this.quantityToEdit);\n  if(this.quantityToEdit == '' || num<1 || num>5000) {\n    this.quantErrMsg = '*Please enter valid quantity in \\'g\\'';\n  }\n  else {\n    this.quantErrMsg = '';\n    let object = {\n      date: this.dateToString(new Date()),\n      food: this.itemForEdit.food,\n      quant: this.itemForEdit.quantity,\n      newQuant: this.quantityToEdit,\n      mealName: this.mealNames[i]\n    }\n    this.nutritionService.updateSingleQuantity(object)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.itemForEdit.food = '';\n            this.itemForEdit.quantity = '';\n            this.itemForEdit.id = '';\n          }\n          else {\n            setTimeout(() => {\n              this.itemForEdit.food = '';\n              this.itemForEdit.quantity = '';\n              this.itemForEdit.id = '';\n            }, 300); // put inside setTimeout, because if put only after this.getMealsForDate(new Date()) , it will be \n                    // executed before update(getMealsForDate is asynchronous) and I dont want it executed first\n            this.getMealsForDate(new Date()); // get all info again\n            \n          }\n        }\n      );\n  }\n}\n\n// prepare array of dates for which we want to get info\n// today not included in dates which are sent \ncalculateDates() { //calculateDates should be called on Init\n  let dates = [];\n  let monthsAfter31 = [1, 3, 5, 7, 8, 10];\n  let monthsAfter30 = [4, 6, 9, 11];\n  let day = (new Date()).getDay();\n  let date = (new Date()).getDate();\n  let month = (new Date()).getMonth(); \n  let year = (new Date()).getFullYear();\n  let numberOfDays;\n  if(this.period == '3days') {\n    numberOfDays = 3;\n  }\n  else if(this.period == 'week') {\n    numberOfDays = day-1; // dont want today so -1\n  }\n  else if(this.period == 'month') {\n    numberOfDays = date-1; // dont want today so -1\n  }\n  let count = 1;\n  while(count <= numberOfDays) {\n    if(date == 1) {\n      if(monthsAfter31.includes(month)) {\n        date = 31;\n        month = month - 1;\n      }\n      else if(monthsAfter30.includes(month)) {\n        date = 30;\n        month = month - 1;\n      }\n      else if(month == 2) {\n        date = 28;\n        month = month - 1;\n      }\n      else if(month == 0) {\n        date = 31;\n        month = 11;\n        year = year - 1;\n      }\n    }\n    else {\n      date = date - 1;\n    }\n    let month1 = month+1; // with this +1 I get correct date\n    let s = new Date(month1+' '+date+','+year+' 02:00:00'); // only for check\n    dates.push(this.dateToString(new Date(month1+' '+date+','+year+' 02:00:00')));\n    count++;\n  }\n}\n\n  // period name just for the template\n  periodName() {\n    switch(this.period) {\n      case '3days':\n        return 'My meals for: last 3 days';\n      case 'week':\n        return 'My meals for: this week';\n      case 'month':\n        return 'My meals for: this month';\n      default: return '(error)'\n    }\n  }\n\n  // on hide search\n  onHideSearch() {\n    this.showSearchInput = false;\n    this.searchText = '';\n    this.currentGrocerie = null;\n    this.ind = -1;\n    this.searchPerformed = false;\n    this.searchedFood = null;\n  }\n\n  // set focus on expand search div\n  onExpand() {\n    this.showSearchInput = true;\n    setTimeout(() => {\n      this.foodSearch.nativeElement.focus();\n    }, 100); // put a little timeout, because immediately template reference variable is not visible\n  }\n\n\n\n}\n","module.exports = \".list-group {\\r\\n    z-index: 0;\\r\\n}\\r\\n\\r\\n.table {\\r\\n    border: 1px solid #dddddd;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2 class=\\\"page-header\\\">Profile Page</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngIf=\\\"user?.username\\\" class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n    <li *ngIf=\\\"user?.email\\\" class=\\\"list-group-item\\\">E-mail: {{user.email}}</li>\\n  </ul>\\n  <div class=\\\"table-responsive\\\" *ngIf=\\\"usersToApprove\\\">\\n    <h4 [style.margin-bottom.px]=\\\"20\\\">Approve users registration:</h4>\\n    <table class=\\\"table\\\">\\n      <tr>\\n        <th>Username</th>\\n        <th>E-mail</th>\\n        <th>Is approved</th>\\n        <th></th>\\n      </tr>\\n      <tr *ngFor=\\\"let user of usersToApprove\\\">\\n        <td>{{user.username}}</td>\\n        <td>{{user.email}}</td>\\n        <td>{{user.approved}}</td>\\n        <td>\\n          <button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"approveRegistrationRequest(user._id)\\\">Approve</button>\\n          <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteRequest(user._id)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages/module/flash-messages.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user;\n  usersToApprove = null;\n\n  constructor(\n    private authService: AuthService,\n    private flashMessages: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile()\n      .subscribe(\n        profile => {\n          this.user = profile.user;\n          if(profile.user.isAdmin) {\n            console.log('user is admin');\n            this.getNotApprovedProfiles();\n          }\n        }\n      );\n  }\n\n  // Get Not Approved Profiles\n  getNotApprovedProfiles() {\n    this.authService.getNotApprovedProfiles()\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.flashMessages.show('Can not get profiles', {cssClass: 'alert-danger', timeout: 1200});\n          }\n          else {\n            this.usersToApprove = data.users;\n          }\n        }\n      );\n  }\n\n  // Approve Request\n  approveRegistrationRequest(usersId) {\n    const id = {\n      usersId: usersId\n    }\n    this.authService.approveRequest(id)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.flashMessages.show(data.msg, {cssClass: 'alert-danger', timeout: 1200});\n          }\n          else {\n            this.flashMessages.show(data.msg, {cssClass: 'alert-success', timeout: 1000});\n            this.getNotApprovedProfiles();\n          }\n        }\n      );\n  }\n\n  // Delete Request\n  deleteRequest(usersId) {\n    this.authService.deleteRequest(usersId)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            this.flashMessages.show(data.msg, {cssclass: 'alert-danger', timeout: 1200});\n          }\n          else {\n            this.flashMessages.show(data.msg, {cssClass: 'alert-success', timeout: 1000});\n            this.getNotApprovedProfiles();\n          }\n        }\n      );\n  }\n\n}\n","module.exports = \":host {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n    background-image: url('register_pic.jpg');\\r\\n    width: 100vw;\\r\\n    height: 100vh;\\r\\n    background-position: center center;\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.form {\\r\\n    width: 300px;\\r\\n    background-color: rgb(216, 213, 213);\\r\\n    border-radius: 20px;\\r\\n    opacity: .96;\\r\\n}\\r\\n\\r\\n.heading-text {\\r\\n    text-align: center;\\r\\n    color: rgb(124, 124, 124);\\r\\n}\\r\\n\\r\\n.submit-btn {\\r\\n    margin-top: 25px;\\r\\n    text-align: center;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n    color: rgb(124, 124, 124);\\r\\n    margin: 0 20px 0 20px;\\r\\n}\\r\\n\\r\\nspan {\\r\\n    color: rgb(124, 124, 124);\\r\\n}\\r\\n\\r\\nul {\\r\\n    list-style-type: none;\\r\\n    margin-left: 6px;\\r\\n    padding-left: 0;\\r\\n}\\r\\n\\r\\n.error-message {\\r\\n    background-color: rgb(231, 136, 136);\\r\\n    color: rgb(201, 26, 26);\\r\\n    min-width: 400px;\\r\\n    text-align: center;\\r\\n    height: 50px;\\r\\n    line-height: 50px;\\r\\n    font-size: 20px;\\r\\n    border-radius: 5px;\\r\\n    opacity: .98;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.glyphicon-remove {\\r\\n    color: rgb(245, 68, 68);\\r\\n}\\r\\n\\r\\n.glyphicon-ok {\\r\\n    color: rgb(29, 153, 29);\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"errorMsg\\\" class=\\\"error-message\\\">\\n  {{errorMsg}}\\n</div>\\n\\n<div *ngIf=\\\"!submitted\\\" class=\\\"form\\\">\\n  <span class=\\\"heading-text\\\"><h1 [style.font-weight]=\\\"600\\\">Register</h1></span>\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"center-block\\\">E-mail:</label>\\n      <div [ngClass]=\\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) \\n                                    || (!emailValid && form.controls.email.dirty), \\n        'has-success': !form.controls.email.errors && emailValid}\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"*Enter e-mail\\\" name=\\\"email\\\" formControlName=\\\"email\\\" \\n          (input)=\\\"checkEmail()\\\">\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">\\n              <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> E-mail is required\\n          </li>\\n          <li *ngIf=\\\"(form.controls.email.errors?.minlength || form.controls.email.errors?.maxlength) && form.controls.email.dirty\\\">\\n              <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span>\\n              E-mail must be between 5 and 30 characters long\\n          </li>\\n          <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty && !form.controls.email.errors?.required\\\">\\n              <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span>\\n              E-mail must be in a valid format\\n          </li>\\n          <li *ngIf=\\\"!form.controls.email.errors && emailMsg\\\">\\n            <span [ngClass]=\\\"{'glyphicon glyphicon-ok': emailValid}\\\"></span>\\n            <span [ngClass]=\\\"{'glyphicon glyphicon-remove': !emailValid}\\\"></span>\\n            {{emailMsg}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"center-block\\\">Username:</label>\\n      <div [ngClass]=\\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty)\\n                                    || (!usernameValid && form.controls.username.dirty), \\n      'has-success': !form.controls.username.errors && usernameValid}\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"*Enter username\\\" name=\\\"username\\\" formControlName=\\\"username\\\"\\n          (input)=\\\"checkUsername()\\\">\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> Username is required\\n          </li>\\n          <li *ngIf=\\\"(form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength) \\n              && form.controls.username.dirty\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> \\n            Username must be between 5 and 30 characters long\\n          </li>\\n          <li *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty \\n                      && !form.controls.username.errors?.required\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> \\n            Username can't contain special characters\\n          </li>\\n          <li *ngIf=\\\"!form.controls.username.errors && usernameMsg\\\">\\n            <span [ngClass]=\\\"{'glyphicon glyphicon-ok': usernameValid}\\\"></span>\\n            <span [ngClass]=\\\"{'glyphicon glyphicon-remove': !usernameValid}\\\"></span>\\n            {{usernameMsg}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"center-block\\\">Password:</label>\\n      <div [ngClass]=\\\"{'has-error': (form.controls.password.errors && form.controls.password.dirty), \\n      'has-success': !(form.controls.password.errors)}\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"*Enter password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> Password is required\\n          </li>\\n          <li *ngIf=\\\"(form.controls.password.errors?.minlength || form.controls.password.errors?.maxlength) \\n              && form.controls.password.dirty\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span> \\n            Password must be at least 8, but not more than 30 characters long\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"center-block\\\">Confirm password:</label>\\n      <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty)\\n                      || (form.errors?.matchingPasswords && form.controls.confirm.dirty) ,\\n        'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"*Confirm password\\\" name=\\\"confirm\\\" \\n          formControlName=\\\"confirm\\\">\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span>\\n            This field is required\\n          </li>\\n          <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">\\n            <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" [style.color]=\\\"'rgb(245, 68, 68)'\\\"></span>\\n            These passwords don't match\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"submit-btn\\\">\\n      <input [disabled]=\\\"!form.valid || submitted || !emailValid || !usernameValid\\\" \\n        type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Register me!\\\">\\n    </div>\\n    \\n  </form>\\n</div>\\n\\n<div *ngIf=\\\"submitted\\\" [style.color]=\\\"'white'\\\" [style.font-size.px]=\\\"25\\\">\\n  Just a few seconds, please...\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n  errorMsg = null;\n  submitted = false;\n  usernameValid;\n  usernameMsg;\n  emailValid;\n  emailMsg;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { \n    this.createForm();\n  }\n\n  ngOnInit() { \n  }\n\n  // Regexp Email Validation \n  validateEmail(control) {\n    let regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if(regexp.test(control.value)) {\n      return null;\n    }\n    else {\n      return { 'validateEmail': true }\n    }\n  }\n\n  // Validate Username\n  validateUsername(control) {\n    let regexp = new RegExp(/^[a-zA-Z0-9]+$/);\n    if(regexp.test(control.value)) {\n      return null;\n    }\n    else {\n      return { 'validateUsername': true }\n    }\n  }\n\n  createForm() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(30), this.validateEmail] ],\n      username: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(30), this.validateUsername] ],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(30)] ],\n      confirm: [ '', Validators.required ]\n    }, \n    { validator: this.matchingPasswords('password', 'confirm') }\n    );\n  }\n\n  // Matching Password and Confirm Password\n  matchingPasswords(password, confirm) {\n    return (group: FormGroup) => {\n      if(group.controls[password].value === group.controls[confirm].value) {\n        return null;\n      }\n      else {\n        return { 'matchingPasswords': true }\n      }\n    }\n  }\n\n  // Check if E-mail Exists in DB already\n  checkEmail() {\n    let email = this.form.get('email').value;\n    this.authService.checkEmail(email)\n      .subscribe(\n        data => {\n          if(data.success) {\n            this.emailValid = true;\n            this.emailMsg = data.msg;\n          }\n          else {\n            this.emailValid = false;\n            this.emailMsg = data.msg;\n          } \n        }\n      );\n  }\n\n  // Check if Username exists in DB already\n  checkUsername() {\n    let username = this.form.get('username').value;\n    this.authService.checkUsername(username)\n      .subscribe(\n        data => {\n          if(data.success) {\n            this.usernameValid = true;\n            this.usernameMsg = data.msg;\n          }\n          else {\n            this.usernameValid = false;\n            this.usernameMsg = data.msg;\n          }\n        }\n      );\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    const user = {\n      email: this.form.get('email').value,\n      username: this.form.get('username').value,\n      password: this.form.get('password').value,\n    }\n\n    this.authService.registerUser(user)\n      .subscribe(\n        data => {\n          if(data.success) {\n            console.log(data.msg);\n            this.errorMsg = null;\n            this.router.navigate(['/login']);\n          }\n          else {\n            console.log(data.msg);\n            this.errorMsg = data.msg;\n            this.submitted = false;\n            setTimeout(() => {\n              this.errorMsg = null;  \n            }, 3000);\n          }\n        }\n      );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2 class=\\\"page-header\\\">User's Profile</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngIf=\\\"username\\\">Username: {{username}}</li>\\n    <li class=\\\"list-group-item\\\" *ngIf=\\\"email\\\">E-mail: {{email}}</li>\\n  </ul>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"goToBlogs()\\\">Go to blogs</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BlogService } from '../../services/blog.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  username;\n  email;\n\n  constructor(\n    private blogService: BlogService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap\n      .subscribe(\n        params => {\n          this.username = params.get('username');\n        }\n      );\n      this.getUser();\n  }\n\n  // Go to Blogs\n  goToBlogs() {\n    this.router.navigate(['/blog']);\n  }\n\n  // Fetching User's Data\n  getUser() {\n    this.blogService.getProfileByUsername(this.username)\n      .subscribe(\n        data => {\n          if(!data.success) {\n            console.log(data.msg);\n          }\n          else {\n            console.log(data);\n            this.username = data.user.username;\n            this.email = data.user.email;\n          }\n        }\n      );\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatCheckboxModule} from '@angular/material';\r\nimport {MatButtonModule} from '@angular/material';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatCheckboxModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule\r\n  ],\r\n  exports: [\r\n    MatCheckboxModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class MaterialComponentsModule { }","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages/module/flash-messages.service';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  redirectUrl;\n\n  constructor(\n    private authService: AuthService,\n    private flashMessages: FlashMessagesService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    router: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    if(!this.authService.loggedIn()) {\n      this.redirectUrl = state.url;\n      this.flashMessages.show('You have to be logged in to see this page. Redirecting to Login Page...', \n      { cssClass: 'alert-danger', timeout: 2500 });\n      setTimeout(() => {\n        this.router.navigate(['/login']);\n      }, 3500);\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/Rx';\nimport { Observable } from 'rxjs/Observable';\nimport { RequestOptions } from '@angular/http';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n@Injectable()\nexport class AuthService {\n  //domain = 'http://localhost:8080/';\n  domain = '';\n  authToken;\n  user;\n  //username\n  options;\n\n  constructor(\n    private http: Http\n  ) { }\n\n  // Register User\n  registerUser(user): Observable<any> {\n    return this.http.post(this.domain + 'authentication/register', user)//, {headers: headers})\n      .map(res => res.json());\n  }\n\n  // Check if E-mail exists in DB already\n  checkEmail(email) {\n    return this.http.get(this.domain + 'authentication/checkEmail/' + email)\n      .map(res => res.json());\n  }\n\n  // Check if Username exists in DB already\n  checkUsername(username) {\n    return this.http.get(this.domain + 'authentication/checkUsername/' + username)\n      .map(res => res.json());\n  }\n\n  // Store User's data to localStorage\n  storeUserData(token, user) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    //localStorage.setItem('username', user.username);\n    this.authToken = token;\n    this.user = JSON.stringify(user);\n  }\n\n  // Login User\n  loginUser(user) {\n    return this.http.post(this.domain + 'authentication/login', user)//, {headers: headers})\n      .map(res => res.json());\n  }\n\n  // Load Token\n  loadToken() {\n    const token = localStorage.getItem('token');\n    this.authToken = token;\n  }\n\n  // Create Header\n  createAuthenticationHeader() {\n    this.loadToken();\n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'authorization': this.authToken\n      })\n    });\n  }\n\n  // Get Profile\n  getProfile() {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'authentication/profile', this.options)\n      .map(res => res.json());\n  }\n\n  // Logout\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  // Check if User Has Valid Token\n  loggedIn() {\n    return tokenNotExpired('token');\n  }\n\n  // Get Users That Are Not Approved\n  getNotApprovedProfiles() {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'authentication/notApprovedProfiles', this.options)\n      .map(res => res.json());\n  }\n\n  // Approve Registration Request\n  approveRequest(id) {\n    this.createAuthenticationHeader();\n    return this.http.put(this.domain + 'authentication/approveRequest/', id, this.options)\n      .map(res => res.json());\n  }\n\n  // Delete Request\n  deleteRequest(usersId) {\n    this.createAuthenticationHeader();\n    return this.http.delete(this.domain + 'authentication/deleteRequest/' + usersId, this.options)\n      .map(res => res.json());\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { RequestOptions, Headers, Http } from '@angular/http';\nimport { URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class BlogService {\n\n  //domain = 'http://localhost:8080/';\n  domain = '';\n  options;\n\n  constructor(\n    private authService: AuthService,\n    private http: Http\n  ) { }\n\n  // Create Header\n  createAuthenticationHeader() {\n    this.authService.loadToken();\n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'authorization': this.authService.authToken\n      })\n    });\n  }\n\n  // Save New Blog To Database\n  postNewBlogPost(blog) {\n    this.createAuthenticationHeader();\n    return this.http.post(this.domain + 'blogs/newBlog', blog, this.options)\n      .map(res => res.json());\n  }\n\n  // Get All Blogs From DB\n  getAllBlogs() {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'blogs/allBlogs', this.options)\n      .map(res => res.json());\n  }\n\n  getByCreator(creator, title) {\n    this.createAuthenticationHeader();\n\t\n    return this.http.get(this.domain + 'blogs/searchByCreator/?createdBy='+creator+'&title='+title, this.options)//requestOptions)\n      .map(res => res.json());\n  }\n\n  // Get Blog To Edit\n  getBlogToEdit(id) {\n    this.authService.createAuthenticationHeader();\n    return this.http.get(this.domain + 'blogs/singleBlog/' + id, this.options)\n      .map(res => res.json());\n  }\n\n  // Update Blog\n  updateBlog(blog) {\n    this.createAuthenticationHeader();\n    return this.http.put(this.domain + 'blogs/updateBlog', blog, this.options)\n      .map(res => res.json());\n  }\n\n  // Delete Blog\n  deleteBlog(id) {\n    this.createAuthenticationHeader();\n    return this.http.delete(this.domain + 'blogs/deleteBlog/' + id, this.options)\n      .map(res => res.json());\n  }\n\n  // Like Blog\n  likeBlog(object) {\n    this.createAuthenticationHeader();\n    return this.http.put(this.domain + 'blogs/likeBlog', object, this.options)\n      .map(res => res.json());\n  }\n\n  // Dislike Blog\n  dislikeBlog(object) {\n    this.createAuthenticationHeader();\n    return this.http.put(this.domain + 'blogs/dislikeBlog', object, this.options)\n      .map(res => res.json());\n  }\n\n  // Get Profile of Likers/Dislikers\n  getProfileByUsername(username) {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'blogs/profile/' + username, this.options)\n      .map(res => res.json());\n  }\n\n  // Post Comment\n  comment(comment) {\n    this.createAuthenticationHeader();\n    return this.http.post(this.domain + 'blogs/comment', comment, this.options)\n      .map(res => res.json());\n  }\n\n  // Delete Comment\n  deleteComment(id) {\n    this.createAuthenticationHeader();\n    return this.http.delete(this.domain + 'blogs/deleteComment/' + id, this.options)\n      .map(res => res.json());\n  }\n\n  // Get Comment\n  getComment(id) {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'blogs/getComment/' + id, this.options)\n      .map(res => res.json());\n  }\n\n  // Edit Comment\n  editComment(object) {\n    this.createAuthenticationHeader();\n    return this.http.put(this.domain + 'blogs/editComment', object, this.options)\n      .map(res => res.json());\n  }\n\n\n  // Get Titles for Search\n  getTitles(title) { \n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'blogs/searchTitles/' + title, this.options)\n      .map(res => res.json());\n  }\n\n  // Get Authors for Search\n  getAuthors(author) {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'blogs/searchAuthors/' + author, this.options)\n      .map(res => res.json());\n  }\n\n  // Search for Blogs\n  searchBlogs(title, author) {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'blogs/searchBlogs/?title='+title+'&author='+author, this.options)\n      .map(res => res.json());\n  }\n\n}\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, FormControl } from '@angular/forms';\r\n\r\nfunction validateComment(c: FormControl) {\r\n    let regexp = new RegExp(/^\\s+$/);\r\n    return regexp.test(c.value) ? {\r\n        validateComment: {\r\n            valid: false\r\n        }\r\n    } : null\r\n}\r\n\r\n@Directive({\r\n    selector: '[validateComment]',\r\n    providers : [\r\n        { provide: NG_VALIDATORS, useValue: validateComment, multi: true }\r\n    ]\r\n})\r\n\r\nexport class ValidateComment { }","import { Injectable } from '@angular/core';\nimport { navbarItems } from '../navbar-items';\nimport { AuthService } from './auth.service';\n\nexport interface Item {\n  name?: string,\n  route?: string,\n  show?: boolean\n}\n\n@Injectable()\nexport class ConfigService {\n  showItem = this.authService.loggedIn();\n  navbarItems = [\n    { name: 'Dashboard', route: '/dashboard', show: this.showItem },\n    { name: 'Profile', route: '/profile', show: this.showItem },\n    { name: 'Nutrition Manager', route: '/nutritionmanager', show: this.showItem },\n    { name: 'Blog', route: '/blog', show: this.showItem },\n    { name: 'Login', route: '/login', show: !this.showItem },\n    { name: 'Register', route: '/register', show: !this.showItem },\n  ];\n  showMenu = false;\n  \n  constructor(\n    private authService: AuthService\n  ) { }\n\n  // Update Show Property of the navbarItems\n  updateShowProperty() {\n    let len = this.navbarItems.length;\n      for(let i=0; i<len-2; i++) {\n        this.navbarItems[i].show = this.authService.loggedIn();\n      }\n      for(let i=len-2; i<len; i++) {\n        this.navbarItems[i].show = !this.authService.loggedIn();\n      }\n  }\n\n}\n","import { Directive, HostListener, Output, EventEmitter } from '@angular/core';\r\n\r\nenum KEY_CODE {\r\n    DOWN_ARROW = 40,\r\n    UP_ARROW = 38\r\n}\r\n\r\n@Directive({\r\n    selector: '[keydownEvent]'\r\n})\r\n\r\nexport class KeydownEventDirective {\r\n    \r\n\r\n    @Output() public keydownEvent = new EventEmitter();\r\n\r\n    @HostListener('keydown', ['$event'])\r\n        public onKeydown(event: KeyboardEvent) {\r\n            if(event.keyCode === KEY_CODE.DOWN_ARROW) {\r\n                this.keydownEvent.emit('downArrow');\r\n            }\r\n            if(event.keyCode === KEY_CODE.UP_ARROW) {\r\n                this.keydownEvent.emit('upArrow');\r\n            }\r\n        }\r\n}","import { Directive, ElementRef, Output, EventEmitter, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[clickOutside]',\r\n})\r\nexport class ClickOutsideDirective {\r\n    @Output() public clickOutside = new EventEmitter();\r\n    constructor(private _elementRef: ElementRef) {\r\n\r\n    }\r\n\r\n    @HostListener('document:click', ['$event.target'])\r\n    public onClick(targetElement) {\r\n        const isClickedInside = this._elementRef.nativeElement.contains(targetElement);\r\n        if (!isClickedInside) {\r\n            console.log('clicked outside');\r\n            this.clickOutside.emit(null);\r\n        }\r\n        else {\r\n            console.log('clicked inside');\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router/src/interfaces';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages/module/flash-messages.service';\n\n@Injectable()\nexport class LoginGuardService implements CanActivate {\n\n  constructor(\n    private authService : AuthService,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) { }\n\n  canActivate() {\n    if(this.authService.loggedIn()) {\n      this.flashMessages.show('You are already logged in. Redirecting to Home Page...', \n      {cssClass: 'alert-warning', timeout: 3500});\n      setTimeout(() => {\n        this.router.navigate(['/home']);\n      }, 3500);\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { RequestOptions, Headers, Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NutritionService {\n  //domain = 'http://localhost:8080/';\n  domain = '';\n  options;\n\n  constructor(\n    private authService: AuthService,\n    private http: Http\n  ) { }\n\n  // creating authentication header\n  createAuthenticationHeader() {\n    this.authService.loadToken();\n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'authorization': this.authService.authToken\n      })\n    });\n  }\n\n  // post user's physical info to database\n  addPhysicalInfo(info) {\n    this.createAuthenticationHeader();\n    return this.http.post(this.domain + 'nutrition/postPhysicalInfo', info, this.options)\n      .map(res => res.json());\n  }\n\n  // check if user has already provided physical info and get it for possible update\n  checkForInfo() {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'nutrition/getInfo', this.options)\n      .map(res => res.json());\n  }\n\n  // edit user's physical info\n  editInfo(editedInfo) {\n    this.createAuthenticationHeader();\n    return this.http.put(this.domain + 'nutrition/editInfo', editedInfo, this.options)\n      .map(res => res.json());\n  }\n\n  // add or edit meals\n  provideMeals(meals) {\n    this.createAuthenticationHeader();\n    return this.http.put(this.domain + 'nutrition/editMeals', meals, this.options)\n      .map(res => res.json());\n  }\n\n  // check for food in groceries collection\n  checkForFood(food) {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'nutrition/checkForFood/' + food, this.options)\n      .map(res => res.json());\n  }\n\n  // get all groceries containing sent text in the name\n  getMathedGroceries(food) {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'nutrition/searchGroceries/' + food, this.options)\n      .map(res => res.json());\n  }\n  \n  // push today's breakfast to database\n  pushTodaysMeal(meal) {\n    this.createAuthenticationHeader();\n    return this.http.put(this.domain + 'nutrition/pushMeal', meal, this.options)\n      .map(res => res.json());\n  }\n  \n  // get meals info\n  getMealsInfo(date) {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'nutrition/getMealsInfo/' + date, this.options)\n      .map(res => res.json());\n  }\n\n  // delete food from meal(breakfast,lunch,dinner or additionaly) for specific date\n  deleteFood(food, quant, meal, date) {\n    this.createAuthenticationHeader();\n    return this.http.delete(this.domain + 'nutrition/deleteFood/?food='+food+'&quant='+quant+'&meal='+meal+'&date='+date,\n    this.options)\n      .map(res => res.json());\n  }\n\n  // check if meals is empty and delete it if it is\n  deleteMeal(date) {\n    this.createAuthenticationHeader();\n    return this.http.delete(this.domain + 'nutrition/deleteMeal/' + date, this.options)\n      .map(res => res.json());\n  }\n\n  // update single quantity\n  updateSingleQuantity(object) {\n    this.createAuthenticationHeader();\n    return this.http.put(this.domain + 'nutrition/editSingleFood', object, this.options)\n      .map(res => res.json());\n  }\n\n  // get meals info for period \n  getSomeMeals(period) {\n    this.createAuthenticationHeader();\n    return this.http.get(this.domain + 'nutrition/getSomeMeals/' + period, this.options)\n      .map(res => res.json());\n  }\n\n  // remove meal document for date passed\n  removeMeal(date) {\n    this.createAuthenticationHeader();\n    return this.http.delete(this.domain + 'nutrition/removeMeal/' + date, this.options)\n      .map(res => res.json());\n  }\n\n  // search groceries by food name\n  searchGroceries(foodName) {\n    this.createAuthenticationHeader();\n    console.log('from nutrition service, foodName= '+foodName);\n    return this.http.get(this.domain + 'nutrition/searchGroceriesByName/' + foodName, this.options)\n      .map(res => res.json());\n  }\n\n  sss() {\n    console.log('sss called - msg from nutr service')\n    return this.http.get(this.domain + 'proba/bbb/?username=senka&date=20-05-2018')\n      .map(res => res.json());\n  }\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ScreenService {\n  largeBreakpoint = 985;\n  screenHeight: number;\n  screenWidth: number;\n\n  constructor() {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    window.addEventListener('resize', (event) => this.onResize(event));\n   }\n\n  isLarge(): boolean {\n    return this.screenWidth > this.largeBreakpoint;\n  }\n\n  onResize($event) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}